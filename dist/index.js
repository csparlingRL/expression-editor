!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=36)}([function(e,t,n){e.exports=n(26)()},function(e,t,n){"use strict";e.exports=n(35)},function(e,t,n){"use strict";var r=n(16),o="object"==typeof self&&self&&self.Object===Object&&self,i=(r.a||o||Function("return this")()).Symbol,a=Object.prototype,u=a.hasOwnProperty,l=a.toString,c=i?i.toStringTag:void 0;var s=function(e){var t=u.call(e,c),n=e[c];try{e[c]=void 0;var r=!0}catch(e){}var o=l.call(e);return r&&(t?e[c]=n:delete e[c]),o},f=Object.prototype.toString;var d=function(e){return f.call(e)},p="[object Null]",h="[object Undefined]",m=i?i.toStringTag:void 0;var v=function(e){return null==e?void 0===e?h:p:m&&m in Object(e)?s(e):d(e)};var y=function(e,t){return function(n){return e(t(n))}}(Object.getPrototypeOf,Object);var g=function(e){return null!=e&&"object"==typeof e},b="[object Object]",w=Function.prototype,x=Object.prototype,k=w.toString,E=x.hasOwnProperty,_=k.call(Object);t.a=function(e){if(!g(e)||v(e)!=b)return!1;var t=y(e);if(null===t)return!0;var n=E.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&k.call(n)==_}},function(e,t,n){"use strict";n.r(t);var r=n(1),o=n(0),i=n.n(o),a=i.a.shape({trySubscribe:i.a.func.isRequired,tryUnsubscribe:i.a.func.isRequired,notifyNestedSubs:i.a.func.isRequired,isSubscribed:i.a.func.isRequired}),u=i.a.shape({subscribe:i.a.func.isRequired,dispatch:i.a.func.isRequired,getState:i.a.func.isRequired});function l(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"store",n=arguments[1]||t+"Subscription",o=function(e){function o(n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o);var i=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.call(this,n,r));return i[t]=n.store,i}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(o,e),o.prototype.getChildContext=function(){var e;return(e={})[t]=this[t],e[n]=null,e},o.prototype.render=function(){return r.Children.only(this.props.children)},o}(r.Component);return o.propTypes={store:u.isRequired,children:i.a.element.isRequired},o.childContextTypes=((e={})[t]=u.isRequired,e[n]=a,e),o}var c=l(),s=n(17),f=n.n(s),d=n(4),p=n.n(d);var h=null,m={notify:function(){}};var v=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.store=t,this.parentSub=n,this.onStateChange=r,this.unsubscribe=null,this.listeners=m}return e.prototype.addNestedSub=function(e){return this.trySubscribe(),this.listeners.subscribe(e)},e.prototype.notifyNestedSubs=function(){this.listeners.notify()},e.prototype.isSubscribed=function(){return Boolean(this.unsubscribe)},e.prototype.trySubscribe=function(){var e,t;this.unsubscribe||(this.unsubscribe=this.parentSub?this.parentSub.addNestedSub(this.onStateChange):this.store.subscribe(this.onStateChange),this.listeners=(e=[],t=[],{clear:function(){t=h,e=h},notify:function(){for(var n=e=t,r=0;r<n.length;r++)n[r]()},get:function(){return t},subscribe:function(n){var r=!0;return t===e&&(t=e.slice()),t.push(n),function(){r&&e!==h&&(r=!1,t===e&&(t=e.slice()),t.splice(t.indexOf(n),1))}}}))},e.prototype.tryUnsubscribe=function(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=null,this.listeners.clear(),this.listeners=m)},e}(),y=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};var g=0,b={};function w(){}function x(e){var t,n,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=o.getDisplayName,l=void 0===i?function(e){return"ConnectAdvanced("+e+")"}:i,c=o.methodName,s=void 0===c?"connectAdvanced":c,d=o.renderCountProp,h=void 0===d?void 0:d,m=o.shouldHandleStateChanges,x=void 0===m||m,k=o.storeKey,E=void 0===k?"store":k,_=o.withRef,C=void 0!==_&&_,T=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(o,["getDisplayName","methodName","renderCountProp","shouldHandleStateChanges","storeKey","withRef"]),S=E+"Subscription",P=g++,O=((t={})[E]=u,t[S]=a,t),N=((n={})[S]=a,n);return function(t){p()("function"==typeof t,"You must pass a component to the function returned by "+s+". Instead received "+JSON.stringify(t));var n=t.displayName||t.name||"Component",o=l(n),i=y({},T,{getDisplayName:l,methodName:s,renderCountProp:h,shouldHandleStateChanges:x,storeKey:E,withRef:C,displayName:o,wrappedComponentName:n,WrappedComponent:t}),a=function(n){function a(e,t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a);var r=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,n.call(this,e,t));return r.version=P,r.state={},r.renderCount=0,r.store=e[E]||t[E],r.propsMode=Boolean(e[E]),r.setWrappedInstance=r.setWrappedInstance.bind(r),p()(r.store,'Could not find "'+E+'" in either the context or props of "'+o+'". Either wrap the root component in a <Provider>, or explicitly pass "'+E+'" as a prop to "'+o+'".'),r.initSelector(),r.initSubscription(),r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(a,n),a.prototype.getChildContext=function(){var e,t=this.propsMode?null:this.subscription;return(e={})[S]=t||this.context[S],e},a.prototype.componentDidMount=function(){x&&(this.subscription.trySubscribe(),this.selector.run(this.props),this.selector.shouldComponentUpdate&&this.forceUpdate())},a.prototype.componentWillReceiveProps=function(e){this.selector.run(e)},a.prototype.shouldComponentUpdate=function(){return this.selector.shouldComponentUpdate},a.prototype.componentWillUnmount=function(){this.subscription&&this.subscription.tryUnsubscribe(),this.subscription=null,this.notifyNestedSubs=w,this.store=null,this.selector.run=w,this.selector.shouldComponentUpdate=!1},a.prototype.getWrappedInstance=function(){return p()(C,"To access the wrapped instance, you need to specify { withRef: true } in the options argument of the "+s+"() call."),this.wrappedInstance},a.prototype.setWrappedInstance=function(e){this.wrappedInstance=e},a.prototype.initSelector=function(){var t=e(this.store.dispatch,i);this.selector=function(e,t){var n={run:function(r){try{var o=e(t.getState(),r);(o!==n.props||n.error)&&(n.shouldComponentUpdate=!0,n.props=o,n.error=null)}catch(e){n.shouldComponentUpdate=!0,n.error=e}}};return n}(t,this.store),this.selector.run(this.props)},a.prototype.initSubscription=function(){if(x){var e=(this.propsMode?this.props:this.context)[S];this.subscription=new v(this.store,e,this.onStateChange.bind(this)),this.notifyNestedSubs=this.subscription.notifyNestedSubs.bind(this.subscription)}},a.prototype.onStateChange=function(){this.selector.run(this.props),this.selector.shouldComponentUpdate?(this.componentDidUpdate=this.notifyNestedSubsOnComponentDidUpdate,this.setState(b)):this.notifyNestedSubs()},a.prototype.notifyNestedSubsOnComponentDidUpdate=function(){this.componentDidUpdate=void 0,this.notifyNestedSubs()},a.prototype.isSubscribed=function(){return Boolean(this.subscription)&&this.subscription.isSubscribed()},a.prototype.addExtraProps=function(e){if(!(C||h||this.propsMode&&this.subscription))return e;var t=y({},e);return C&&(t.ref=this.setWrappedInstance),h&&(t[h]=this.renderCount++),this.propsMode&&this.subscription&&(t[S]=this.subscription),t},a.prototype.render=function(){var e=this.selector;if(e.shouldComponentUpdate=!1,e.error)throw e.error;return Object(r.createElement)(t,this.addExtraProps(e.props))},a}(r.Component);return a.WrappedComponent=t,a.displayName=o,a.childContextTypes=N,a.contextTypes=O,a.propTypes=O,f()(a,t)}}var k=Object.prototype.hasOwnProperty;function E(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}function _(e,t){if(E(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(var o=0;o<n.length;o++)if(!k.call(t,n[o])||!E(e[n[o]],t[n[o]]))return!1;return!0}var C=n(8);n(2);function T(e){return function(t,n){var r=e(t,n);function o(){return r}return o.dependsOnOwnProps=!1,o}}function S(e){return null!==e.dependsOnOwnProps&&void 0!==e.dependsOnOwnProps?Boolean(e.dependsOnOwnProps):1!==e.length}function P(e,t){return function(t,n){n.displayName;var r=function(e,t){return r.dependsOnOwnProps?r.mapToProps(e,t):r.mapToProps(e)};return r.dependsOnOwnProps=!0,r.mapToProps=function(t,n){r.mapToProps=e,r.dependsOnOwnProps=S(e);var o=r(t,n);return"function"==typeof o&&(r.mapToProps=o,r.dependsOnOwnProps=S(o),o=r(t,n)),o},r}}var O=[function(e){return"function"==typeof e?P(e):void 0},function(e){return e?void 0:T(function(e){return{dispatch:e}})},function(e){return e&&"object"==typeof e?T(function(t){return Object(C.bindActionCreators)(e,t)}):void 0}];var N=[function(e){return"function"==typeof e?P(e):void 0},function(e){return e?void 0:T(function(){return{}})}],j=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function R(e,t,n){return j({},n,e,t)}var M=[function(e){return"function"==typeof e?function(e){return function(t,n){n.displayName;var r=n.pure,o=n.areMergedPropsEqual,i=!1,a=void 0;return function(t,n,u){var l=e(t,n,u);return i?r&&o(l,a)||(a=l):(i=!0,a=l),a}}}(e):void 0},function(e){return e?void 0:function(){return R}}];function I(e,t,n,r){return function(o,i){return n(e(o,i),t(r,i),i)}}function D(e,t,n,r,o){var i=o.areStatesEqual,a=o.areOwnPropsEqual,u=o.areStatePropsEqual,l=!1,c=void 0,s=void 0,f=void 0,d=void 0,p=void 0;function h(o,l){var h,m,v=!a(l,s),y=!i(o,c);return c=o,s=l,v&&y?(f=e(c,s),t.dependsOnOwnProps&&(d=t(r,s)),p=n(f,d,s)):v?(e.dependsOnOwnProps&&(f=e(c,s)),t.dependsOnOwnProps&&(d=t(r,s)),p=n(f,d,s)):y?(h=e(c,s),m=!u(h,f),f=h,m&&(p=n(f,d,s)),p):p}return function(o,i){return l?h(o,i):(f=e(c=o,s=i),d=t(r,s),p=n(f,d,s),l=!0,p)}}function F(e,t){var n=t.initMapStateToProps,r=t.initMapDispatchToProps,o=t.initMergeProps,i=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(t,["initMapStateToProps","initMapDispatchToProps","initMergeProps"]),a=n(e,i),u=r(e,i),l=o(e,i);return(i.pure?D:I)(a,u,l,e,i)}var U=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function A(e,t,n){for(var r=t.length-1;r>=0;r--){var o=t[r](e);if(o)return o}return function(t,r){throw new Error("Invalid value of type "+typeof e+" for "+n+" argument when connecting component "+r.wrappedComponentName+".")}}function L(e,t){return e===t}var z=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.connectHOC,n=void 0===t?x:t,r=e.mapStateToPropsFactories,o=void 0===r?N:r,i=e.mapDispatchToPropsFactories,a=void 0===i?O:i,u=e.mergePropsFactories,l=void 0===u?M:u,c=e.selectorFactory,s=void 0===c?F:c;return function(e,t,r){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},u=i.pure,c=void 0===u||u,f=i.areStatesEqual,d=void 0===f?L:f,p=i.areOwnPropsEqual,h=void 0===p?_:p,m=i.areStatePropsEqual,v=void 0===m?_:m,y=i.areMergedPropsEqual,g=void 0===y?_:y,b=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(i,["pure","areStatesEqual","areOwnPropsEqual","areStatePropsEqual","areMergedPropsEqual"]),w=A(e,o,"mapStateToProps"),x=A(t,a,"mapDispatchToProps"),k=A(r,l,"mergeProps");return n(s,U({methodName:"connect",getDisplayName:function(e){return"Connect("+e+")"},shouldHandleStateChanges:Boolean(e),initMapStateToProps:w,initMapDispatchToProps:x,initMergeProps:k,pure:c,areStatesEqual:d,areOwnPropsEqual:h,areStatePropsEqual:v,areMergedPropsEqual:g},b))}}();n.d(t,"Provider",function(){return c}),n.d(t,"createProvider",function(){return l}),n.d(t,"connectAdvanced",function(){return x}),n.d(t,"connect",function(){return z})},function(e,t,n){"use strict";e.exports=function(e,t,n,r,o,i,a,u){if(!e){var l;if(void 0===t)l=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,o,i,a,u],s=0;(l=new Error(t.replace(/%s/g,function(){return c[s++]}))).name="Invariant Violation"}throw l.framesToPop=1,l}}},function(e,t){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";function r(e){return function(){return e}}var o=function(){};o.thatReturns=r,o.thatReturnsFalse=r(!1),o.thatReturnsTrue=r(!0),o.thatReturnsNull=r(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},e.exports=o},function(e,t,n){"use strict";var r=function(e){};e.exports=function(e,t,n,o,i,a,u,l){if(r(t),!e){var c;if(void 0===t)c=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var s=[n,o,i,a,u,l],f=0;(c=new Error(t.replace(/%s/g,function(){return s[f++]}))).name="Invariant Violation"}throw c.framesToPop=1,c}}},function(e,t,n){"use strict";n.r(t);var r=n(2),o=n(9),i={INIT:"@@redux/INIT"};function a(e,t,n){var u;if("function"==typeof t&&void 0===n&&(n=t,t=void 0),void 0!==n){if("function"!=typeof n)throw new Error("Expected the enhancer to be a function.");return n(a)(e,t)}if("function"!=typeof e)throw new Error("Expected the reducer to be a function.");var l=e,c=t,s=[],f=s,d=!1;function p(){f===s&&(f=s.slice())}function h(){return c}function m(e){if("function"!=typeof e)throw new Error("Expected listener to be a function.");var t=!0;return p(),f.push(e),function(){if(t){t=!1,p();var n=f.indexOf(e);f.splice(n,1)}}}function v(e){if(!Object(r.a)(e))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===e.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(d)throw new Error("Reducers may not dispatch actions.");try{d=!0,c=l(c,e)}finally{d=!1}for(var t=s=f,n=0;n<t.length;n++){(0,t[n])()}return e}return v({type:i.INIT}),(u={dispatch:v,subscribe:m,getState:h,replaceReducer:function(e){if("function"!=typeof e)throw new Error("Expected the nextReducer to be a function.");l=e,v({type:i.INIT})}})[o.a]=function(){var e,t=m;return(e={subscribe:function(e){if("object"!=typeof e)throw new TypeError("Expected the observer to be an object.");function n(){e.next&&e.next(h())}return n(),{unsubscribe:t(n)}}})[o.a]=function(){return this},e},u}function u(e,t){var n=t&&t.type;return"Given action "+(n&&'"'+n.toString()+'"'||"an action")+', reducer "'+e+'" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.'}function l(e){for(var t=Object.keys(e),n={},r=0;r<t.length;r++){var o=t[r];0,"function"==typeof e[o]&&(n[o]=e[o])}var a=Object.keys(n);var l=void 0;try{!function(e){Object.keys(e).forEach(function(t){var n=e[t];if(void 0===n(void 0,{type:i.INIT}))throw new Error('Reducer "'+t+"\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.");if(void 0===n(void 0,{type:"@@redux/PROBE_UNKNOWN_ACTION_"+Math.random().toString(36).substring(7).split("").join(".")}))throw new Error('Reducer "'+t+"\" returned undefined when probed with a random type. Don't try to handle "+i.INIT+' or other actions in "redux/*" namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.')})}(n)}catch(e){l=e}return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments[1];if(l)throw l;for(var r=!1,o={},i=0;i<a.length;i++){var c=a[i],s=n[c],f=e[c],d=s(f,t);if(void 0===d){var p=u(c,t);throw new Error(p)}o[c]=d,r=r||d!==f}return r?o:e}}function c(e,t){return function(){return t(e.apply(void 0,arguments))}}function s(e,t){if("function"==typeof e)return c(e,t);if("object"!=typeof e||null===e)throw new Error("bindActionCreators expected an object or a function, instead received "+(null===e?"null":typeof e)+'. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');for(var n=Object.keys(e),r={},o=0;o<n.length;o++){var i=n[o],a=e[i];"function"==typeof a&&(r[i]=c(a,t))}return r}function f(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return 0===t.length?function(e){return e}:1===t.length?t[0]:t.reduce(function(e,t){return function(){return e(t.apply(void 0,arguments))}})}var d=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function p(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){return function(n,r,o){var i,a=e(n,r,o),u=a.dispatch,l={getState:a.getState,dispatch:function(e){return u(e)}};return i=t.map(function(e){return e(l)}),u=f.apply(void 0,i)(a.dispatch),d({},a,{dispatch:u})}}}n.d(t,"createStore",function(){return a}),n.d(t,"combineReducers",function(){return l}),n.d(t,"bindActionCreators",function(){return s}),n.d(t,"applyMiddleware",function(){return p}),n.d(t,"compose",function(){return f})},function(e,t,n){"use strict";(function(e,r){var o,i=n(15);o="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==e?e:r;var a=Object(i.a)(o);t.a=a}).call(this,n(5),n(24)(e))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(11);t.setText=function(e){return function(t,n){t({type:r.SET_TEXT,text:e})}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SET_TEXT="SET_TEXT"},function(e,t,n){"use strict";var r=this&&this.__assign||Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e};Object.defineProperty(t,"__esModule",{value:!0});var o=n(11),i={displayText:"init"};t.default=function(e,t){switch(void 0===e&&(e=i),t.type){case o.SET_TEXT:return r({},e,{displayText:t.text});default:return e}},t.getText=function(e){return"returnedText"}},function(e,t,n){"use strict";e.exports={}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,a,u=function(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),l=1;l<arguments.length;l++){for(var c in n=Object(arguments[l]))o.call(n,c)&&(u[c]=n[c]);if(r){a=r(n);for(var s=0;s<a.length;s++)i.call(n,a[s])&&(u[a[s]]=n[a[s]])}}return u}},function(e,t,n){"use strict";function r(e){var t,n=e.Symbol;return"function"==typeof n?n.observable?t=n.observable:(t=n("observable"),n.observable=t):t="@@observable",t}n.d(t,"a",function(){return r})},function(e,t,n){"use strict";(function(e){var n="object"==typeof e&&e&&e.Object===Object&&e;t.a=n}).call(this,n(5))},function(e,t,n){e.exports=function(){"use strict";var e={childContextTypes:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},t={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},n=Object.defineProperty,r=Object.getOwnPropertyNames,o=Object.getOwnPropertySymbols,i=Object.getOwnPropertyDescriptor,a=Object.getPrototypeOf,u=a&&a(Object);return function l(c,s,f){if("string"!=typeof s){if(u){var d=a(s);d&&d!==u&&l(c,d,f)}var p=r(s);o&&(p=p.concat(o(s)));for(var h=0;h<p.length;++h){var m=p[h];if(!(e[m]||t[m]||f&&f[m])){var v=i(s,m);try{n(c,m,v)}catch(e){}}}return c}return c}}()},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(12);t.expressions=r.default},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),a=n(3),u=n(10),l=function(e){function t(t){var n=e.call(this,t)||this;return n.onAdd=function(){n.props.setText("Add Button Clicked")},n.onClone=function(){n.props.setText("Clone Button Clicked")},n.onRemove=function(){n.props.setText("Remove Button Clicked")},n}return o(t,e),t.prototype.render=function(){return i.createElement("div",null,i.createElement("div",null,i.createElement("input",{type:"button",onClick:this.onAdd,value:"Add"}),i.createElement("input",{type:"button",onClick:this.onClone,value:"Clone"}),i.createElement("input",{type:"button",onClick:this.onRemove,value:"Remove"})))},t}(i.Component);t.default=a.connect(function(e){return{}},function(e){return{setText:function(t){e(u.setText(t))}}})(l)},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=this;Object.defineProperty(t,"__esModule",{value:!0});var a=n(1),u=n(3),l=n(12),c=function(e){function t(t){var n=e.call(this,t)||this,r=t.displayText;return n.state={displayText:r},n}return o(t,e),t.prototype.render=function(){var e=this.props.displayText;return console.log("Rendered View"),a.createElement("div",null,a.createElement("h1",null,e))},t}(a.Component);t.default=u.connect(function(e){return{displayText:e.displayText}},function(e){return{getText:function(t){e(l.getText(i.state))}}})(c)},function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),a=n(3),u=n(20),l=n(19),c=n(10),s=function(e){function t(t){var n=e.call(this,t)||this,r=t.initialText;return r?n.props.dispatch(c.setText(r)):n.props.dispatch(c.setText("No Text Given")),n}return o(t,e),t.prototype.render=function(){this.props.initialText;return i.createElement("div",null,i.createElement("div",{className:"header"},i.createElement("h2",{style:{color:"#FFF"}},"React Expression Editor")),i.createElement("div",{className:"content"},i.createElement("div",null,i.createElement(l.default,null)),i.createElement("div",{className:"expr-edit"},i.createElement(u.default,null))))},t}(i.Component);t.default=a.connect(function(e){return{}})(s)},function(e,t,n){(function(e){!function(t){"use strict";function n(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}function r(e,t){Object.defineProperty(this,"kind",{value:e,enumerable:!0}),t&&t.length&&Object.defineProperty(this,"path",{value:t,enumerable:!0})}function o(e,t,n){o.super_.call(this,"E",e),Object.defineProperty(this,"lhs",{value:t,enumerable:!0}),Object.defineProperty(this,"rhs",{value:n,enumerable:!0})}function i(e,t){i.super_.call(this,"N",e),Object.defineProperty(this,"rhs",{value:t,enumerable:!0})}function a(e,t){a.super_.call(this,"D",e),Object.defineProperty(this,"lhs",{value:t,enumerable:!0})}function u(e,t,n){u.super_.call(this,"A",e),Object.defineProperty(this,"index",{value:t,enumerable:!0}),Object.defineProperty(this,"item",{value:n,enumerable:!0})}function l(e,t,n){var r=e.slice((n||t)+1||e.length);return e.length=t<0?e.length+t:t,e.push.apply(e,r),e}function c(e){var t=void 0===e?"undefined":k(e);return"object"!==t?t:e===Math?"math":null===e?"null":Array.isArray(e)?"array":"[object Date]"===Object.prototype.toString.call(e)?"date":"function"==typeof e.toString&&/^\/.*\//.test(e.toString())?"regexp":"object"}function s(e,t,n,r,f,d,p){f=f||[],p=p||[];var h=f.slice(0);if(void 0!==d){if(r){if("function"==typeof r&&r(h,d))return;if("object"===(void 0===r?"undefined":k(r))){if(r.prefilter&&r.prefilter(h,d))return;if(r.normalize){var m=r.normalize(h,d,e,t);m&&(e=m[0],t=m[1])}}}h.push(d)}"regexp"===c(e)&&"regexp"===c(t)&&(e=e.toString(),t=t.toString());var v=void 0===e?"undefined":k(e),y=void 0===t?"undefined":k(t),g="undefined"!==v||p&&p[p.length-1].lhs&&p[p.length-1].lhs.hasOwnProperty(d),b="undefined"!==y||p&&p[p.length-1].rhs&&p[p.length-1].rhs.hasOwnProperty(d);if(!g&&b)n(new i(h,t));else if(!b&&g)n(new a(h,e));else if(c(e)!==c(t))n(new o(h,e,t));else if("date"===c(e)&&e-t!=0)n(new o(h,e,t));else if("object"===v&&null!==e&&null!==t)if(p.filter(function(t){return t.lhs===e}).length)e!==t&&n(new o(h,e,t));else{if(p.push({lhs:e,rhs:t}),Array.isArray(e)){var w;for(e.length,w=0;w<e.length;w++)w>=t.length?n(new u(h,w,new a(void 0,e[w]))):s(e[w],t[w],n,r,h,w,p);for(;w<t.length;)n(new u(h,w,new i(void 0,t[w++])))}else{var x=Object.keys(e),E=Object.keys(t);x.forEach(function(o,i){var a=E.indexOf(o);a>=0?(s(e[o],t[o],n,r,h,o,p),E=l(E,a)):s(e[o],void 0,n,r,h,o,p)}),E.forEach(function(e){s(void 0,t[e],n,r,h,e,p)})}p.length=p.length-1}else e!==t&&("number"===v&&isNaN(e)&&isNaN(t)||n(new o(h,e,t)))}function f(e,t,n,r){return r=r||[],s(e,t,function(e){e&&r.push(e)},n),r.length?r:void 0}function d(e,t,n){if(e&&t&&n&&n.kind){for(var r=e,o=-1,i=n.path?n.path.length-1:0;++o<i;)void 0===r[n.path[o]]&&(r[n.path[o]]="number"==typeof n.path[o]?[]:{}),r=r[n.path[o]];switch(n.kind){case"A":!function e(t,n,r){if(r.path&&r.path.length){var o,i=t[n],a=r.path.length-1;for(o=0;o<a;o++)i=i[r.path[o]];switch(r.kind){case"A":e(i[r.path[o]],r.index,r.item);break;case"D":delete i[r.path[o]];break;case"E":case"N":i[r.path[o]]=r.rhs}}else switch(r.kind){case"A":e(t[n],r.index,r.item);break;case"D":t=l(t,n);break;case"E":case"N":t[n]=r.rhs}return t}(n.path?r[n.path[o]]:r,n.index,n.item);break;case"D":delete r[n.path[o]];break;case"E":case"N":r[n.path[o]]=n.rhs}}}function p(e,t,n,r){var o=f(e,t);try{r?n.groupCollapsed("diff"):n.group("diff")}catch(e){n.log("diff")}o?o.forEach(function(e){var t=e.kind,r=function(e){var t=e.kind,n=e.path,r=e.lhs,o=e.rhs,i=e.index,a=e.item;switch(t){case"E":return[n.join("."),r,"→",o];case"N":return[n.join("."),o];case"D":return[n.join(".")];case"A":return[n.join(".")+"["+i+"]",a];default:return[]}}(e);n.log.apply(n,["%c "+C[t].text,function(e){return"color: "+C[e].color+"; font-weight: bold"}(t)].concat(E(r)))}):n.log("—— no diff ——");try{n.groupEnd()}catch(e){n.log("—— diff end —— ")}}function h(e,t,n,r){switch(void 0===e?"undefined":k(e)){case"object":return"function"==typeof e[r]?e[r].apply(e,E(n)):e[r];case"function":return e(t);default:return e}}function m(e,t){var n=t.logger,r=t.actionTransformer,o=t.titleFormatter,i=void 0===o?function(e){var t=e.timestamp,n=e.duration;return function(e,r,o){var i=["action"];return i.push("%c"+String(e.type)),t&&i.push("%c@ "+r),n&&i.push("%c(in "+o.toFixed(2)+" ms)"),i.join(" ")}}(t):o,a=t.collapsed,u=t.colors,l=t.level,c=t.diff,s=void 0===t.titleFormatter;e.forEach(function(o,f){var d=o.started,m=o.startedTime,v=o.action,y=o.prevState,g=o.error,b=o.took,x=o.nextState,k=e[f+1];k&&(x=k.prevState,b=k.started-d);var E=r(v),_="function"==typeof a?a(function(){return x},v,o):a,C=w(m),T=u.title?"color: "+u.title(E)+";":"",S=["color: gray; font-weight: lighter;"];S.push(T),t.timestamp&&S.push("color: gray; font-weight: lighter;"),t.duration&&S.push("color: gray; font-weight: lighter;");var P=i(E,C,b);try{_?u.title&&s?n.groupCollapsed.apply(n,["%c "+P].concat(S)):n.groupCollapsed(P):u.title&&s?n.group.apply(n,["%c "+P].concat(S)):n.group(P)}catch(e){n.log(P)}var O=h(l,E,[y],"prevState"),N=h(l,E,[E],"action"),j=h(l,E,[g,y],"error"),R=h(l,E,[x],"nextState");if(O)if(u.prevState){var M="color: "+u.prevState(y)+"; font-weight: bold";n[O]("%c prev state",M,y)}else n[O]("prev state",y);if(N)if(u.action){var I="color: "+u.action(E)+"; font-weight: bold";n[N]("%c action    ",I,E)}else n[N]("action    ",E);if(g&&j)if(u.error){var D="color: "+u.error(g,y)+"; font-weight: bold;";n[j]("%c error     ",D,g)}else n[j]("error     ",g);if(R)if(u.nextState){var F="color: "+u.nextState(x)+"; font-weight: bold";n[R]("%c next state",F,x)}else n[R]("next state",x);c&&p(y,x,n,_);try{n.groupEnd()}catch(e){n.log("—— log end ——")}})}function v(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},T,e),n=t.logger,r=t.stateTransformer,o=t.errorTransformer,i=t.predicate,a=t.logErrors,u=t.diffPredicate;if(void 0===n)return function(){return function(e){return function(t){return e(t)}}};if(e.getState&&e.dispatch)return console.error("[redux-logger] redux-logger not installed. Make sure to pass logger instance as middleware:\n// Logger with default options\nimport { logger } from 'redux-logger'\nconst store = createStore(\n  reducer,\n  applyMiddleware(logger)\n)\n// Or you can create your own logger with custom options http://bit.ly/redux-logger-options\nimport createLogger from 'redux-logger'\nconst logger = createLogger({\n  // ...options\n});\nconst store = createStore(\n  reducer,\n  applyMiddleware(logger)\n)\n"),function(){return function(e){return function(t){return e(t)}}};var l=[];return function(e){var n=e.getState;return function(e){return function(c){if("function"==typeof i&&!i(n,c))return e(c);var s={};l.push(s),s.started=x.now(),s.startedTime=new Date,s.prevState=r(n()),s.action=c;var f=void 0;if(a)try{f=e(c)}catch(e){s.error=o(e)}else f=e(c);s.took=x.now()-s.started,s.nextState=r(n());var d=t.diff&&"function"==typeof u?u(n,c):t.diff;if(m(l,Object.assign({},t,{diff:d})),l.length=0,s.error)throw s.error;return f}}}}var y,g,b=function(e,t){return function(e,t){return new Array(t+1).join(e)}("0",t-e.toString().length)+e},w=function(e){return b(e.getHours(),2)+":"+b(e.getMinutes(),2)+":"+b(e.getSeconds(),2)+"."+b(e.getMilliseconds(),3)},x="undefined"!=typeof performance&&null!==performance&&"function"==typeof performance.now?performance:Date,k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E=function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)},_=[];y="object"===(void 0===e?"undefined":k(e))&&e?e:"undefined"!=typeof window?window:{},(g=y.DeepDiff)&&_.push(function(){void 0!==g&&y.DeepDiff===f&&(y.DeepDiff=g,g=void 0)}),n(o,r),n(i,r),n(a,r),n(u,r),Object.defineProperties(f,{diff:{value:f,enumerable:!0},observableDiff:{value:s,enumerable:!0},applyDiff:{value:function(e,t,n){e&&t&&s(e,t,function(r){n&&!n(e,t,r)||d(e,t,r)})},enumerable:!0},applyChange:{value:d,enumerable:!0},revertChange:{value:function(e,t,n){if(e&&t&&n&&n.kind){var r,o,i=e;for(o=n.path.length-1,r=0;r<o;r++)void 0===i[n.path[r]]&&(i[n.path[r]]={}),i=i[n.path[r]];switch(n.kind){case"A":!function e(t,n,r){if(r.path&&r.path.length){var o,i=t[n],a=r.path.length-1;for(o=0;o<a;o++)i=i[r.path[o]];switch(r.kind){case"A":e(i[r.path[o]],r.index,r.item);break;case"D":case"E":i[r.path[o]]=r.lhs;break;case"N":delete i[r.path[o]]}}else switch(r.kind){case"A":e(t[n],r.index,r.item);break;case"D":case"E":t[n]=r.lhs;break;case"N":t=l(t,n)}return t}(i[n.path[r]],n.index,n.item);break;case"D":case"E":i[n.path[r]]=n.lhs;break;case"N":delete i[n.path[r]]}}},enumerable:!0},isConflict:{value:function(){return void 0!==g},enumerable:!0},noConflict:{value:function(){return _&&(_.forEach(function(e){e()}),_=null),f},enumerable:!0}});var C={E:{color:"#2196F3",text:"CHANGED:"},N:{color:"#4CAF50",text:"ADDED:"},D:{color:"#F44336",text:"DELETED:"},A:{color:"#2196F3",text:"ARRAY:"}},T={level:"log",logger:console,logErrors:!0,collapsed:void 0,predicate:void 0,duration:!1,timestamp:!0,stateTransformer:function(e){return e},actionTransformer:function(e){return e},errorTransformer:function(e){return e},colors:{title:function(){return"inherit"},prevState:function(){return"#9E9E9E"},action:function(){return"#03A9F4"},nextState:function(){return"#4CAF50"},error:function(){return"#F20404"}},diff:!1,diffPredicate:void 0,transformer:void 0},S=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.dispatch,n=e.getState;return"function"==typeof t||"function"==typeof n?v()({dispatch:t,getState:n}):void console.error("\n[redux-logger v3] BREAKING CHANGE\n[redux-logger v3] Since 3.0.0 redux-logger exports by default logger with default settings.\n[redux-logger v3] Change\n[redux-logger v3] import createLogger from 'redux-logger'\n[redux-logger v3] to\n[redux-logger v3] import { createLogger } from 'redux-logger'\n")};t.defaults=T,t.createLogger=v,t.logger=S,t.default=S,Object.defineProperty(t,"__esModule",{value:!0})}(t)}).call(this,n(5))},function(e,t,n){"use strict";function r(e){return function(t){var n=t.dispatch,r=t.getState;return function(t){return function(o){return"function"==typeof o?o(n,r,e):t(o)}}}}n.r(t);var o=r();o.withExtraArgument=r,t.default=o},function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";var r=n(6),o=n(7),i=n(25);e.exports=function(){function e(e,t,n,r,a,u){u!==i&&o(!1,"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types")}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=r,n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports=function(e){var t=(e?e.ownerDocument||e:document).defaultView||window;return!(!e||!("function"==typeof t.Node?e instanceof t.Node:"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName))}},function(e,t,n){"use strict";var r=n(27);e.exports=function(e){return r(e)&&3==e.nodeType}},function(e,t,n){"use strict";var r=n(28);e.exports=function e(t,n){return!(!t||!n)&&(t===n||!r(t)&&(r(n)?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}},function(e,t,n){"use strict";var r=Object.prototype.hasOwnProperty;function o(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}e.exports=function(e,t){if(o(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),i=Object.keys(t);if(n.length!==i.length)return!1;for(var a=0;a<n.length;a++)if(!r.call(t,n[a])||!o(e[n[a]],t[n[a]]))return!1;return!0}},function(e,t,n){"use strict";e.exports=function(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}},function(e,t,n){"use strict";var r=!("undefined"==typeof window||!window.document||!window.document.createElement),o={canUseDOM:r,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:r&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:r&&!!window.screen,isInWorker:!r};e.exports=o},function(e,t,n){"use strict";
/** @license React v16.4.0
 * react-dom.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(7),o=n(1),i=n(32),a=n(14),u=n(6),l=n(31),c=n(30),s=n(29),f=n(13);function d(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,o=0;o<t;o++)n+="&args[]="+encodeURIComponent(arguments[o+1]);r(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}o||d("227");var p={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(e,t,n,r,o,i,a,u,l){(function(e,t,n,r,o,i,a,u,l){this._hasCaughtError=!1,this._caughtError=null;var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this._caughtError=e,this._hasCaughtError=!0}}).apply(p,arguments)},invokeGuardedCallbackAndCatchFirstError:function(e,t,n,r,o,i,a,u,l){if(p.invokeGuardedCallback.apply(this,arguments),p.hasCaughtError()){var c=p.clearCaughtError();p._hasRethrowError||(p._hasRethrowError=!0,p._rethrowError=c)}},rethrowCaughtError:function(){return function(){if(p._hasRethrowError){var e=p._rethrowError;throw p._rethrowError=null,p._hasRethrowError=!1,e}}.apply(p,arguments)},hasCaughtError:function(){return p._hasCaughtError},clearCaughtError:function(){if(p._hasCaughtError){var e=p._caughtError;return p._caughtError=null,p._hasCaughtError=!1,e}d("198")}};var h=null,m={};function v(){if(h)for(var e in m){var t=m[e],n=h.indexOf(e);if(-1<n||d("96",e),!g[n])for(var r in t.extractEvents||d("97",e),g[n]=t,n=t.eventTypes){var o=void 0,i=n[r],a=t,u=r;b.hasOwnProperty(u)&&d("99",u),b[u]=i;var l=i.phasedRegistrationNames;if(l){for(o in l)l.hasOwnProperty(o)&&y(l[o],a,u);o=!0}else i.registrationName?(y(i.registrationName,a,u),o=!0):o=!1;o||d("98",r,e)}}}function y(e,t,n){w[e]&&d("100",e),w[e]=t,x[e]=t.eventTypes[n].dependencies}var g=[],b={},w={},x={};function k(e){h&&d("101"),h=Array.prototype.slice.call(e),v()}function E(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];m.hasOwnProperty(t)&&m[t]===r||(m[t]&&d("102",t),m[t]=r,n=!0)}n&&v()}var _={plugins:g,eventNameDispatchConfigs:b,registrationNameModules:w,registrationNameDependencies:x,possibleRegistrationNames:null,injectEventPluginOrder:k,injectEventPluginsByName:E},C=null,T=null,S=null;function P(e,t,n,r){t=e.type||"unknown-event",e.currentTarget=S(r),p.invokeGuardedCallbackAndCatchFirstError(t,n,void 0,e),e.currentTarget=null}function O(e,t){return null==t&&d("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function N(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var j=null;function R(e,t){if(e){var n=e._dispatchListeners,r=e._dispatchInstances;if(Array.isArray(n))for(var o=0;o<n.length&&!e.isPropagationStopped();o++)P(e,t,n[o],r[o]);else n&&P(e,t,n,r);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function M(e){return R(e,!0)}function I(e){return R(e,!1)}var D={injectEventPluginOrder:k,injectEventPluginsByName:E};function F(e,t){var n=e.stateNode;if(!n)return null;var r=C(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&d("231",t,typeof n),n)}function U(e,t){null!==e&&(j=O(j,e)),e=j,j=null,e&&(N(e,t?M:I),j&&d("95"),p.rethrowCaughtError())}function A(e,t,n,r){for(var o=null,i=0;i<g.length;i++){var a=g[i];a&&(a=a.extractEvents(e,t,n,r))&&(o=O(o,a))}U(o,!1)}var L={injection:D,getListener:F,runEventsInBatch:U,runExtractedEventsInBatch:A},z=Math.random().toString(36).slice(2),B="__reactInternalInstance$"+z,W="__reactEventHandlers$"+z;function V(e){if(e[B])return e[B];for(;!e[B];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[B]).tag||6===e.tag?e:null}function H(e){if(5===e.tag||6===e.tag)return e.stateNode;d("33")}function q(e){return e[W]||null}var $={precacheFiberNode:function(e,t){t[B]=e},getClosestInstanceFromNode:V,getInstanceFromNode:function(e){return!(e=e[B])||5!==e.tag&&6!==e.tag?null:e},getNodeFromInstance:H,getFiberCurrentPropsFromNode:q,updateFiberProps:function(e,t){e[W]=t}};function K(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Q(e,t,n){for(var r=[];e;)r.push(e),e=K(e);for(e=r.length;0<e--;)t(r[e],"captured",n);for(e=0;e<r.length;e++)t(r[e],"bubbled",n)}function G(e,t,n){(t=F(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=O(n._dispatchListeners,t),n._dispatchInstances=O(n._dispatchInstances,e))}function X(e){e&&e.dispatchConfig.phasedRegistrationNames&&Q(e._targetInst,G,e)}function Y(e){if(e&&e.dispatchConfig.phasedRegistrationNames){var t=e._targetInst;Q(t=t?K(t):null,G,e)}}function Z(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=F(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=O(n._dispatchListeners,t),n._dispatchInstances=O(n._dispatchInstances,e))}function J(e){e&&e.dispatchConfig.registrationName&&Z(e._targetInst,null,e)}function ee(e){N(e,X)}function te(e,t,n,r){if(n&&r)e:{for(var o=n,i=r,a=0,u=o;u;u=K(u))a++;u=0;for(var l=i;l;l=K(l))u++;for(;0<a-u;)o=K(o),a--;for(;0<u-a;)i=K(i),u--;for(;a--;){if(o===i||o===i.alternate)break e;o=K(o),i=K(i)}o=null}else o=null;for(i=o,o=[];n&&n!==i&&(null===(a=n.alternate)||a!==i);)o.push(n),n=K(n);for(n=[];r&&r!==i&&(null===(a=r.alternate)||a!==i);)n.push(r),r=K(r);for(r=0;r<o.length;r++)Z(o[r],"bubbled",e);for(e=n.length;0<e--;)Z(n[e],"captured",t)}var ne={accumulateTwoPhaseDispatches:ee,accumulateTwoPhaseDispatchesSkipTarget:function(e){N(e,Y)},accumulateEnterLeaveDispatches:te,accumulateDirectDispatches:function(e){N(e,J)}};function re(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n["ms"+e]="MS"+t,n["O"+e]="o"+t.toLowerCase(),n}var oe={animationend:re("Animation","AnimationEnd"),animationiteration:re("Animation","AnimationIteration"),animationstart:re("Animation","AnimationStart"),transitionend:re("Transition","TransitionEnd")},ie={},ae={};function ue(e){if(ie[e])return ie[e];if(!oe[e])return e;var t,n=oe[e];for(t in n)if(n.hasOwnProperty(t)&&t in ae)return ie[e]=n[t];return e}i.canUseDOM&&(ae=document.createElement("div").style,"AnimationEvent"in window||(delete oe.animationend.animation,delete oe.animationiteration.animation,delete oe.animationstart.animation),"TransitionEvent"in window||delete oe.transitionend.transition);var le=ue("animationend"),ce=ue("animationiteration"),se=ue("animationstart"),fe=ue("transitionend"),de="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),pe=null;function he(){return!pe&&i.canUseDOM&&(pe="textContent"in document.documentElement?"textContent":"innerText"),pe}var me={_root:null,_startText:null,_fallbackText:null};function ve(){if(me._fallbackText)return me._fallbackText;var e,t,n=me._startText,r=n.length,o=ye(),i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return me._fallbackText=o.slice(e,1<t?1-t:void 0),me._fallbackText}function ye(){return"value"in me._root?me._root.value:me._root[he()]}var ge="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),be={type:null,target:null,currentTarget:u.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};function we(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?u.thatReturnsTrue:u.thatReturnsFalse,this.isPropagationStopped=u.thatReturnsFalse,this}function xe(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function ke(e){e instanceof this||d("223"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Ee(e){e.eventPool=[],e.getPooled=xe,e.release=ke}a(we.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=u.thatReturnsTrue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=u.thatReturnsTrue)},persist:function(){this.isPersistent=u.thatReturnsTrue},isPersistent:u.thatReturnsFalse,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;for(t=0;t<ge.length;t++)this[ge[t]]=null}}),we.Interface=be,we.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var o=new t;return a(o,n.prototype),n.prototype=o,n.prototype.constructor=n,n.Interface=a({},r.Interface,e),n.extend=r.extend,Ee(n),n},Ee(we);var _e=we.extend({data:null}),Ce=we.extend({data:null}),Te=[9,13,27,32],Se=i.canUseDOM&&"CompositionEvent"in window,Pe=null;i.canUseDOM&&"documentMode"in document&&(Pe=document.documentMode);var Oe=i.canUseDOM&&"TextEvent"in window&&!Pe,Ne=i.canUseDOM&&(!Se||Pe&&8<Pe&&11>=Pe),je=String.fromCharCode(32),Re={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},Me=!1;function Ie(e,t){switch(e){case"keyup":return-1!==Te.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function De(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Fe=!1;var Ue={eventTypes:Re,extractEvents:function(e,t,n,r){var o=void 0,i=void 0;if(Se)e:{switch(e){case"compositionstart":o=Re.compositionStart;break e;case"compositionend":o=Re.compositionEnd;break e;case"compositionupdate":o=Re.compositionUpdate;break e}o=void 0}else Fe?Ie(e,n)&&(o=Re.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=Re.compositionStart);return o?(Ne&&(Fe||o!==Re.compositionStart?o===Re.compositionEnd&&Fe&&(i=ve()):(me._root=r,me._startText=ye(),Fe=!0)),o=_e.getPooled(o,t,n,r),i?o.data=i:null!==(i=De(n))&&(o.data=i),ee(o),i=o):i=null,(e=Oe?function(e,t){switch(e){case"compositionend":return De(t);case"keypress":return 32!==t.which?null:(Me=!0,je);case"textInput":return(e=t.data)===je&&Me?null:e;default:return null}}(e,n):function(e,t){if(Fe)return"compositionend"===e||!Se&&Ie(e,t)?(e=ve(),me._root=null,me._startText=null,me._fallbackText=null,Fe=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Ne?null:t.data;default:return null}}(e,n))?((t=Ce.getPooled(Re.beforeInput,t,n,r)).data=e,ee(t)):t=null,null===i?t:null===t?i:[i,t]}},Ae=null,Le={injectFiberControlledHostComponent:function(e){Ae=e}},ze=null,Be=null;function We(e){if(e=T(e)){Ae&&"function"==typeof Ae.restoreControlledState||d("194");var t=C(e.stateNode);Ae.restoreControlledState(e.stateNode,e.type,t)}}function Ve(e){ze?Be?Be.push(e):Be=[e]:ze=e}function He(){return null!==ze||null!==Be}function qe(){if(ze){var e=ze,t=Be;if(Be=ze=null,We(e),t)for(e=0;e<t.length;e++)We(t[e])}}var $e={injection:Le,enqueueStateRestore:Ve,needsStateRestore:He,restoreStateIfNeeded:qe};function Ke(e,t){return e(t)}function Qe(e,t,n){return e(t,n)}function Ge(){}var Xe=!1;function Ye(e,t){if(Xe)return e(t);Xe=!0;try{return Ke(e,t)}finally{Xe=!1,He()&&(Ge(),qe())}}var Ze={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Je(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Ze[e.type]:"textarea"===t}function et(e){return(e=e.target||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function tt(e,t){return!(!i.canUseDOM||t&&!("addEventListener"in document))&&((t=(e="on"+e)in document)||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t)}function nt(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function rt(e){e._valueTracker||(e._valueTracker=function(e){var t=nt(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function ot(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=nt(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var it=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,at="function"==typeof Symbol&&Symbol.for,ut=at?Symbol.for("react.element"):60103,lt=at?Symbol.for("react.portal"):60106,ct=at?Symbol.for("react.fragment"):60107,st=at?Symbol.for("react.strict_mode"):60108,ft=at?Symbol.for("react.profiler"):60114,dt=at?Symbol.for("react.provider"):60109,pt=at?Symbol.for("react.context"):60110,ht=at?Symbol.for("react.async_mode"):60111,mt=at?Symbol.for("react.forward_ref"):60112,vt=at?Symbol.for("react.timeout"):60113,yt="function"==typeof Symbol&&Symbol.iterator;function gt(e){return null===e||void 0===e?null:"function"==typeof(e=yt&&e[yt]||e["@@iterator"])?e:null}function bt(e){var t=e.type;if("function"==typeof t)return t.displayName||t.name;if("string"==typeof t)return t;switch(t){case ht:return"AsyncMode";case pt:return"Context.Consumer";case ct:return"ReactFragment";case lt:return"ReactPortal";case ft:return"Profiler("+e.pendingProps.id+")";case dt:return"Context.Provider";case st:return"StrictMode";case vt:return"Timeout"}if("object"==typeof t&&null!==t)switch(t.$$typeof){case mt:return""!==(e=t.render.displayName||t.render.name||"")?"ForwardRef("+e+")":"ForwardRef"}return null}function wt(e){var t="";do{e:switch(e.tag){case 0:case 1:case 2:case 5:var n=e._debugOwner,r=e._debugSource,o=bt(e),i=null;n&&(i=bt(n)),n=r,o="\n    in "+(o||"Unknown")+(n?" (at "+n.fileName.replace(/^.*[\\\/]/,"")+":"+n.lineNumber+")":i?" (created by "+i+")":"");break e;default:o=""}t+=o,e=e.return}while(e);return t}var xt=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,kt={},Et={};function _t(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var Ct={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){Ct[e]=new _t(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];Ct[t]=new _t(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){Ct[e]=new _t(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","preserveAlpha"].forEach(function(e){Ct[e]=new _t(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){Ct[e]=new _t(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){Ct[e]=new _t(e,3,!0,e.toLowerCase(),null)}),["capture","download"].forEach(function(e){Ct[e]=new _t(e,4,!1,e.toLowerCase(),null)}),["cols","rows","size","span"].forEach(function(e){Ct[e]=new _t(e,6,!1,e.toLowerCase(),null)}),["rowSpan","start"].forEach(function(e){Ct[e]=new _t(e,5,!1,e.toLowerCase(),null)});var Tt=/[\-:]([a-z])/g;function St(e){return e[1].toUpperCase()}function Pt(e,t,n,r){var o=Ct.hasOwnProperty(t)?Ct[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null===t||void 0===t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!Et.hasOwnProperty(e)||!kt.hasOwnProperty(e)&&(xt.test(e)?Et[e]=!0:(kt[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function Ot(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Nt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=Dt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function jt(e,t){null!=(t=t.checked)&&Pt(e,"checked",t,!1)}function Rt(e,t){jt(e,t);var n=Dt(t.value);null!=n&&("number"===t.type?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n)),t.hasOwnProperty("value")?It(e,t.type,n):t.hasOwnProperty("defaultValue")&&It(e,t.type,Dt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Mt(e,t){(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue"))&&(""===e.value&&(e.value=""+e._wrapperState.initialValue),e.defaultValue=""+e._wrapperState.initialValue),""!==(t=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!e.defaultChecked,""!==t&&(e.name=t)}function It(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Dt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(Tt,St);Ct[t]=new _t(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(Tt,St);Ct[t]=new _t(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(Tt,St);Ct[t]=new _t(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),Ct.tabIndex=new _t("tabIndex",1,!1,"tabindex",null);var Ft={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Ut(e,t,n){return(e=we.getPooled(Ft.change,e,t,n)).type="change",Ve(n),ee(e),e}var At=null,Lt=null;function zt(e){U(e,!1)}function Bt(e){if(ot(H(e)))return e}function Wt(e,t){if("change"===e)return t}var Vt=!1;function Ht(){At&&(At.detachEvent("onpropertychange",qt),Lt=At=null)}function qt(e){"value"===e.propertyName&&Bt(Lt)&&Ye(zt,e=Ut(Lt,e,et(e)))}function $t(e,t,n){"focus"===e?(Ht(),Lt=n,(At=t).attachEvent("onpropertychange",qt)):"blur"===e&&Ht()}function Kt(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Bt(Lt)}function Qt(e,t){if("click"===e)return Bt(t)}function Gt(e,t){if("input"===e||"change"===e)return Bt(t)}i.canUseDOM&&(Vt=tt("input")&&(!document.documentMode||9<document.documentMode));var Xt={eventTypes:Ft,_isInputEventSupported:Vt,extractEvents:function(e,t,n,r){var o=t?H(t):window,i=void 0,a=void 0,u=o.nodeName&&o.nodeName.toLowerCase();if("select"===u||"input"===u&&"file"===o.type?i=Wt:Je(o)?Vt?i=Gt:(i=Kt,a=$t):(u=o.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(i=Qt),i&&(i=i(e,t)))return Ut(i,n,r);a&&a(e,o,t),"blur"===e&&null!=t&&(e=t._wrapperState||o._wrapperState)&&e.controlled&&"number"===o.type&&It(o,"number",o.value)}},Yt=we.extend({view:null,detail:null}),Zt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Jt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Zt[e])&&!!t[e]}function en(){return Jt}var tn=Yt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:en,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)}}),nn=tn.extend({pointerId:null,width:null,height:null,pressure:null,tiltX:null,tiltY:null,pointerType:null,isPrimary:null}),rn={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},on={eventTypes:rn,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!i&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i?(i=t,t=(t=n.relatedTarget||n.toElement)?V(t):null):i=null,i===t)return null;var a=void 0,u=void 0,l=void 0,c=void 0;return"mouseout"===e||"mouseover"===e?(a=tn,u=rn.mouseLeave,l=rn.mouseEnter,c="mouse"):"pointerout"!==e&&"pointerover"!==e||(a=nn,u=rn.pointerLeave,l=rn.pointerEnter,c="pointer"),e=null==i?o:H(i),o=null==t?o:H(t),(u=a.getPooled(u,i,n,r)).type=c+"leave",u.target=e,u.relatedTarget=o,(n=a.getPooled(l,t,n,r)).type=c+"enter",n.target=o,n.relatedTarget=e,te(u,n,i,t),[u,n]}};function an(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function un(e){2!==an(e)&&d("188")}function ln(e){var t=e.alternate;if(!t)return 3===(t=an(e))&&d("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,i=o?o.alternate:null;if(!o||!i)break;if(o.child===i.child){for(var a=o.child;a;){if(a===n)return un(o),e;if(a===r)return un(o),t;a=a.sibling}d("188")}if(n.return!==r.return)n=o,r=i;else{a=!1;for(var u=o.child;u;){if(u===n){a=!0,n=o,r=i;break}if(u===r){a=!0,r=o,n=i;break}u=u.sibling}if(!a){for(u=i.child;u;){if(u===n){a=!0,n=i,r=o;break}if(u===r){a=!0,r=i,n=o;break}u=u.sibling}a||d("189")}}n.alternate!==r&&d("190")}return 3!==n.tag&&d("188"),n.stateNode.current===n?e:t}function cn(e){if(!(e=ln(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var sn=we.extend({animationName:null,elapsedTime:null,pseudoElement:null}),fn=we.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),dn=Yt.extend({relatedTarget:null});function pn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var hn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},mn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},vn=Yt.extend({key:function(e){if(e.key){var t=hn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=pn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?mn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:en,charCode:function(e){return"keypress"===e.type?pn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?pn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),yn=tn.extend({dataTransfer:null}),gn=Yt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:en}),bn=we.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),wn=tn.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),xn=[["abort","abort"],[le,"animationEnd"],[ce,"animationIteration"],[se,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[fe,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],kn={},En={};function _n(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},kn[e]=t,En[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){_n(e,!0)}),xn.forEach(function(e){_n(e,!1)});var Cn={eventTypes:kn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=En[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=En[e];if(!o)return null;switch(e){case"keypress":if(0===pn(n))return null;case"keydown":case"keyup":e=vn;break;case"blur":case"focus":e=dn;break;case"click":if(2===n.button)return null;case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=tn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=yn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=gn;break;case le:case ce:case se:e=sn;break;case fe:e=bn;break;case"scroll":e=Yt;break;case"wheel":e=wn;break;case"copy":case"cut":case"paste":e=fn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=nn;break;default:e=we}return ee(t=e.getPooled(o,t,n,r)),t}},Tn=Cn.isInteractiveTopLevelEventType,Sn=[];function Pn(e){var t=e.targetInst;do{if(!t){e.ancestors.push(t);break}var n;for(n=t;n.return;)n=n.return;if(!(n=3!==n.tag?null:n.stateNode.containerInfo))break;e.ancestors.push(t),t=V(n)}while(t);for(n=0;n<e.ancestors.length;n++)t=e.ancestors[n],A(e.topLevelType,t,e.nativeEvent,et(e.nativeEvent))}var On=!0;function Nn(e){On=!!e}function jn(e,t){if(!t)return null;var n=(Tn(e)?Mn:In).bind(null,e);t.addEventListener(e,n,!1)}function Rn(e,t){if(!t)return null;var n=(Tn(e)?Mn:In).bind(null,e);t.addEventListener(e,n,!0)}function Mn(e,t){Qe(In,e,t)}function In(e,t){if(On){var n=et(t);if(null===(n=V(n))||"number"!=typeof n.tag||2===an(n)||(n=null),Sn.length){var r=Sn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Ye(Pn,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>Sn.length&&Sn.push(e)}}}var Dn={get _enabled(){return On},setEnabled:Nn,isEnabled:function(){return On},trapBubbledEvent:jn,trapCapturedEvent:Rn,dispatchEvent:In},Fn={},Un=0,An="_reactListenersID"+(""+Math.random()).slice(2);function Ln(e){return Object.prototype.hasOwnProperty.call(e,An)||(e[An]=Un++,Fn[e[An]]={}),Fn[e[An]]}function zn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Bn(e,t){var n,r=zn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=zn(r)}}function Wn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&"text"===e.type||"textarea"===t||"true"===e.contentEditable)}var Vn=i.canUseDOM&&"documentMode"in document&&11>=document.documentMode,Hn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu focus keydown keyup mousedown mouseup selectionchange".split(" ")}},qn=null,$n=null,Kn=null,Qn=!1;function Gn(e,t){if(Qn||null==qn||qn!==l())return null;var n=qn;return"selectionStart"in n&&Wn(n)?n={start:n.selectionStart,end:n.selectionEnd}:window.getSelection?n={anchorNode:(n=window.getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}:n=void 0,Kn&&c(Kn,n)?null:(Kn=n,(e=we.getPooled(Hn.select,$n,e,t)).type="select",e.target=qn,ee(e),e)}var Xn={eventTypes:Hn,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=Ln(i),o=x.onSelect;for(var a=0;a<o.length;a++){var u=o[a];if(!i.hasOwnProperty(u)||!i[u]){i=!1;break e}}i=!0}o=!i}if(o)return null;switch(i=t?H(t):window,e){case"focus":(Je(i)||"true"===i.contentEditable)&&(qn=i,$n=t,Kn=null);break;case"blur":Kn=$n=qn=null;break;case"mousedown":Qn=!0;break;case"contextmenu":case"mouseup":return Qn=!1,Gn(n,r);case"selectionchange":if(Vn)break;case"keydown":case"keyup":return Gn(n,r)}return null}};D.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),C=$.getFiberCurrentPropsFromNode,T=$.getInstanceFromNode,S=$.getNodeFromInstance,D.injectEventPluginsByName({SimpleEventPlugin:Cn,EnterLeaveEventPlugin:on,ChangeEventPlugin:Xt,SelectEventPlugin:Xn,BeforeInputEventPlugin:Ue});var Yn=void 0;Yn="object"==typeof performance&&"function"==typeof performance.now?function(){return performance.now()}:function(){return Date.now()};var Zn=void 0,Jn=void 0;if(i.canUseDOM){var er=[],tr=0,nr={},rr=-1,or=!1,ir=!1,ar=0,ur=33,lr=33,cr={didTimeout:!1,timeRemaining:function(){var e=ar-Yn();return 0<e?e:0}},sr=function(e,t){if(nr[t])try{e(cr)}finally{delete nr[t]}},fr="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(e){if(e.source===window&&e.data===fr&&(or=!1,0!==er.length)){if(0!==er.length&&(e=Yn(),!(-1===rr||rr>e))){rr=-1,cr.didTimeout=!0;for(var t=0,n=er.length;t<n;t++){var r=er[t],o=r.timeoutTime;-1!==o&&o<=e?sr(r.scheduledCallback,r.callbackId):-1!==o&&(-1===rr||o<rr)&&(rr=o)}}for(e=Yn();0<ar-e&&0<er.length;)e=er.shift(),cr.didTimeout=!1,sr(e.scheduledCallback,e.callbackId),e=Yn();0<er.length&&!ir&&(ir=!0,requestAnimationFrame(dr))}},!1);var dr=function(e){ir=!1;var t=e-ar+lr;t<lr&&ur<lr?(8>t&&(t=8),lr=t<ur?ur:t):ur=t,ar=e+lr,or||(or=!0,window.postMessage(fr,"*"))};Zn=function(e,t){var n=-1;return null!=t&&"number"==typeof t.timeout&&(n=Yn()+t.timeout),(-1===rr||-1!==n&&n<rr)&&(rr=n),t=++tr,er.push({scheduledCallback:e,callbackId:t,timeoutTime:n}),nr[t]=!0,ir||(ir=!0,requestAnimationFrame(dr)),t},Jn=function(e){delete nr[e]}}else{var pr=0,hr={};Zn=function(e){var t=pr++,n=setTimeout(function(){e({timeRemaining:function(){return 1/0},didTimeout:!1})});return hr[t]=n,t},Jn=function(e){var t=hr[e];delete hr[e],clearTimeout(t)}}function mr(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return o.Children.forEach(e,function(e){null==e||"string"!=typeof e&&"number"!=typeof e||(t+=e)}),t}(t.children))&&(e.children=t),e}function vr(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+n,t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function yr(e,t){var n=t.value;e._wrapperState={initialValue:null!=n?n:t.defaultValue,wasMultiple:!!t.multiple}}function gr(e,t){return null!=t.dangerouslySetInnerHTML&&d("91"),a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function br(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&d("92"),Array.isArray(t)&&(1>=t.length||d("93"),t=t[0]),n=""+t),null==n&&(n="")),e._wrapperState={initialValue:""+n}}function wr(e,t){var n=t.value;null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&(e.defaultValue=n)),null!=t.defaultValue&&(e.defaultValue=t.defaultValue)}function xr(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}var kr={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function Er(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function _r(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Er(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Cr,Tr=void 0,Sr=(Cr=function(e,t){if(e.namespaceURI!==kr.svg||"innerHTML"in e)e.innerHTML=t;else{for((Tr=Tr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=Tr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return Cr(e,t)})}:Cr);function Pr(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var Or={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Nr=["Webkit","ms","Moz","O"];function jr(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=n,i=t[n];o=null==i||"boolean"==typeof i||""===i?"":r||"number"!=typeof i||0===i||Or.hasOwnProperty(o)&&Or[o]?(""+i).trim():i+"px","float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Or).forEach(function(e){Nr.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Or[t]=Or[e]})});var Rr=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Mr(e,t,n){t&&(Rr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&d("137",e,n()),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&d("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||d("61")),null!=t.style&&"object"!=typeof t.style&&d("62",n()))}function Ir(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Dr=u.thatReturns("");function Fr(e,t){var n=Ln(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=x[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":Rn("scroll",e);break;case"focus":case"blur":Rn("focus",e),Rn("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":tt(o,!0)&&Rn(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===de.indexOf(o)&&jn(o,e)}n[o]=!0}}}function Ur(e,t,n,r){return n=9===n.nodeType?n:n.ownerDocument,r===kr.html&&(r=Er(e)),r===kr.html?"script"===e?((e=n.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):e="string"==typeof t.is?n.createElement(e,{is:t.is}):n.createElement(e):e=n.createElementNS(r,e),e}function Ar(e,t){return(9===t.nodeType?t:t.ownerDocument).createTextNode(e)}function Lr(e,t,n,r){var o=Ir(t,n);switch(t){case"iframe":case"object":jn("load",e);var i=n;break;case"video":case"audio":for(i=0;i<de.length;i++)jn(de[i],e);i=n;break;case"source":jn("error",e),i=n;break;case"img":case"image":case"link":jn("error",e),jn("load",e),i=n;break;case"form":jn("reset",e),jn("submit",e),i=n;break;case"details":jn("toggle",e),i=n;break;case"input":Nt(e,n),i=Ot(e,n),jn("invalid",e),Fr(r,"onChange");break;case"option":i=mr(e,n);break;case"select":yr(e,n),i=a({},n,{value:void 0}),jn("invalid",e),Fr(r,"onChange");break;case"textarea":br(e,n),i=gr(e,n),jn("invalid",e),Fr(r,"onChange");break;default:i=n}Mr(t,i,Dr);var l,c=i;for(l in c)if(c.hasOwnProperty(l)){var s=c[l];"style"===l?jr(e,s):"dangerouslySetInnerHTML"===l?null!=(s=s?s.__html:void 0)&&Sr(e,s):"children"===l?"string"==typeof s?("textarea"!==t||""!==s)&&Pr(e,s):"number"==typeof s&&Pr(e,""+s):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(w.hasOwnProperty(l)?null!=s&&Fr(r,l):null!=s&&Pt(e,l,s,o))}switch(t){case"input":rt(e),Mt(e,n);break;case"textarea":rt(e),xr(e);break;case"option":null!=n.value&&e.setAttribute("value",n.value);break;case"select":e.multiple=!!n.multiple,null!=(t=n.value)?vr(e,!!n.multiple,t,!1):null!=n.defaultValue&&vr(e,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof i.onClick&&(e.onclick=u)}}function zr(e,t,n,r,o){var i=null;switch(t){case"input":n=Ot(e,n),r=Ot(e,r),i=[];break;case"option":n=mr(e,n),r=mr(e,r),i=[];break;case"select":n=a({},n,{value:void 0}),r=a({},r,{value:void 0}),i=[];break;case"textarea":n=gr(e,n),r=gr(e,r),i=[];break;default:"function"!=typeof n.onClick&&"function"==typeof r.onClick&&(e.onclick=u)}Mr(t,r,Dr),t=e=void 0;var l=null;for(e in n)if(!r.hasOwnProperty(e)&&n.hasOwnProperty(e)&&null!=n[e])if("style"===e){var c=n[e];for(t in c)c.hasOwnProperty(t)&&(l||(l={}),l[t]="")}else"dangerouslySetInnerHTML"!==e&&"children"!==e&&"suppressContentEditableWarning"!==e&&"suppressHydrationWarning"!==e&&"autoFocus"!==e&&(w.hasOwnProperty(e)?i||(i=[]):(i=i||[]).push(e,null));for(e in r){var s=r[e];if(c=null!=n?n[e]:void 0,r.hasOwnProperty(e)&&s!==c&&(null!=s||null!=c))if("style"===e)if(c){for(t in c)!c.hasOwnProperty(t)||s&&s.hasOwnProperty(t)||(l||(l={}),l[t]="");for(t in s)s.hasOwnProperty(t)&&c[t]!==s[t]&&(l||(l={}),l[t]=s[t])}else l||(i||(i=[]),i.push(e,l)),l=s;else"dangerouslySetInnerHTML"===e?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(i=i||[]).push(e,""+s)):"children"===e?c===s||"string"!=typeof s&&"number"!=typeof s||(i=i||[]).push(e,""+s):"suppressContentEditableWarning"!==e&&"suppressHydrationWarning"!==e&&(w.hasOwnProperty(e)?(null!=s&&Fr(o,e),i||c===s||(i=[])):(i=i||[]).push(e,s))}return l&&(i=i||[]).push("style",l),i}function Br(e,t,n,r,o){"input"===n&&"radio"===o.type&&null!=o.name&&jt(e,o),Ir(n,r),r=Ir(n,o);for(var i=0;i<t.length;i+=2){var a=t[i],u=t[i+1];"style"===a?jr(e,u):"dangerouslySetInnerHTML"===a?Sr(e,u):"children"===a?Pr(e,u):Pt(e,a,u,r)}switch(n){case"input":Rt(e,o);break;case"textarea":wr(e,o);break;case"select":e._wrapperState.initialValue=void 0,t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?vr(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?vr(e,!!o.multiple,o.defaultValue,!0):vr(e,!!o.multiple,o.multiple?[]:"",!1))}}function Wr(e,t,n,r,o){switch(t){case"iframe":case"object":jn("load",e);break;case"video":case"audio":for(r=0;r<de.length;r++)jn(de[r],e);break;case"source":jn("error",e);break;case"img":case"image":case"link":jn("error",e),jn("load",e);break;case"form":jn("reset",e),jn("submit",e);break;case"details":jn("toggle",e);break;case"input":Nt(e,n),jn("invalid",e),Fr(o,"onChange");break;case"select":yr(e,n),jn("invalid",e),Fr(o,"onChange");break;case"textarea":br(e,n),jn("invalid",e),Fr(o,"onChange")}for(var i in Mr(t,n,Dr),r=null,n)if(n.hasOwnProperty(i)){var a=n[i];"children"===i?"string"==typeof a?e.textContent!==a&&(r=["children",a]):"number"==typeof a&&e.textContent!==""+a&&(r=["children",""+a]):w.hasOwnProperty(i)&&null!=a&&Fr(o,i)}switch(t){case"input":rt(e),Mt(e,n);break;case"textarea":rt(e),xr(e);break;case"select":case"option":break;default:"function"==typeof n.onClick&&(e.onclick=u)}return r}function Vr(e,t){return e.nodeValue!==t}var Hr={createElement:Ur,createTextNode:Ar,setInitialProperties:Lr,diffProperties:zr,updateProperties:Br,diffHydratedProperties:Wr,diffHydratedText:Vr,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(e,t,n){switch(t){case"input":if(Rt(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=q(r);o||d("90"),ot(r),Rt(r,o)}}}break;case"textarea":wr(e,n);break;case"select":null!=(t=n.value)&&vr(e,!!n.multiple,t,!1)}}},qr=null,$r=null;function Kr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Qr(e,t){return"textarea"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&"string"==typeof t.dangerouslySetInnerHTML.__html}var Gr=Yn,Xr=Zn,Yr=Jn;function Zr(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function Jr(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var eo=[],to=-1;function no(e){return{current:e}}function ro(e){0>to||(e.current=eo[to],eo[to]=null,to--)}function oo(e,t){eo[++to]=e.current,e.current=t}var io=no(f),ao=no(!1),uo=f;function lo(e){return so(e)?uo:io.current}function co(e,t){var n=e.type.contextTypes;if(!n)return f;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function so(e){return 2===e.tag&&null!=e.type.childContextTypes}function fo(e){so(e)&&(ro(ao),ro(io))}function po(e){ro(ao),ro(io)}function ho(e,t,n){io.current!==f&&d("168"),oo(io,t),oo(ao,n)}function mo(e,t){var n=e.stateNode,r=e.type.childContextTypes;if("function"!=typeof n.getChildContext)return t;for(var o in n=n.getChildContext())o in r||d("108",bt(e)||"Unknown",o);return a({},t,n)}function vo(e){if(!so(e))return!1;var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||f,uo=io.current,oo(io,t),oo(ao,ao.current),!0}function yo(e,t){var n=e.stateNode;if(n||d("169"),t){var r=mo(e,uo);n.__reactInternalMemoizedMergedChildContext=r,ro(ao),ro(io),oo(io,r)}else ro(ao);oo(ao,t)}function go(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=null,this.index=0,this.ref=null,this.pendingProps=t,this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.expirationTime=0,this.alternate=null}function bo(e,t,n){var r=e.alternate;return null===r?((r=new go(e.tag,t,e.key,e.mode)).type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.effectTag=0,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null),r.expirationTime=n,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function wo(e,t,n){var r=e.type,o=e.key;if(e=e.props,"function"==typeof r)var i=r.prototype&&r.prototype.isReactComponent?2:0;else if("string"==typeof r)i=5;else switch(r){case ct:return xo(e.children,t,n,o);case ht:i=11,t|=3;break;case st:i=11,t|=2;break;case ft:return(r=new go(15,e,o,4|t)).type=ft,r.expirationTime=n,r;case vt:i=16,t|=2;break;default:e:{switch("object"==typeof r&&null!==r?r.$$typeof:null){case dt:i=13;break e;case pt:i=12;break e;case mt:i=14;break e;default:d("130",null==r?r:typeof r,"")}i=void 0}}return(t=new go(i,e,o,t)).type=r,t.expirationTime=n,t}function xo(e,t,n,r){return(e=new go(10,e,r,t)).expirationTime=n,e}function ko(e,t,n){return(e=new go(6,e,null,t)).expirationTime=n,e}function Eo(e,t,n){return(t=new go(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function _o(e,t,n){return e={current:t=new go(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:n,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null},t.stateNode=e}var Co=null,To=null;function So(e){return function(t){try{return e(t)}catch(e){}}}function Po(e){"function"==typeof Co&&Co(e)}function Oo(e){"function"==typeof To&&To(e)}var No=!1;function jo(e){return{expirationTime:0,baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Ro(e){return{expirationTime:e.expirationTime,baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Mo(e){return{expirationTime:e,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Io(e,t,n){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t),(0===e.expirationTime||e.expirationTime>n)&&(e.expirationTime=n)}function Do(e,t,n){var r=e.alternate;if(null===r){var o=e.updateQueue,i=null;null===o&&(o=e.updateQueue=jo(e.memoizedState))}else o=e.updateQueue,i=r.updateQueue,null===o?null===i?(o=e.updateQueue=jo(e.memoizedState),i=r.updateQueue=jo(r.memoizedState)):o=e.updateQueue=Ro(i):null===i&&(i=r.updateQueue=Ro(o));null===i||o===i?Io(o,t,n):null===o.lastUpdate||null===i.lastUpdate?(Io(o,t,n),Io(i,t,n)):(Io(o,t,n),i.lastUpdate=t)}function Fo(e,t,n){var r=e.updateQueue;null===(r=null===r?e.updateQueue=jo(e.memoizedState):Uo(e,r)).lastCapturedUpdate?r.firstCapturedUpdate=r.lastCapturedUpdate=t:(r.lastCapturedUpdate.next=t,r.lastCapturedUpdate=t),(0===r.expirationTime||r.expirationTime>n)&&(r.expirationTime=n)}function Uo(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=Ro(t)),t}function Ao(e,t,n,r,o,i){switch(n.tag){case 1:return"function"==typeof(e=n.payload)?e.call(i,r,o):e;case 3:e.effectTag=-1025&e.effectTag|64;case 0:if(null===(o="function"==typeof(e=n.payload)?e.call(i,r,o):e)||void 0===o)break;return a({},r,o);case 2:No=!0}return r}function Lo(e,t,n,r,o){if(No=!1,!(0===t.expirationTime||t.expirationTime>o)){for(var i=(t=Uo(e,t)).baseState,a=null,u=0,l=t.firstUpdate,c=i;null!==l;){var s=l.expirationTime;s>o?(null===a&&(a=l,i=c),(0===u||u>s)&&(u=s)):(c=Ao(e,0,l,c,n,r),null!==l.callback&&(e.effectTag|=32,l.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=l:(t.lastEffect.nextEffect=l,t.lastEffect=l))),l=l.next}for(s=null,l=t.firstCapturedUpdate;null!==l;){var f=l.expirationTime;f>o?(null===s&&(s=l,null===a&&(i=c)),(0===u||u>f)&&(u=f)):(c=Ao(e,0,l,c,n,r),null!==l.callback&&(e.effectTag|=32,l.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=l:(t.lastCapturedEffect.nextEffect=l,t.lastCapturedEffect=l))),l=l.next}null===a&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===a&&null===s&&(i=c),t.baseState=i,t.firstUpdate=a,t.firstCapturedUpdate=s,t.expirationTime=u,e.memoizedState=c}}function zo(e,t){"function"!=typeof e&&d("191",e),e.call(t)}function Bo(e,t,n){for(null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),e=t.firstEffect,t.firstEffect=t.lastEffect=null;null!==e;){var r=e.callback;null!==r&&(e.callback=null,zo(r,n)),e=e.nextEffect}for(e=t.firstCapturedEffect,t.firstCapturedEffect=t.lastCapturedEffect=null;null!==e;)null!==(t=e.callback)&&(e.callback=null,zo(t,n)),e=e.nextEffect}function Wo(e,t){return{value:e,source:t,stack:wt(t)}}var Vo=no(null),Ho=no(null),qo=no(0);function $o(e){var t=e.type._context;oo(qo,t._changedBits),oo(Ho,t._currentValue),oo(Vo,e),t._currentValue=e.pendingProps.value,t._changedBits=e.stateNode}function Ko(e){var t=qo.current,n=Ho.current;ro(Vo),ro(Ho),ro(qo),(e=e.type._context)._currentValue=n,e._changedBits=t}var Qo={},Go=no(Qo),Xo=no(Qo),Yo=no(Qo);function Zo(e){return e===Qo&&d("174"),e}function Jo(e,t){oo(Yo,t),oo(Xo,e),oo(Go,Qo);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:_r(null,"");break;default:t=_r(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}ro(Go),oo(Go,t)}function ei(e){ro(Go),ro(Xo),ro(Yo)}function ti(e){Xo.current===e&&(ro(Go),ro(Xo))}function ni(e,t,n){var r=e.memoizedState;r=null===(t=t(n,r))||void 0===t?r:a({},r,t),e.memoizedState=r,null!==(e=e.updateQueue)&&0===e.expirationTime&&(e.baseState=r)}var ri={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===an(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=ma(),o=Mo(r=pa(r,e));o.payload=t,void 0!==n&&null!==n&&(o.callback=n),Do(e,o,r),ha(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=ma(),o=Mo(r=pa(r,e));o.tag=1,o.payload=t,void 0!==n&&null!==n&&(o.callback=n),Do(e,o,r),ha(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=ma(),r=Mo(n=pa(n,e));r.tag=2,void 0!==t&&null!==t&&(r.callback=t),Do(e,r,n),ha(e,n)}};function oi(e,t,n,r,o,i){var a=e.stateNode;return e=e.type,"function"==typeof a.shouldComponentUpdate?a.shouldComponentUpdate(n,o,i):!e.prototype||!e.prototype.isPureReactComponent||(!c(t,n)||!c(r,o))}function ii(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ri.enqueueReplaceState(t,t.state,null)}function ai(e,t){var n=e.type,r=e.stateNode,o=e.pendingProps,i=lo(e);r.props=o,r.state=e.memoizedState,r.refs=f,r.context=co(e,i),null!==(i=e.updateQueue)&&(Lo(e,i,o,r,t),r.state=e.memoizedState),"function"==typeof(i=e.type.getDerivedStateFromProps)&&(ni(e,i,o),r.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof r.getSnapshotBeforeUpdate||"function"!=typeof r.UNSAFE_componentWillMount&&"function"!=typeof r.componentWillMount||(n=r.state,"function"==typeof r.componentWillMount&&r.componentWillMount(),"function"==typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),n!==r.state&&ri.enqueueReplaceState(r,r.state,null),null!==(i=e.updateQueue)&&(Lo(e,i,o,r,t),r.state=e.memoizedState)),"function"==typeof r.componentDidMount&&(e.effectTag|=4)}var ui=Array.isArray;function li(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){var r=void 0;(n=n._owner)&&(2!==n.tag&&d("110"),r=n.stateNode),r||d("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs===f?r.refs={}:r.refs;null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&d("148"),n._owner||d("254",e)}return e}function ci(e,t){"textarea"!==e.type&&d("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function si(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=bo(e,t,n)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function a(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=ko(n,e.mode,r)).return=e,t):((t=o(t,n,r)).return=e,t)}function l(e,t,n,r){return null!==t&&t.type===n.type?((r=o(t,n.props,r)).ref=li(e,t,n),r.return=e,r):((r=wo(n,e.mode,r)).ref=li(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Eo(n,e.mode,r)).return=e,t):((t=o(t,n.children||[],r)).return=e,t)}function s(e,t,n,r,i){return null===t||10!==t.tag?((t=xo(n,e.mode,r,i)).return=e,t):((t=o(t,n,r)).return=e,t)}function f(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=ko(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ut:return(n=wo(t,e.mode,n)).ref=li(e,null,t),n.return=e,n;case lt:return(t=Eo(t,e.mode,n)).return=e,t}if(ui(t)||gt(t))return(t=xo(t,e.mode,n,null)).return=e,t;ci(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ut:return n.key===o?n.type===ct?s(e,t,n.props.children,r,o):l(e,t,n,r):null;case lt:return n.key===o?c(e,t,n,r):null}if(ui(n)||gt(n))return null!==o?null:s(e,t,n,r,null);ci(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ut:return e=e.get(null===r.key?n:r.key)||null,r.type===ct?s(t,e,r.props.children,o,r.key):l(t,e,r,o);case lt:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(ui(r)||gt(r))return s(t,e=e.get(n)||null,r,o,null);ci(t,r)}return null}function m(o,a,u,l){for(var c=null,s=null,d=a,m=a=0,v=null;null!==d&&m<u.length;m++){d.index>m?(v=d,d=null):v=d.sibling;var y=p(o,d,u[m],l);if(null===y){null===d&&(d=v);break}e&&d&&null===y.alternate&&t(o,d),a=i(y,a,m),null===s?c=y:s.sibling=y,s=y,d=v}if(m===u.length)return n(o,d),c;if(null===d){for(;m<u.length;m++)(d=f(o,u[m],l))&&(a=i(d,a,m),null===s?c=d:s.sibling=d,s=d);return c}for(d=r(o,d);m<u.length;m++)(v=h(d,o,m,u[m],l))&&(e&&null!==v.alternate&&d.delete(null===v.key?m:v.key),a=i(v,a,m),null===s?c=v:s.sibling=v,s=v);return e&&d.forEach(function(e){return t(o,e)}),c}function v(o,a,u,l){var c=gt(u);"function"!=typeof c&&d("150"),null==(u=c.call(u))&&d("151");for(var s=c=null,m=a,v=a=0,y=null,g=u.next();null!==m&&!g.done;v++,g=u.next()){m.index>v?(y=m,m=null):y=m.sibling;var b=p(o,m,g.value,l);if(null===b){m||(m=y);break}e&&m&&null===b.alternate&&t(o,m),a=i(b,a,v),null===s?c=b:s.sibling=b,s=b,m=y}if(g.done)return n(o,m),c;if(null===m){for(;!g.done;v++,g=u.next())null!==(g=f(o,g.value,l))&&(a=i(g,a,v),null===s?c=g:s.sibling=g,s=g);return c}for(m=r(o,m);!g.done;v++,g=u.next())null!==(g=h(m,o,v,g.value,l))&&(e&&null!==g.alternate&&m.delete(null===g.key?v:g.key),a=i(g,a,v),null===s?c=g:s.sibling=g,s=g);return e&&m.forEach(function(e){return t(o,e)}),c}return function(e,r,i,u){"object"==typeof i&&null!==i&&i.type===ct&&null===i.key&&(i=i.props.children);var l="object"==typeof i&&null!==i;if(l)switch(i.$$typeof){case ut:e:{var c=i.key;for(l=r;null!==l;){if(l.key===c){if(10===l.tag?i.type===ct:l.type===i.type){n(e,l.sibling),(r=o(l,i.type===ct?i.props.children:i.props,u)).ref=li(e,l,i),r.return=e,e=r;break e}n(e,l);break}t(e,l),l=l.sibling}i.type===ct?((r=xo(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=wo(i,e.mode,u)).ref=li(e,r,i),u.return=e,e=u)}return a(e);case lt:e:{for(l=i.key;null!==r;){if(r.key===l){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[],u)).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Eo(i,e.mode,u)).return=e,e=r}return a(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i,u)).return=e,e=r):(n(e,r),(r=ko(i,e.mode,u)).return=e,e=r),a(e);if(ui(i))return m(e,r,i,u);if(gt(i))return v(e,r,i,u);if(l&&ci(e,i),void 0===i)switch(e.tag){case 2:case 1:d("152",(u=e.type).displayName||u.name||"Component")}return n(e,r)}}var fi=si(!0),di=si(!1),pi=null,hi=null,mi=!1;function vi(e,t){var n=new go(5,null,null,0);n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function yi(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function gi(e){if(mi){var t=hi;if(t){var n=t;if(!yi(e,t)){if(!(t=Zr(n))||!yi(e,t))return e.effectTag|=2,mi=!1,void(pi=e);vi(pi,n)}pi=e,hi=Jr(t)}else e.effectTag|=2,mi=!1,pi=e}}function bi(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag;)e=e.return;pi=e}function wi(e){if(e!==pi)return!1;if(!mi)return bi(e),mi=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Qr(t,e.memoizedProps))for(t=hi;t;)vi(e,t),t=Zr(t);return bi(e),hi=pi?Zr(e.stateNode):null,!0}function xi(){hi=pi=null,mi=!1}function ki(e,t,n){Ei(e,t,n,t.expirationTime)}function Ei(e,t,n,r){t.child=null===e?di(t,null,n,r):fi(t,e.child,n,r)}function _i(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Ci(e,t,n,r,o){_i(e,t);var i=0!=(64&t.effectTag);if(!n&&!i)return r&&yo(t,!1),Pi(e,t);n=t.stateNode,it.current=t;var a=i?null:n.render();return t.effectTag|=1,i&&(Ei(e,t,null,o),t.child=null),Ei(e,t,a,o),t.memoizedState=n.state,t.memoizedProps=n.props,r&&yo(t,!0),t.child}function Ti(e){var t=e.stateNode;t.pendingContext?ho(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ho(0,t.context,!1),Jo(e,t.containerInfo)}function Si(e,t,n,r){var o=e.child;for(null!==o&&(o.return=e);null!==o;){switch(o.tag){case 12:var i=0|o.stateNode;if(o.type===t&&0!=(i&n)){for(i=o;null!==i;){var a=i.alternate;if(0===i.expirationTime||i.expirationTime>r)i.expirationTime=r,null!==a&&(0===a.expirationTime||a.expirationTime>r)&&(a.expirationTime=r);else{if(null===a||!(0===a.expirationTime||a.expirationTime>r))break;a.expirationTime=r}i=i.return}i=null}else i=o.child;break;case 13:i=o.type===e.type?null:o.child;break;default:i=o.child}if(null!==i)i.return=o;else for(i=o;null!==i;){if(i===e){i=null;break}if(null!==(o=i.sibling)){o.return=i.return,i=o;break}i=i.return}o=i}}function Pi(e,t){if(null!==e&&t.child!==e.child&&d("153"),null!==t.child){var n=bo(e=t.child,e.pendingProps,e.expirationTime);for(t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=bo(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function Oi(e,t,n){if(0===t.expirationTime||t.expirationTime>n){switch(t.tag){case 3:Ti(t);break;case 2:vo(t);break;case 4:Jo(t,t.stateNode.containerInfo);break;case 13:$o(t)}return null}switch(t.tag){case 0:null!==e&&d("155");var r=t.type,o=t.pendingProps,i=lo(t);return r=r(o,i=co(t,i)),t.effectTag|=1,"object"==typeof r&&null!==r&&"function"==typeof r.render&&void 0===r.$$typeof?(i=t.type,t.tag=2,t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,"function"==typeof(i=i.getDerivedStateFromProps)&&ni(t,i,o),o=vo(t),r.updater=ri,t.stateNode=r,r._reactInternalFiber=t,ai(t,n),e=Ci(e,t,!0,o,n)):(t.tag=1,ki(e,t,r),t.memoizedProps=o,e=t.child),e;case 1:return o=t.type,n=t.pendingProps,ao.current||t.memoizedProps!==n?(o=o(n,r=co(t,r=lo(t))),t.effectTag|=1,ki(e,t,o),t.memoizedProps=n,e=t.child):e=Pi(e,t),e;case 2:if(o=vo(t),null===e)if(null===t.stateNode){var a=t.pendingProps,u=t.type;r=lo(t);var l=2===t.tag&&null!=t.type.contextTypes;a=new u(a,i=l?co(t,r):f),t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,a.updater=ri,t.stateNode=a,a._reactInternalFiber=t,l&&((l=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,l.__reactInternalMemoizedMaskedChildContext=i),ai(t,n),r=!0}else{u=t.type,r=t.stateNode,l=t.memoizedProps,i=t.pendingProps,r.props=l;var c=r.context;a=co(t,a=lo(t));var s=u.getDerivedStateFromProps;(u="function"==typeof s||"function"==typeof r.getSnapshotBeforeUpdate)||"function"!=typeof r.UNSAFE_componentWillReceiveProps&&"function"!=typeof r.componentWillReceiveProps||(l!==i||c!==a)&&ii(t,r,i,a),No=!1;var p=t.memoizedState;c=r.state=p;var h=t.updateQueue;null!==h&&(Lo(t,h,i,r,n),c=t.memoizedState),l!==i||p!==c||ao.current||No?("function"==typeof s&&(ni(t,s,i),c=t.memoizedState),(l=No||oi(t,l,i,p,c,a))?(u||"function"!=typeof r.UNSAFE_componentWillMount&&"function"!=typeof r.componentWillMount||("function"==typeof r.componentWillMount&&r.componentWillMount(),"function"==typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount()),"function"==typeof r.componentDidMount&&(t.effectTag|=4)):("function"==typeof r.componentDidMount&&(t.effectTag|=4),t.memoizedProps=i,t.memoizedState=c),r.props=i,r.state=c,r.context=a,r=l):("function"==typeof r.componentDidMount&&(t.effectTag|=4),r=!1)}else u=t.type,r=t.stateNode,i=t.memoizedProps,l=t.pendingProps,r.props=i,c=r.context,a=co(t,a=lo(t)),(u="function"==typeof(s=u.getDerivedStateFromProps)||"function"==typeof r.getSnapshotBeforeUpdate)||"function"!=typeof r.UNSAFE_componentWillReceiveProps&&"function"!=typeof r.componentWillReceiveProps||(i!==l||c!==a)&&ii(t,r,l,a),No=!1,c=t.memoizedState,p=r.state=c,null!==(h=t.updateQueue)&&(Lo(t,h,l,r,n),p=t.memoizedState),i!==l||c!==p||ao.current||No?("function"==typeof s&&(ni(t,s,l),p=t.memoizedState),(s=No||oi(t,i,l,c,p,a))?(u||"function"!=typeof r.UNSAFE_componentWillUpdate&&"function"!=typeof r.componentWillUpdate||("function"==typeof r.componentWillUpdate&&r.componentWillUpdate(l,p,a),"function"==typeof r.UNSAFE_componentWillUpdate&&r.UNSAFE_componentWillUpdate(l,p,a)),"function"==typeof r.componentDidUpdate&&(t.effectTag|=4),"function"==typeof r.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof r.componentDidUpdate||i===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),"function"!=typeof r.getSnapshotBeforeUpdate||i===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=256),t.memoizedProps=l,t.memoizedState=p),r.props=l,r.state=p,r.context=a,r=s):("function"!=typeof r.componentDidUpdate||i===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),"function"!=typeof r.getSnapshotBeforeUpdate||i===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=256),r=!1);return Ci(e,t,r,o,n);case 3:return Ti(t),null!==(o=t.updateQueue)?(r=null!==(r=t.memoizedState)?r.element:null,Lo(t,o,t.pendingProps,null,n),(o=t.memoizedState.element)===r?(xi(),e=Pi(e,t)):(r=t.stateNode,(r=(null===e||null===e.child)&&r.hydrate)&&(hi=Jr(t.stateNode.containerInfo),pi=t,r=mi=!0),r?(t.effectTag|=2,t.child=di(t,null,o,n)):(xi(),ki(e,t,o)),e=t.child)):(xi(),e=Pi(e,t)),e;case 5:return Zo(Yo.current),(o=Zo(Go.current))!==(r=_r(o,t.type))&&(oo(Xo,t),oo(Go,r)),null===e&&gi(t),o=t.type,l=t.memoizedProps,r=t.pendingProps,i=null!==e?e.memoizedProps:null,ao.current||l!==r||((l=1&t.mode&&!!r.hidden)&&(t.expirationTime=1073741823),l&&1073741823===n)?(l=r.children,Qr(o,r)?l=null:i&&Qr(o,i)&&(t.effectTag|=16),_i(e,t),1073741823!==n&&1&t.mode&&r.hidden?(t.expirationTime=1073741823,t.memoizedProps=r,e=null):(ki(e,t,l),t.memoizedProps=r,e=t.child)):e=Pi(e,t),e;case 6:return null===e&&gi(t),t.memoizedProps=t.pendingProps,null;case 16:return null;case 4:return Jo(t,t.stateNode.containerInfo),o=t.pendingProps,ao.current||t.memoizedProps!==o?(null===e?t.child=fi(t,null,o,n):ki(e,t,o),t.memoizedProps=o,e=t.child):e=Pi(e,t),e;case 14:return o=t.type.render,n=t.pendingProps,r=t.ref,ao.current||t.memoizedProps!==n||r!==(null!==e?e.ref:null)?(ki(e,t,o=o(n,r)),t.memoizedProps=n,e=t.child):e=Pi(e,t),e;case 10:return n=t.pendingProps,ao.current||t.memoizedProps!==n?(ki(e,t,n),t.memoizedProps=n,e=t.child):e=Pi(e,t),e;case 11:return n=t.pendingProps.children,ao.current||null!==n&&t.memoizedProps!==n?(ki(e,t,n),t.memoizedProps=n,e=t.child):e=Pi(e,t),e;case 15:return n=t.pendingProps,t.memoizedProps===n?e=Pi(e,t):(ki(e,t,n.children),t.memoizedProps=n,e=t.child),e;case 13:return function(e,t,n){var r=t.type._context,o=t.pendingProps,i=t.memoizedProps,a=!0;if(ao.current)a=!1;else if(i===o)return t.stateNode=0,$o(t),Pi(e,t);var u=o.value;if(t.memoizedProps=o,null===i)u=1073741823;else if(i.value===o.value){if(i.children===o.children&&a)return t.stateNode=0,$o(t),Pi(e,t);u=0}else{var l=i.value;if(l===u&&(0!==l||1/l==1/u)||l!=l&&u!=u){if(i.children===o.children&&a)return t.stateNode=0,$o(t),Pi(e,t);u=0}else if(u="function"==typeof r._calculateChangedBits?r._calculateChangedBits(l,u):1073741823,0==(u|=0)){if(i.children===o.children&&a)return t.stateNode=0,$o(t),Pi(e,t)}else Si(t,r,u,n)}return t.stateNode=u,$o(t),ki(e,t,o.children),t.child}(e,t,n);case 12:e:if(r=t.type,i=t.pendingProps,l=t.memoizedProps,o=r._currentValue,a=r._changedBits,ao.current||0!==a||l!==i){if(t.memoizedProps=i,void 0!==(u=i.unstable_observedBits)&&null!==u||(u=1073741823),t.stateNode=u,0!=(a&u))Si(t,r,a,n);else if(l===i){e=Pi(e,t);break e}n=(n=i.children)(o),t.effectTag|=1,ki(e,t,n),e=t.child}else e=Pi(e,t);return e;default:d("156")}}function Ni(e){e.effectTag|=4}var ji=void 0,Ri=void 0,Mi=void 0;function Ii(e,t){var n=t.pendingProps;switch(t.tag){case 1:return null;case 2:return fo(t),null;case 3:ei(),po();var r=t.stateNode;return r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(wi(t),t.effectTag&=-3),ji(t),null;case 5:ti(t),r=Zo(Yo.current);var o=t.type;if(null!==e&&null!=t.stateNode){var i=e.memoizedProps,a=t.stateNode,u=Zo(Go.current);a=zr(a,o,i,n,r),Ri(e,t,a,o,i,n,r,u),e.ref!==t.ref&&(t.effectTag|=128)}else{if(!n)return null===t.stateNode&&d("166"),null;if(e=Zo(Go.current),wi(t))n=t.stateNode,o=t.type,i=t.memoizedProps,n[B]=t,n[W]=i,r=Wr(n,o,i,e,r),t.updateQueue=r,null!==r&&Ni(t);else{(e=Ur(o,n,r,e))[B]=t,e[W]=n;e:for(i=t.child;null!==i;){if(5===i.tag||6===i.tag)e.appendChild(i.stateNode);else if(4!==i.tag&&null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)break e;i=i.return}i.sibling.return=i.return,i=i.sibling}Lr(e,o,n,r),Kr(o,n)&&Ni(t),t.stateNode=e}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Mi(e,t,e.memoizedProps,n);else{if("string"!=typeof n)return null===t.stateNode&&d("166"),null;r=Zo(Yo.current),Zo(Go.current),wi(t)?(r=t.stateNode,n=t.memoizedProps,r[B]=t,Vr(r,n)&&Ni(t)):((r=Ar(n,r))[B]=t,t.stateNode=r)}return null;case 14:case 16:case 10:case 11:case 15:return null;case 4:return ei(),ji(t),null;case 13:return Ko(t),null;case 12:return null;case 0:d("167");default:d("156")}}function Di(e,t){var n=t.source;null===t.stack&&null!==n&&wt(n),null!==n&&bt(n),t=t.value,null!==e&&2===e.tag&&bt(e);try{t&&t.suppressReactErrorLogging||console.error(t)}catch(e){e&&e.suppressReactErrorLogging||console.error(e)}}function Fi(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){fa(e,t)}else t.current=null}function Ui(e){switch(Oo(e),e.tag){case 2:Fi(e);var t=e.stateNode;if("function"==typeof t.componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){fa(e,t)}break;case 5:Fi(e);break;case 4:zi(e)}}function Ai(e){return 5===e.tag||3===e.tag||4===e.tag}function Li(e){e:{for(var t=e.return;null!==t;){if(Ai(t)){var n=t;break e}t=t.return}d("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:d("161")}16&n.effectTag&&(Pr(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||Ai(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var i=t,a=o.stateNode,u=n;8===i.nodeType?i.parentNode.insertBefore(a,u):i.insertBefore(a,u)}else t.insertBefore(o.stateNode,n);else r?(i=t,a=o.stateNode,8===i.nodeType?i.parentNode.insertBefore(a,i):i.appendChild(a)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function zi(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&d("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var i=t,a=i;;)if(Ui(a),null!==a.child&&4!==a.tag)a.child.return=a,a=a.child;else{if(a===i)break;for(;null===a.sibling;){if(null===a.return||a.return===i)break e;a=a.return}a.sibling.return=a.return,a=a.sibling}o?(i=r,a=t.stateNode,8===i.nodeType?i.parentNode.removeChild(a):i.removeChild(a)):r.removeChild(t.stateNode)}else if(4===t.tag?r=t.stateNode.containerInfo:Ui(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function Bi(e,t){switch(t.tag){case 2:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,i=t.updateQueue;t.updateQueue=null,null!==i&&(n[W]=r,Br(n,i,o,e,r))}break;case 6:null===t.stateNode&&d("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 15:case 16:break;default:d("163")}}function Wi(e,t,n){(n=Mo(n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Qa(r),Di(e,t)},n}function Vi(e,t,n){(n=Mo(n)).tag=3;var r=e.stateNode;return null!==r&&"function"==typeof r.componentDidCatch&&(n.callback=function(){null===aa?aa=new Set([this]):aa.add(this);var n=t.value,r=t.stack;Di(e,t),this.componentDidCatch(n,{componentStack:null!==r?r:""})}),n}function Hi(e,t,n,r,o,i){n.effectTag|=512,n.firstEffect=n.lastEffect=null,r=Wo(r,n),e=t;do{switch(e.tag){case 3:return e.effectTag|=1024,void Fo(e,r=Wi(e,r,i),i);case 2:if(t=r,n=e.stateNode,0==(64&e.effectTag)&&null!==n&&"function"==typeof n.componentDidCatch&&(null===aa||!aa.has(n)))return e.effectTag|=1024,void Fo(e,r=Vi(e,t,i),i)}e=e.return}while(null!==e)}function qi(e){switch(e.tag){case 2:fo(e);var t=e.effectTag;return 1024&t?(e.effectTag=-1025&t|64,e):null;case 3:return ei(),po(),1024&(t=e.effectTag)?(e.effectTag=-1025&t|64,e):null;case 5:return ti(e),null;case 16:return 1024&(t=e.effectTag)?(e.effectTag=-1025&t|64,e):null;case 4:return ei(),null;case 13:return Ko(e),null;default:return null}}ji=function(){},Ri=function(e,t,n){(t.updateQueue=n)&&Ni(t)},Mi=function(e,t,n,r){n!==r&&Ni(t)};var $i=Gr(),Ki=2,Qi=$i,Gi=0,Xi=0,Yi=!1,Zi=null,Ji=null,ea=0,ta=-1,na=!1,ra=null,oa=!1,ia=!1,aa=null;function ua(){if(null!==Zi)for(var e=Zi.return;null!==e;){var t=e;switch(t.tag){case 2:fo(t);break;case 3:ei(),po();break;case 5:ti(t);break;case 4:ei();break;case 13:Ko(t)}e=e.return}Ji=null,ea=0,ta=-1,na=!1,Zi=null,ia=!1}function la(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(512&e.effectTag)){t=Ii(t,e);var o=e;if(1073741823===ea||1073741823!==o.expirationTime){var i=0;switch(o.tag){case 3:case 2:var a=o.updateQueue;null!==a&&(i=a.expirationTime)}for(a=o.child;null!==a;)0!==a.expirationTime&&(0===i||i>a.expirationTime)&&(i=a.expirationTime),a=a.sibling;o.expirationTime=i}if(null!==t)return t;if(null!==n&&0==(512&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e)),null!==r)return r;if(null===n){ia=!0;break}e=n}else{if(null!==(e=qi(e)))return e.effectTag&=511,e;if(null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=512),null!==r)return r;if(null===n)break;e=n}}return null}function ca(e){var t=Oi(e.alternate,e,ea);return null===t&&(t=la(e)),it.current=null,t}function sa(e,t,n){Yi&&d("243"),Yi=!0,t===ea&&e===Ji&&null!==Zi||(ua(),ea=t,ta=-1,Zi=bo((Ji=e).current,null,ea),e.pendingCommitExpirationTime=0);var r=!1;for(na=!n||ea<=Ki;;){try{if(n)for(;null!==Zi&&!Ka();)Zi=ca(Zi);else for(;null!==Zi;)Zi=ca(Zi)}catch(t){if(null===Zi)r=!0,Qa(t);else{null===Zi&&d("271");var o=(n=Zi).return;if(null===o){r=!0,Qa(t);break}Hi(e,o,n,t,0,ea),Zi=la(n)}}break}if(Yi=!1,r)return null;if(null===Zi){if(ia)return e.pendingCommitExpirationTime=t,e.current.alternate;na&&d("262"),0<=ta&&setTimeout(function(){var t=e.current.expirationTime;0!==t&&(0===e.remainingExpirationTime||e.remainingExpirationTime<t)&&Aa(e,t)},ta),function(e){null===Ea&&d("246"),Ea.remainingExpirationTime=e}(e.current.expirationTime)}return null}function fa(e,t){var n;e:{for(Yi&&!oa&&d("263"),n=e.return;null!==n;){switch(n.tag){case 2:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromCatch||"function"==typeof r.componentDidCatch&&(null===aa||!aa.has(r))){Do(n,e=Vi(n,e=Wo(t,e),1),1),ha(n,1),n=void 0;break e}break;case 3:Do(n,e=Wi(n,e=Wo(t,e),1),1),ha(n,1),n=void 0;break e}n=n.return}3===e.tag&&(Do(e,n=Wi(e,n=Wo(t,e),1),1),ha(e,1)),n=void 0}return n}function da(){var e=2+25*(1+((ma()-2+500)/25|0));return e<=Gi&&(e=Gi+1),Gi=e}function pa(e,t){return e=0!==Xi?Xi:Yi?oa?1:ea:1&t.mode?Ra?2+10*(1+((e-2+15)/10|0)):2+25*(1+((e-2+500)/25|0)):1,Ra&&(0===Ca||e>Ca)&&(Ca=e),e}function ha(e,t){for(;null!==e;){if((0===e.expirationTime||e.expirationTime>t)&&(e.expirationTime=t),null!==e.alternate&&(0===e.alternate.expirationTime||e.alternate.expirationTime>t)&&(e.alternate.expirationTime=t),null===e.return){if(3!==e.tag)break;var n=e.stateNode;!Yi&&0!==ea&&t<ea&&ua();var r=n.current.expirationTime;Yi&&!oa&&Ji===n||Aa(n,r),Da>Ia&&d("185")}e=e.return}}function ma(){return Qi=Gr()-$i,Ki=2+(Qi/10|0)}function va(e){var t=Xi;Xi=2+25*(1+((ma()-2+500)/25|0));try{return e()}finally{Xi=t}}function ya(e,t,n,r,o){var i=Xi;Xi=1;try{return e(t,n,r,o)}finally{Xi=i}}var ga=null,ba=null,wa=0,xa=-1,ka=!1,Ea=null,_a=0,Ca=0,Ta=!1,Sa=!1,Pa=null,Oa=null,Na=!1,ja=!1,Ra=!1,Ma=null,Ia=1e3,Da=0,Fa=1;function Ua(e){if(0!==wa){if(e>wa)return;Yr(xa)}var t=Gr()-$i;wa=e,xa=Xr(za,{timeout:10*(e-2)-t})}function Aa(e,t){if(null===e.nextScheduledRoot)e.remainingExpirationTime=t,null===ba?(ga=ba=e,e.nextScheduledRoot=e):(ba=ba.nextScheduledRoot=e).nextScheduledRoot=ga;else{var n=e.remainingExpirationTime;(0===n||t<n)&&(e.remainingExpirationTime=t)}ka||(Na?ja&&(Ea=e,_a=1,qa(e,1,!1)):1===t?Ba():Ua(t))}function La(){var e=0,t=null;if(null!==ba)for(var n=ba,r=ga;null!==r;){var o=r.remainingExpirationTime;if(0===o){if((null===n||null===ba)&&d("244"),r===r.nextScheduledRoot){ga=ba=r.nextScheduledRoot=null;break}if(r===ga)ga=o=r.nextScheduledRoot,ba.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===ba){(ba=n).nextScheduledRoot=ga,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if((0===e||o<e)&&(e=o,t=r),r===ba)break;n=r,r=r.nextScheduledRoot}}null!==(n=Ea)&&n===t&&1===e?Da++:Da=0,Ea=t,_a=e}function za(e){Wa(0,!0,e)}function Ba(){Wa(1,!1,null)}function Wa(e,t,n){if(Oa=n,La(),t)for(;null!==Ea&&0!==_a&&(0===e||e>=_a)&&(!Ta||ma()>=_a);)ma(),qa(Ea,_a,!Ta),La();else for(;null!==Ea&&0!==_a&&(0===e||e>=_a);)qa(Ea,_a,!1),La();null!==Oa&&(wa=0,xa=-1),0!==_a&&Ua(_a),Oa=null,Ta=!1,Ha()}function Va(e,t){ka&&d("253"),Ea=e,_a=t,qa(e,t,!1),Ba(),Ha()}function Ha(){if(Da=0,null!==Ma){var e=Ma;Ma=null;for(var t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){Sa||(Sa=!0,Pa=e)}}}if(Sa)throw e=Pa,Pa=null,Sa=!1,e}function qa(e,t,n){ka&&d("245"),ka=!0,n?null!==(n=e.finishedWork)?$a(e,n,t):(e.finishedWork=null,null!==(n=sa(e,t,!0))&&(Ka()?e.finishedWork=n:$a(e,n,t))):null!==(n=e.finishedWork)?$a(e,n,t):(e.finishedWork=null,null!==(n=sa(e,t,!1))&&$a(e,n,t)),ka=!1}function $a(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime<=n&&(null===Ma?Ma=[r]:Ma.push(r),r._defer))return e.finishedWork=t,void(e.remainingExpirationTime=0);if(e.finishedWork=null,oa=Yi=!0,(n=t.stateNode).current===t&&d("177"),0===(r=n.pendingCommitExpirationTime)&&d("261"),n.pendingCommitExpirationTime=0,ma(),it.current=null,1<t.effectTag)if(null!==t.lastEffect){t.lastEffect.nextEffect=t;var o=t.firstEffect}else o=t;else o=t.firstEffect;qr=On;var i=l();if(Wn(i)){if("selectionStart"in i)var a={start:i.selectionStart,end:i.selectionEnd};else e:{var u=window.getSelection&&window.getSelection();if(u&&0!==u.rangeCount){a=u.anchorNode;var c=u.anchorOffset,f=u.focusNode;u=u.focusOffset;try{a.nodeType,f.nodeType}catch(e){a=null;break e}var p=0,h=-1,m=-1,v=0,y=0,g=i,b=null;t:for(;;){for(var w;g!==a||0!==c&&3!==g.nodeType||(h=p+c),g!==f||0!==u&&3!==g.nodeType||(m=p+u),3===g.nodeType&&(p+=g.nodeValue.length),null!==(w=g.firstChild);)b=g,g=w;for(;;){if(g===i)break t;if(b===a&&++v===c&&(h=p),b===f&&++y===u&&(m=p),null!==(w=g.nextSibling))break;b=(g=b).parentNode}g=w}a=-1===h||-1===m?null:{start:h,end:m}}else a=null}a=a||{start:0,end:0}}else a=null;for($r={focusedElem:i,selectionRange:a},Nn(!1),ra=o;null!==ra;){i=!1,a=void 0;try{for(;null!==ra;){if(256&ra.effectTag){var x=ra.alternate;switch((c=ra).tag){case 2:if(256&c.effectTag&&null!==x){var k=x.memoizedProps,E=x.memoizedState,_=c.stateNode;_.props=c.memoizedProps,_.state=c.memoizedState;var C=_.getSnapshotBeforeUpdate(k,E);_.__reactInternalSnapshotBeforeUpdate=C}break;case 3:case 5:case 6:case 4:break;default:d("163")}}ra=ra.nextEffect}}catch(e){i=!0,a=e}i&&(null===ra&&d("178"),fa(ra,a),null!==ra&&(ra=ra.nextEffect))}for(ra=o;null!==ra;){x=!1,k=void 0;try{for(;null!==ra;){var T=ra.effectTag;if(16&T&&Pr(ra.stateNode,""),128&T){var S=ra.alternate;if(null!==S){var P=S.ref;null!==P&&("function"==typeof P?P(null):P.current=null)}}switch(14&T){case 2:Li(ra),ra.effectTag&=-3;break;case 6:Li(ra),ra.effectTag&=-3,Bi(ra.alternate,ra);break;case 4:Bi(ra.alternate,ra);break;case 8:zi(E=ra),E.return=null,E.child=null,E.alternate&&(E.alternate.child=null,E.alternate.return=null)}ra=ra.nextEffect}}catch(e){x=!0,k=e}x&&(null===ra&&d("178"),fa(ra,k),null!==ra&&(ra=ra.nextEffect))}if(P=$r,S=l(),T=P.focusedElem,x=P.selectionRange,S!==T&&s(document.documentElement,T)){Wn(T)&&(S=x.start,void 0===(P=x.end)&&(P=S),"selectionStart"in T?(T.selectionStart=S,T.selectionEnd=Math.min(P,T.value.length)):window.getSelection&&(S=window.getSelection(),k=T[he()].length,P=Math.min(x.start,k),x=void 0===x.end?P:Math.min(x.end,k),!S.extend&&P>x&&(k=x,x=P,P=k),k=Bn(T,P),E=Bn(T,x),k&&E&&(1!==S.rangeCount||S.anchorNode!==k.node||S.anchorOffset!==k.offset||S.focusNode!==E.node||S.focusOffset!==E.offset)&&((_=document.createRange()).setStart(k.node,k.offset),S.removeAllRanges(),P>x?(S.addRange(_),S.extend(E.node,E.offset)):(_.setEnd(E.node,E.offset),S.addRange(_))))),S=[];for(P=T;P=P.parentNode;)1===P.nodeType&&S.push({element:P,left:P.scrollLeft,top:P.scrollTop});for(T.focus(),T=0;T<S.length;T++)(P=S[T]).element.scrollLeft=P.left,P.element.scrollTop=P.top}for($r=null,Nn(qr),qr=null,n.current=t,ra=o;null!==ra;){o=!1,T=void 0;try{for(S=r;null!==ra;){var O=ra.effectTag;if(36&O){var N=ra.alternate;switch(x=S,(P=ra).tag){case 2:var j=P.stateNode;if(4&P.effectTag)if(null===N)j.props=P.memoizedProps,j.state=P.memoizedState,j.componentDidMount();else{var R=N.memoizedProps,M=N.memoizedState;j.props=P.memoizedProps,j.state=P.memoizedState,j.componentDidUpdate(R,M,j.__reactInternalSnapshotBeforeUpdate)}var I=P.updateQueue;null!==I&&(j.props=P.memoizedProps,j.state=P.memoizedState,Bo(P,I,j));break;case 3:var D=P.updateQueue;if(null!==D){if(k=null,null!==P.child)switch(P.child.tag){case 5:k=P.child.stateNode;break;case 2:k=P.child.stateNode}Bo(P,D,k)}break;case 5:var F=P.stateNode;null===N&&4&P.effectTag&&Kr(P.type,P.memoizedProps)&&F.focus();break;case 6:case 4:case 15:case 16:break;default:d("163")}}if(128&O){P=void 0;var U=ra.ref;if(null!==U){var A=ra.stateNode;switch(ra.tag){case 5:P=A;break;default:P=A}"function"==typeof U?U(P):U.current=P}}var L=ra.nextEffect;ra.nextEffect=null,ra=L}}catch(e){o=!0,T=e}o&&(null===ra&&d("178"),fa(ra,T),null!==ra&&(ra=ra.nextEffect))}Yi=oa=!1,Po(t.stateNode),0===(t=n.current.expirationTime)&&(aa=null),e.remainingExpirationTime=t}function Ka(){return!(null===Oa||Oa.timeRemaining()>Fa)&&(Ta=!0)}function Qa(e){null===Ea&&d("246"),Ea.remainingExpirationTime=0,Sa||(Sa=!0,Pa=e)}function Ga(e,t){var n=Na;Na=!0;try{return e(t)}finally{(Na=n)||ka||Ba()}}function Xa(e,t){if(Na&&!ja){ja=!0;try{return e(t)}finally{ja=!1}}return e(t)}function Ya(e,t){ka&&d("187");var n=Na;Na=!0;try{return ya(e,t)}finally{Na=n,Ba()}}function Za(e){var t=Na;Na=!0;try{ya(e)}finally{(Na=t)||ka||Wa(1,!1,null)}}function Ja(e,t,n,r,o){var i=t.current;if(n){var a;n=n._reactInternalFiber;e:{for(2===an(n)&&2===n.tag||d("170"),a=n;3!==a.tag;){if(so(a)){a=a.stateNode.__reactInternalMemoizedMergedChildContext;break e}(a=a.return)||d("171")}a=a.stateNode.context}n=so(n)?mo(n,a):a}else n=f;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=Mo(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),Do(i,o,r),ha(i,r),r}function eu(e){var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?d("188"):d("268",Object.keys(e))),null===(e=cn(t))?null:e.stateNode}function tu(e,t,n,r){var o=t.current;return Ja(e,t,n,o=pa(ma(),o),r)}function nu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function ru(e){var t=e.findFiberByHostInstance;return function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Co=So(function(e){return t.onCommitFiberRoot(n,e)}),To=So(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}return!0}(a({},e,{findHostInstanceByFiber:function(e){return null===(e=cn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}var ou=Ga,iu=function(e,t,n){if(Ra)return e(t,n);Na||ka||0===Ca||(Wa(Ca,!1,null),Ca=0);var r=Ra,o=Na;Na=Ra=!0;try{return e(t,n)}finally{Ra=r,(Na=o)||ka||Ba()}},au=function(){ka||0===Ca||(Wa(Ca,!1,null),Ca=0)};function uu(e){this._expirationTime=da(),this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function lu(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function cu(e,t,n){this._internalRoot=_o(e,t,n)}function su(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function fu(e,t,n,r,o){su(n)||d("200");var i=n._reactRootContainer;if(i){if("function"==typeof o){var a=o;o=function(){var e=nu(i._internalRoot);a.call(e)}}null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new cu(e,!1,t)}(n,r),"function"==typeof o){var u=o;o=function(){var e=nu(i._internalRoot);u.call(e)}}Xa(function(){null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)})}return nu(i._internalRoot)}function du(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return su(t)||d("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:lt,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Le.injectFiberControlledHostComponent(Hr),uu.prototype.render=function(e){this._defer||d("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new lu;return Ja(e,t,null,n,r._onCommit),r},uu.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},uu.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||d("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&d("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,Va(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},uu.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},lu.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},lu.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&d("191",n),n()}}},cu.prototype.render=function(e,t){var n=this._internalRoot,r=new lu;return null!==(t=void 0===t?null:t)&&r.then(t),tu(e,n,null,r._onCommit),r},cu.prototype.unmount=function(e){var t=this._internalRoot,n=new lu;return null!==(e=void 0===e?null:e)&&n.then(e),tu(null,t,null,n._onCommit),n},cu.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new lu;return null!==(n=void 0===n?null:n)&&o.then(n),tu(t,r,e,o._onCommit),o},cu.prototype.createBatch=function(){var e=new uu(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime<=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Ke=ou,Qe=iu,Ge=au;var pu={createPortal:du,findDOMNode:function(e){return null==e?null:1===e.nodeType?e:eu(e)},hydrate:function(e,t,n){return fu(null,e,t,!0,n)},render:function(e,t,n){return fu(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return(null==e||void 0===e._reactInternalFiber)&&d("38"),fu(e,t,n,!1,r)},unmountComponentAtNode:function(e){return su(e)||d("40"),!!e._reactRootContainer&&(Xa(function(){fu(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return du.apply(void 0,arguments)},unstable_batchedUpdates:Ga,unstable_deferredUpdates:va,flushSync:Ya,unstable_flushControlled:Za,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:L,EventPluginRegistry:_,EventPropagators:ne,ReactControlledComponent:$e,ReactDOMComponentTree:$,ReactDOMEventListener:Dn},unstable_createRoot:function(e,t){return new cu(e,!0,null!=t&&!0===t.hydrate)}};ru({findFiberByHostInstance:V,bundleType:0,version:"16.4.0",rendererPackageName:"react-dom"});var hu={default:pu},mu=hu&&pu||hu;e.exports=mu.default?mu.default:mu},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(33)},function(e,t,n){"use strict";
/** @license React v16.4.0
 * react.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(14),o=n(7),i=n(13),a=n(6),u="function"==typeof Symbol&&Symbol.for,l=u?Symbol.for("react.element"):60103,c=u?Symbol.for("react.portal"):60106,s=u?Symbol.for("react.fragment"):60107,f=u?Symbol.for("react.strict_mode"):60108,d=u?Symbol.for("react.profiler"):60114,p=u?Symbol.for("react.provider"):60109,h=u?Symbol.for("react.context"):60110,m=u?Symbol.for("react.async_mode"):60111,v=u?Symbol.for("react.forward_ref"):60112;u&&Symbol.for("react.timeout");var y="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);o(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function w(e,t,n){this.props=e,this.context=t,this.refs=i,this.updater=n||b}function x(){}function k(e,t,n){this.props=e,this.context=t,this.refs=i,this.updater=n||b}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&g("85"),this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},x.prototype=w.prototype;var E=k.prototype=new x;E.constructor=k,r(E,w.prototype),E.isPureReactComponent=!0;var _={current:null},C=Object.prototype.hasOwnProperty,T={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,n){var r=void 0,o={},i=null,a=null;if(null!=t)for(r in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(i=""+t.key),t)C.call(t,r)&&!T.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:l,type:e,key:i,ref:a,props:o,_owner:_.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===l}var O=/\/+/g,N=[];function j(e,t,n,r){if(N.length){var o=N.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function R(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>N.length&&N.push(e)}function M(e,t,n,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var i=!1;if(null===e)i=!0;else switch(o){case"string":case"number":i=!0;break;case"object":switch(e.$$typeof){case l:case c:i=!0}}if(i)return n(r,e,""===t?"."+I(e,0):t),1;if(i=0,t=""===t?".":t+":",Array.isArray(e))for(var a=0;a<e.length;a++){var u=t+I(o=e[a],a);i+=M(o,u,n,r)}else if(null===e||void 0===e?u=null:u="function"==typeof(u=y&&e[y]||e["@@iterator"])?u:null,"function"==typeof u)for(e=u.call(e),a=0;!(o=e.next()).done;)i+=M(o=o.value,u=t+I(o,a++),n,r);else"object"===o&&g("31","[object Object]"===(n=""+e)?"object with keys {"+Object.keys(e).join(", ")+"}":n,"");return i}function I(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function D(e,t){e.func.call(e.context,t,e.count++)}function F(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?U(e,r,n,a.thatReturnsArgument):null!=e&&(P(e)&&(t=o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(O,"$&/")+"/")+n,e={$$typeof:l,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}),r.push(e))}function U(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(O,"$&/")+"/"),t=j(t,i,r,o),null==e||M(e,"",F,t),R(t)}var A={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return U(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;t=j(null,null,t,n),null==e||M(e,"",D,t),R(t)},count:function(e){return null==e?0:M(e,"",a.thatReturnsNull,null)},toArray:function(e){var t=[];return U(e,t,null,a.thatReturnsArgument),t},only:function(e){return P(e)||g("143"),e}},createRef:function(){return{current:null}},Component:w,PureComponent:k,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:h,_calculateChangedBits:t,_defaultValue:e,_currentValue:e,_currentValue2:e,_changedBits:0,_changedBits2:0,Provider:null,Consumer:null}).Provider={$$typeof:p,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:v,render:e}},Fragment:s,StrictMode:f,unstable_AsyncMode:m,unstable_Profiler:d,createElement:S,cloneElement:function(e,t,n){(null===e||void 0===e)&&g("267",e);var o=void 0,i=r({},e.props),a=e.key,u=e.ref,c=e._owner;if(null!=t){void 0!==t.ref&&(u=t.ref,c=_.current),void 0!==t.key&&(a=""+t.key);var s=void 0;for(o in e.type&&e.type.defaultProps&&(s=e.type.defaultProps),t)C.call(t,o)&&!T.hasOwnProperty(o)&&(i[o]=void 0===t[o]&&void 0!==s?s[o]:t[o])}if(1===(o=arguments.length-2))i.children=n;else if(1<o){s=Array(o);for(var f=0;f<o;f++)s[f]=arguments[f+2];i.children=s}return{$$typeof:l,type:e.type,key:a,ref:u,props:i,_owner:c}},createFactory:function(e){var t=S.bind(null,e);return t.type=e,t},isValidElement:P,version:"16.4.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:_,assign:r}},L={default:A},z=L&&A||L;e.exports=z.default?z.default:z},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),o=n(34),i=n(3),a=n(8),u=n(23),l=n(22),c=n(21),s=n(18),f=l.createLogger(),d=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||a.compose,p=a.createStore(s.expressions,d(a.applyMiddleware(u.default,f)));o.render(r.createElement(i.Provider,{store:p},r.createElement(c.default,null)),document.getElementById("wrapper"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX3Jvb3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fU3ltYm9sLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2dldFJhd1RhZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19vYmplY3RUb1N0cmluZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19iYXNlR2V0VGFnLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX292ZXJBcmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fZ2V0UHJvdG90eXBlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvaXNPYmplY3RMaWtlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvaXNQbGFpbk9iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvdXRpbHMvUHJvcFR5cGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb21wb25lbnRzL1Byb3ZpZGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9TdWJzY3JpcHRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2NvbXBvbmVudHMvY29ubmVjdEFkdmFuY2VkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9zaGFsbG93RXF1YWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2Nvbm5lY3Qvd3JhcE1hcFRvUHJvcHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2Nvbm5lY3QvbWFwRGlzcGF0Y2hUb1Byb3BzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L21hcFN0YXRlVG9Qcm9wcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29ubmVjdC9tZXJnZVByb3BzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L3NlbGVjdG9yRmFjdG9yeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29ubmVjdC9jb25uZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9pbnZhcmlhbnQvYnJvd3Nlci5qcyIsIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9lbXB0eUZ1bmN0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9pbnZhcmlhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlZHV4L2VzL2NyZWF0ZVN0b3JlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWR1eC9lcy9jb21iaW5lUmVkdWNlcnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlZHV4L2VzL2JpbmRBY3Rpb25DcmVhdG9ycy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgvZXMvY29tcG9zZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgvZXMvYXBwbHlNaWRkbGV3YXJlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWR1eC9ub2RlX21vZHVsZXMvc3ltYm9sLW9ic2VydmFibGUvZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0b3JlL2V4cHJlc3Npb25zL2FjdGlvbnMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0b3JlL2V4cHJlc3Npb25zL2FjdGlvblR5cGVzLnRzIiwid2VicGFjazovLy8uL3NyYy9zdG9yZS9leHByZXNzaW9ucy9yZWR1Y2VyLnRzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9lbXB0eU9iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgvbm9kZV9tb2R1bGVzL3N5bWJvbC1vYnNlcnZhYmxlL2VzL3BvbnlmaWxsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2ZyZWVHbG9iYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9zdG9yZS9yZWR1Y2Vycy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9FeHByZXNzaW9uQnV0dG9ucy50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvRXhwcmVzc2lvblZpZXcudHN4Iiwid2VicGFjazovLy8uL3NyYy9jb250YWluZXJzL0V4cHJlc3Npb25FZGl0b3IudHN4Iiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWR1eC1sb2dnZXIvZGlzdC9yZWR1eC1sb2dnZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlZHV4LXRodW5rL2VzL2luZGV4LmpzIiwid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9oYXJtb255LW1vZHVsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9pc05vZGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2lzVGV4dE5vZGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2NvbnRhaW5zTm9kZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvc2hhbGxvd0VxdWFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9nZXRBY3RpdmVFbGVtZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9FeGVjdXRpb25FbnZpcm9ubWVudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL3NyYy9pbmRleC50c3giXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJmcmVlU2VsZiIsInNlbGYiLCJfU3ltYm9sIiwiX2ZyZWVHbG9iYWwiLCJGdW5jdGlvbiIsIm9iamVjdFByb3RvIiwiX2dldFJhd1RhZ19oYXNPd25Qcm9wZXJ0eSIsIm5hdGl2ZU9iamVjdFRvU3RyaW5nIiwidG9TdHJpbmciLCJzeW1Ub1N0cmluZ1RhZyIsInVuZGVmaW5lZCIsIl9nZXRSYXdUYWciLCJpc093biIsInRhZyIsInVubWFza2VkIiwiZSIsInJlc3VsdCIsIl9vYmplY3RUb1N0cmluZ19uYXRpdmVPYmplY3RUb1N0cmluZyIsIl9vYmplY3RUb1N0cmluZyIsIm51bGxUYWciLCJ1bmRlZmluZWRUYWciLCJfYmFzZUdldFRhZ19zeW1Ub1N0cmluZ1RhZyIsIl9iYXNlR2V0VGFnIiwiX2dldFByb3RvdHlwZSIsImZ1bmMiLCJ0cmFuc2Zvcm0iLCJhcmciLCJfb3ZlckFyZyIsImdldFByb3RvdHlwZU9mIiwibG9kYXNoX2VzX2lzT2JqZWN0TGlrZSIsIm9iamVjdFRhZyIsImZ1bmNQcm90byIsImlzUGxhaW5PYmplY3Rfb2JqZWN0UHJvdG8iLCJmdW5jVG9TdHJpbmciLCJpc1BsYWluT2JqZWN0X2hhc093blByb3BlcnR5Iiwib2JqZWN0Q3RvclN0cmluZyIsIl9fd2VicGFja19leHBvcnRzX18iLCJwcm90byIsIkN0b3IiLCJjb25zdHJ1Y3RvciIsInN1YnNjcmlwdGlvblNoYXBlIiwicHJvcF90eXBlc19kZWZhdWx0IiwiYSIsInNoYXBlIiwidHJ5U3Vic2NyaWJlIiwiaXNSZXF1aXJlZCIsInRyeVVuc3Vic2NyaWJlIiwibm90aWZ5TmVzdGVkU3VicyIsImlzU3Vic2NyaWJlZCIsInN0b3JlU2hhcGUiLCJzdWJzY3JpYmUiLCJkaXNwYXRjaCIsImdldFN0YXRlIiwiY3JlYXRlUHJvdmlkZXIiLCJfUHJvdmlkZXIkY2hpbGRDb250ZXgiLCJzdG9yZUtleSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInN1YnNjcmlwdGlvbktleSIsIlByb3ZpZGVyIiwiX0NvbXBvbmVudCIsInByb3BzIiwiY29udGV4dCIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJUeXBlRXJyb3IiLCJfY2xhc3NDYWxsQ2hlY2siLCJ0aGlzIiwiX3RoaXMiLCJSZWZlcmVuY2VFcnJvciIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwic3RvcmUiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJ3cml0YWJsZSIsImNvbmZpZ3VyYWJsZSIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiX2luaGVyaXRzIiwiZ2V0Q2hpbGRDb250ZXh0IiwiX3JlZiIsInJlbmRlciIsInJlYWN0Iiwib25seSIsImNoaWxkcmVuIiwicHJvcFR5cGVzIiwiZWxlbWVudCIsImNoaWxkQ29udGV4dFR5cGVzIiwiY29tcG9uZW50c19Qcm92aWRlciIsIkNMRUFSRUQiLCJudWxsTGlzdGVuZXJzIiwibm90aWZ5IiwiU3Vic2NyaXB0aW9uIiwicGFyZW50U3ViIiwib25TdGF0ZUNoYW5nZSIsIlN1YnNjcmlwdGlvbl9jbGFzc0NhbGxDaGVjayIsInVuc3Vic2NyaWJlIiwibGlzdGVuZXJzIiwiYWRkTmVzdGVkU3ViIiwibGlzdGVuZXIiLCJCb29sZWFuIiwiY3VycmVudCIsIm5leHQiLCJjbGVhciIsInNsaWNlIiwicHVzaCIsInNwbGljZSIsImluZGV4T2YiLCJfZXh0ZW5kcyIsImFzc2lnbiIsInRhcmdldCIsInNvdXJjZSIsImhvdFJlbG9hZGluZ1ZlcnNpb24iLCJkdW1teVN0YXRlIiwibm9vcCIsImNvbm5lY3RBZHZhbmNlZCIsInNlbGVjdG9yRmFjdG9yeSIsIl9jb250ZXh0VHlwZXMiLCJfY2hpbGRDb250ZXh0VHlwZXMiLCJfcmVmJGdldERpc3BsYXlOYW1lIiwiZ2V0RGlzcGxheU5hbWUiLCJfcmVmJG1ldGhvZE5hbWUiLCJtZXRob2ROYW1lIiwiX3JlZiRyZW5kZXJDb3VudFByb3AiLCJyZW5kZXJDb3VudFByb3AiLCJfcmVmJHNob3VsZEhhbmRsZVN0YXQiLCJzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMiLCJfcmVmJHN0b3JlS2V5IiwiX3JlZiR3aXRoUmVmIiwid2l0aFJlZiIsImNvbm5lY3RPcHRpb25zIiwib2JqIiwia2V5cyIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllcyIsInZlcnNpb24iLCJjb250ZXh0VHlwZXMiLCJXcmFwcGVkQ29tcG9uZW50IiwiYnJvd3Nlcl9kZWZhdWx0IiwiSlNPTiIsInN0cmluZ2lmeSIsIndyYXBwZWRDb21wb25lbnROYW1lIiwiZGlzcGxheU5hbWUiLCJzZWxlY3RvckZhY3RvcnlPcHRpb25zIiwiQ29ubmVjdCIsImNvbm5lY3RBZHZhbmNlZF9jbGFzc0NhbGxDaGVjayIsImNvbm5lY3RBZHZhbmNlZF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwic3RhdGUiLCJyZW5kZXJDb3VudCIsInByb3BzTW9kZSIsInNldFdyYXBwZWRJbnN0YW5jZSIsImluaXRTZWxlY3RvciIsImluaXRTdWJzY3JpcHRpb24iLCJjb25uZWN0QWR2YW5jZWRfaW5oZXJpdHMiLCJfcmVmMiIsInN1YnNjcmlwdGlvbiIsImNvbXBvbmVudERpZE1vdW50Iiwic2VsZWN0b3IiLCJydW4iLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJmb3JjZVVwZGF0ZSIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJuZXh0UHJvcHMiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsImdldFdyYXBwZWRJbnN0YW5jZSIsIndyYXBwZWRJbnN0YW5jZSIsInJlZiIsInNvdXJjZVNlbGVjdG9yIiwiZXJyb3IiLCJtYWtlU2VsZWN0b3JTdGF0ZWZ1bCIsImNvbXBvbmVudERpZFVwZGF0ZSIsIm5vdGlmeU5lc3RlZFN1YnNPbkNvbXBvbmVudERpZFVwZGF0ZSIsInNldFN0YXRlIiwiYWRkRXh0cmFQcm9wcyIsIndpdGhFeHRyYXMiLCJob2lzdF9ub25fcmVhY3Rfc3RhdGljc19kZWZhdWx0IiwiaGFzT3duIiwiaXMiLCJ4IiwieSIsInNoYWxsb3dFcXVhbCIsIm9iakEiLCJvYmpCIiwia2V5c0EiLCJrZXlzQiIsIndyYXBNYXBUb1Byb3BzQ29uc3RhbnQiLCJnZXRDb25zdGFudCIsIm9wdGlvbnMiLCJjb25zdGFudCIsImNvbnN0YW50U2VsZWN0b3IiLCJkZXBlbmRzT25Pd25Qcm9wcyIsImdldERlcGVuZHNPbk93blByb3BzIiwibWFwVG9Qcm9wcyIsIndyYXBNYXBUb1Byb3BzRnVuYyIsInByb3h5Iiwic3RhdGVPckRpc3BhdGNoIiwib3duUHJvcHMiLCJjb25uZWN0X21hcERpc3BhdGNoVG9Qcm9wcyIsIm1hcERpc3BhdGNoVG9Qcm9wcyIsImVzIiwiY29ubmVjdF9tYXBTdGF0ZVRvUHJvcHMiLCJtYXBTdGF0ZVRvUHJvcHMiLCJtZXJnZVByb3BzX2V4dGVuZHMiLCJkZWZhdWx0TWVyZ2VQcm9wcyIsInN0YXRlUHJvcHMiLCJkaXNwYXRjaFByb3BzIiwiY29ubmVjdF9tZXJnZVByb3BzIiwibWVyZ2VQcm9wcyIsInB1cmUiLCJhcmVNZXJnZWRQcm9wc0VxdWFsIiwiaGFzUnVuT25jZSIsIm1lcmdlZFByb3BzIiwibmV4dE1lcmdlZFByb3BzIiwid3JhcE1lcmdlUHJvcHNGdW5jIiwiaW1wdXJlRmluYWxQcm9wc1NlbGVjdG9yRmFjdG9yeSIsInB1cmVGaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5IiwiYXJlU3RhdGVzRXF1YWwiLCJhcmVPd25Qcm9wc0VxdWFsIiwiYXJlU3RhdGVQcm9wc0VxdWFsIiwiaGFzUnVuQXRMZWFzdE9uY2UiLCJoYW5kbGVTdWJzZXF1ZW50Q2FsbHMiLCJuZXh0U3RhdGUiLCJuZXh0T3duUHJvcHMiLCJuZXh0U3RhdGVQcm9wcyIsInN0YXRlUHJvcHNDaGFuZ2VkIiwicHJvcHNDaGFuZ2VkIiwic3RhdGVDaGFuZ2VkIiwiZmluYWxQcm9wc1NlbGVjdG9yRmFjdG9yeSIsImluaXRNYXBTdGF0ZVRvUHJvcHMiLCJpbml0TWFwRGlzcGF0Y2hUb1Byb3BzIiwiaW5pdE1lcmdlUHJvcHMiLCJzZWxlY3RvckZhY3Rvcnlfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJjb25uZWN0X2V4dGVuZHMiLCJtYXRjaCIsImZhY3RvcmllcyIsIkVycm9yIiwic3RyaWN0RXF1YWwiLCJiIiwiY29ubmVjdF9jb25uZWN0IiwiX3JlZiRjb25uZWN0SE9DIiwiY29ubmVjdEhPQyIsIl9yZWYkbWFwU3RhdGVUb1Byb3BzRiIsIm1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcyIsIl9yZWYkbWFwRGlzcGF0Y2hUb1BybyIsIm1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcmllcyIsIl9yZWYkbWVyZ2VQcm9wc0ZhY3RvciIsIm1lcmdlUHJvcHNGYWN0b3JpZXMiLCJfcmVmJHNlbGVjdG9yRmFjdG9yeSIsIl9yZWYyJHB1cmUiLCJfcmVmMiRhcmVTdGF0ZXNFcXVhbCIsIl9yZWYyJGFyZU93blByb3BzRXF1YSIsIl9yZWYyJGFyZVN0YXRlUHJvcHNFcSIsIl9yZWYyJGFyZU1lcmdlZFByb3BzRSIsImV4dHJhT3B0aW9ucyIsImNvbm5lY3Rfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJjb25kaXRpb24iLCJmb3JtYXQiLCJmIiwiYXJncyIsImFyZ0luZGV4IiwicmVwbGFjZSIsImZyYW1lc1RvUG9wIiwiZyIsImV2YWwiLCJ3aW5kb3ciLCJtYWtlRW1wdHlGdW5jdGlvbiIsImVtcHR5RnVuY3Rpb24iLCJ0aGF0UmV0dXJucyIsInRoYXRSZXR1cm5zRmFsc2UiLCJ0aGF0UmV0dXJuc1RydWUiLCJ0aGF0UmV0dXJuc051bGwiLCJ0aGF0UmV0dXJuc1RoaXMiLCJ0aGF0UmV0dXJuc0FyZ3VtZW50IiwidmFsaWRhdGVGb3JtYXQiLCJBY3Rpb25UeXBlcyIsIklOSVQiLCJjcmVhdGVTdG9yZV9jcmVhdGVTdG9yZSIsInJlZHVjZXIiLCJwcmVsb2FkZWRTdGF0ZSIsImVuaGFuY2VyIiwiY3VycmVudFJlZHVjZXIiLCJjdXJyZW50U3RhdGUiLCJjdXJyZW50TGlzdGVuZXJzIiwibmV4dExpc3RlbmVycyIsImlzRGlzcGF0Y2hpbmciLCJlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzIiwiaW5kZXgiLCJhY3Rpb24iLCJpc1BsYWluT2JqZWN0IiwidHlwZSIsInJlcGxhY2VSZWR1Y2VyIiwibmV4dFJlZHVjZXIiLCJvdXRlclN1YnNjcmliZSIsIm9ic2VydmVyIiwib2JzZXJ2ZVN0YXRlIiwiZ2V0VW5kZWZpbmVkU3RhdGVFcnJvck1lc3NhZ2UiLCJhY3Rpb25UeXBlIiwiY29tYmluZVJlZHVjZXJzIiwicmVkdWNlcnMiLCJyZWR1Y2VyS2V5cyIsImZpbmFsUmVkdWNlcnMiLCJmaW5hbFJlZHVjZXJLZXlzIiwic2hhcGVBc3NlcnRpb25FcnJvciIsImZvckVhY2giLCJNYXRoIiwicmFuZG9tIiwic3Vic3RyaW5nIiwic3BsaXQiLCJqb2luIiwiYXNzZXJ0UmVkdWNlclNoYXBlIiwiaGFzQ2hhbmdlZCIsIl9pIiwiX2tleSIsInByZXZpb3VzU3RhdGVGb3JLZXkiLCJuZXh0U3RhdGVGb3JLZXkiLCJlcnJvck1lc3NhZ2UiLCJiaW5kQWN0aW9uQ3JlYXRvciIsImFjdGlvbkNyZWF0b3IiLCJhcHBseSIsImJpbmRBY3Rpb25DcmVhdG9ycyIsImFjdGlvbkNyZWF0b3JzIiwiYm91bmRBY3Rpb25DcmVhdG9ycyIsImNvbXBvc2UiLCJfbGVuIiwiZnVuY3MiLCJBcnJheSIsInJlZHVjZSIsImFwcGx5TWlkZGxld2FyZSIsIm1pZGRsZXdhcmVzIiwiY3JlYXRlU3RvcmUiLCJjaGFpbiIsIl9kaXNwYXRjaCIsIm1pZGRsZXdhcmVBUEkiLCJtYXAiLCJtaWRkbGV3YXJlIiwicm9vdCIsIl9wb255ZmlsbF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwiZ2xvYmFsIiwidHlwZXMiLCJzZXRUZXh0IiwibmV3VGV4dCIsIlNFVF9URVhUIiwidGV4dCIsImluaXRpYWxTdGF0ZSIsImRpc3BsYXlUZXh0IiwiZGVmYXVsdCIsIl9fYXNzaWduIiwiZ2V0VGV4dCIsImdldE93blByb3BlcnR5U3ltYm9scyIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInRlc3QxIiwiU3RyaW5nIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsInRlc3QyIiwiZnJvbUNoYXJDb2RlIiwidGVzdDMiLCJsZXR0ZXIiLCJlcnIiLCJzaG91bGRVc2VOYXRpdmUiLCJmcm9tIiwic3ltYm9scyIsInRvIiwidmFsIiwidG9PYmplY3QiLCJzeW1ib2xPYnNlcnZhYmxlUG9ueWZpbGwiLCJvYnNlcnZhYmxlIiwiZnJlZUdsb2JhbCIsIlJFQUNUX1NUQVRJQ1MiLCJkZWZhdWx0UHJvcHMiLCJnZXREZWZhdWx0UHJvcHMiLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJtaXhpbnMiLCJLTk9XTl9TVEFUSUNTIiwiY2FsbGVyIiwiY2FsbGVlIiwiYXJpdHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJvYmplY3RQcm90b3R5cGUiLCJob2lzdE5vblJlYWN0U3RhdGljcyIsInRhcmdldENvbXBvbmVudCIsInNvdXJjZUNvbXBvbmVudCIsImJsYWNrbGlzdCIsImluaGVyaXRlZENvbXBvbmVudCIsImNvbmNhdCIsImRlc2NyaXB0b3IiLCJmYWN0b3J5IiwicmVkdWNlcl8xIiwiZXhwcmVzc2lvbnMiLCJSZWFjdCIsInJlYWN0X3JlZHV4XzEiLCJleHByZXNzaW9uQWN0aW9ucyIsIkV4cHJlc3Npb25CdXR0b25zIiwiX3N1cGVyIiwib25BZGQiLCJvbkNsb25lIiwib25SZW1vdmUiLCJfX2V4dGVuZHMiLCJjcmVhdGVFbGVtZW50Iiwib25DbGljayIsIkNvbXBvbmVudCIsImNvbm5lY3QiLCJleHByZXNzaW9uU2VsZWN0b3JzIiwiRXhwcmVzc2lvblZpZXciLCJjb25zb2xlIiwibG9nIiwiRXhwcmVzc2lvblZpZXdfMSIsIkV4cHJlc3Npb25CdXR0b25zXzEiLCJFeHByZXNzaW9uRWRpdG9yIiwiaW5pdGlhbFRleHQiLCJjbGFzc05hbWUiLCJzdHlsZSIsImNvbG9yIiwic3VwZXJfIiwidSIsIk4iLCJpc0FycmF5IiwidGVzdCIsInByZWZpbHRlciIsIm5vcm1hbGl6ZSIsImgiLCJ2IiwibGhzIiwicmhzIiwiZmlsdGVyIiwidyIsIlMiLCJpc05hTiIsImtpbmQiLCJwYXRoIiwiaXRlbSIsImdyb3VwQ29sbGFwc2VkIiwiZ3JvdXAiLCJGIiwiUCIsImdyb3VwRW5kIiwibG9nZ2VyIiwiYWN0aW9uVHJhbnNmb3JtZXIiLCJ0aXRsZUZvcm1hdHRlciIsInRpbWVzdGFtcCIsImR1cmF0aW9uIiwidG9GaXhlZCIsImNvbGxhcHNlZCIsImNvbG9ycyIsImxldmVsIiwiZGlmZiIsInN0YXJ0ZWQiLCJzdGFydGVkVGltZSIsInByZXZTdGF0ZSIsInRvb2siLCJrIiwiaiIsIkQiLCJFIiwidGl0bGUiLCJBIiwiTyIsIkMiLCJMIiwiVCIsIk0iLCJfIiwic3RhdGVUcmFuc2Zvcm1lciIsImVycm9yVHJhbnNmb3JtZXIiLCJwcmVkaWNhdGUiLCJsb2dFcnJvcnMiLCJkaWZmUHJlZGljYXRlIiwibm93IiwiRGF0ZSIsImdldEhvdXJzIiwiZ2V0TWludXRlcyIsImdldFNlY29uZHMiLCJnZXRNaWxsaXNlY29uZHMiLCJwZXJmb3JtYW5jZSIsIml0ZXJhdG9yIiwiRGVlcERpZmYiLCJkZWZpbmVQcm9wZXJ0aWVzIiwib2JzZXJ2YWJsZURpZmYiLCJhcHBseURpZmYiLCJhcHBseUNoYW5nZSIsInJldmVydENoYW5nZSIsImlzQ29uZmxpY3QiLCJub0NvbmZsaWN0IiwidHJhbnNmb3JtZXIiLCJkZWZhdWx0cyIsImNyZWF0ZUxvZ2dlciIsImNyZWF0ZVRodW5rTWlkZGxld2FyZSIsImV4dHJhQXJndW1lbnQiLCJ0aHVuayIsIndpdGhFeHRyYUFyZ3VtZW50Iiwib3JpZ2luYWxNb2R1bGUiLCJ3ZWJwYWNrUG9seWZpbGwiLCJpbnZhcmlhbnQiLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsInNoaW0iLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJsb2NhdGlvbiIsInByb3BGdWxsTmFtZSIsInNlY3JldCIsImdldFNoaW0iLCJSZWFjdFByb3BUeXBlcyIsImFycmF5IiwiYm9vbCIsIm51bWJlciIsInN0cmluZyIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJpbnN0YW5jZU9mIiwibm9kZSIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJleGFjdCIsImNoZWNrUHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiZGVmYXVsdFZpZXciLCJvd25lckRvY3VtZW50IiwiZG9jdW1lbnQiLCJOb2RlIiwibm9kZVR5cGUiLCJub2RlTmFtZSIsImlzTm9kZSIsImlzVGV4dE5vZGUiLCJjb250YWluc05vZGUiLCJvdXRlck5vZGUiLCJpbm5lck5vZGUiLCJwYXJlbnROb2RlIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsImRvYyIsImFjdGl2ZUVsZW1lbnQiLCJib2R5IiwiY2FuVXNlRE9NIiwiRXhlY3V0aW9uRW52aXJvbm1lbnQiLCJjYW5Vc2VXb3JrZXJzIiwiV29ya2VyIiwiY2FuVXNlRXZlbnRMaXN0ZW5lcnMiLCJhZGRFdmVudExpc3RlbmVyIiwiYXR0YWNoRXZlbnQiLCJjYW5Vc2VWaWV3cG9ydCIsInNjcmVlbiIsImlzSW5Xb3JrZXIiLCJhYSIsImNhIiwiZGEiLCJlYSIsImZhIiwiaGEiLCJlbmNvZGVVUklDb21wb25lbnQiLCJCIiwiX2NhdWdodEVycm9yIiwiX2hhc0NhdWdodEVycm9yIiwiX3JldGhyb3dFcnJvciIsIl9oYXNSZXRocm93RXJyb3IiLCJpbnZva2VHdWFyZGVkQ2FsbGJhY2siLCJpbnZva2VHdWFyZGVkQ2FsbGJhY2tBbmRDYXRjaEZpcnN0RXJyb3IiLCJoYXNDYXVnaHRFcnJvciIsImNsZWFyQ2F1Z2h0RXJyb3IiLCJyZXRocm93Q2F1Z2h0RXJyb3IiLCJsYSIsIm1hIiwibmEiLCJvYSIsImV4dHJhY3RFdmVudHMiLCJldmVudFR5cGVzIiwicGEiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsInFhIiwicmVnaXN0cmF0aW9uTmFtZSIsInJhIiwic2EiLCJkZXBlbmRlbmNpZXMiLCJ0YSIsInVhIiwidmEiLCJwbHVnaW5zIiwiZXZlbnROYW1lRGlzcGF0Y2hDb25maWdzIiwicmVnaXN0cmF0aW9uTmFtZU1vZHVsZXMiLCJyZWdpc3RyYXRpb25OYW1lRGVwZW5kZW5jaWVzIiwicG9zc2libGVSZWdpc3RyYXRpb25OYW1lcyIsImluamVjdEV2ZW50UGx1Z2luT3JkZXIiLCJpbmplY3RFdmVudFBsdWdpbnNCeU5hbWUiLCJ3YSIsInhhIiwieWEiLCJ6YSIsImN1cnJlbnRUYXJnZXQiLCJBYSIsIkJhIiwiQ2EiLCJEYSIsIl9kaXNwYXRjaExpc3RlbmVycyIsIl9kaXNwYXRjaEluc3RhbmNlcyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNQZXJzaXN0ZW50IiwicmVsZWFzZSIsIkVhIiwiRmEiLCJHYSIsIkhhIiwic3RhdGVOb2RlIiwiZGlzYWJsZWQiLCJJYSIsIkphIiwiS2EiLCJpbmplY3Rpb24iLCJnZXRMaXN0ZW5lciIsInJ1bkV2ZW50c0luQmF0Y2giLCJydW5FeHRyYWN0ZWRFdmVudHNJbkJhdGNoIiwiTGEiLCJNYSIsIk5hIiwiT2EiLCJQYSIsIlFhIiwicHJlY2FjaGVGaWJlck5vZGUiLCJnZXRDbG9zZXN0SW5zdGFuY2VGcm9tTm9kZSIsImdldEluc3RhbmNlRnJvbU5vZGUiLCJnZXROb2RlRnJvbUluc3RhbmNlIiwiZ2V0RmliZXJDdXJyZW50UHJvcHNGcm9tTm9kZSIsInVwZGF0ZUZpYmVyUHJvcHMiLCJyZXR1cm4iLCJSYSIsIlNhIiwiZGlzcGF0Y2hDb25maWciLCJUYSIsIl90YXJnZXRJbnN0IiwiVWEiLCJWYSIsIlhhIiwiWWEiLCJaYSIsImFsdGVybmF0ZSIsIiRhIiwiYWNjdW11bGF0ZVR3b1BoYXNlRGlzcGF0Y2hlcyIsImFjY3VtdWxhdGVUd29QaGFzZURpc3BhdGNoZXNTa2lwVGFyZ2V0IiwiYWNjdW11bGF0ZUVudGVyTGVhdmVEaXNwYXRjaGVzIiwiYWNjdW11bGF0ZURpcmVjdERpc3BhdGNoZXMiLCJhYiIsInRvTG93ZXJDYXNlIiwiYmIiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJjYiIsImRiIiwiZWIiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiZmIiLCJnYiIsImhiIiwiaWIiLCJqYiIsImtiIiwibGIiLCJkb2N1bWVudEVsZW1lbnQiLCJHIiwiX3Jvb3QiLCJfc3RhcnRUZXh0IiwiX2ZhbGxiYWNrVGV4dCIsIm1iIiwibmIiLCJvYiIsInBiIiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwiZGVmYXVsdFByZXZlbnRlZCIsImlzVHJ1c3RlZCIsIkgiLCJuYXRpdmVFdmVudCIsIkludGVyZmFjZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwicmIiLCJldmVudFBvb2wiLCJwb3AiLCJzYiIsImRlc3RydWN0b3IiLCJxYiIsImdldFBvb2xlZCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImV4dGVuZCIsInRiIiwiZGF0YSIsInViIiwidmIiLCJ3YiIsInhiIiwiZG9jdW1lbnRNb2RlIiwieWIiLCJ6YiIsIkFiIiwiQmIiLCJiZWZvcmVJbnB1dCIsImJ1YmJsZWQiLCJjYXB0dXJlZCIsImNvbXBvc2l0aW9uRW5kIiwiY29tcG9zaXRpb25TdGFydCIsImNvbXBvc2l0aW9uVXBkYXRlIiwiQ2IiLCJEYiIsImtleUNvZGUiLCJFYiIsImRldGFpbCIsIkZiIiwiSWIiLCJ3aGljaCIsIkdiIiwiY3RybEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJjaGFyIiwiSGIiLCJKYiIsIktiIiwiaW5qZWN0RmliZXJDb250cm9sbGVkSG9zdENvbXBvbmVudCIsIkxiIiwiTWIiLCJOYiIsInJlc3RvcmVDb250cm9sbGVkU3RhdGUiLCJPYiIsIlBiIiwiUWIiLCJSYiIsImVucXVldWVTdGF0ZVJlc3RvcmUiLCJuZWVkc1N0YXRlUmVzdG9yZSIsInJlc3RvcmVTdGF0ZUlmTmVlZGVkIiwiU2IiLCJUYiIsIlViIiwiVmIiLCJXYiIsIlhiIiwiZGF0ZSIsImRhdGV0aW1lIiwiZGF0ZXRpbWUtbG9jYWwiLCJlbWFpbCIsIm1vbnRoIiwicGFzc3dvcmQiLCJyYW5nZSIsInNlYXJjaCIsInRlbCIsInRpbWUiLCJ1cmwiLCJ3ZWVrIiwiWWIiLCJaYiIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50IiwiJGIiLCJzZXRBdHRyaWJ1dGUiLCJhYyIsImNjIiwiX3ZhbHVlVHJhY2tlciIsInNldCIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJiYyIsImRjIiwiY2hlY2tlZCIsImVjIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJSZWFjdEN1cnJlbnRPd25lciIsIkkiLCJmb3IiLCJmYyIsImdjIiwiaGMiLCJpYyIsImpjIiwibWMiLCJuYyIsIm9jIiwicGMiLCJxYyIsInJjIiwic2MiLCJ0YyIsInBlbmRpbmdQcm9wcyIsImlkIiwiJCR0eXBlb2YiLCJ2YyIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwid2MiLCJ4YyIsInljIiwiSiIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJLIiwiQ2MiLCJEYyIsInRvVXBwZXJDYXNlIiwiRWMiLCJBYyIsIkJjIiwiemMiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsIkZjIiwiZGVmYXVsdENoZWNrZWQiLCJkZWZhdWx0VmFsdWUiLCJfd3JhcHBlclN0YXRlIiwiaW5pdGlhbENoZWNrZWQiLCJHYyIsIkhjIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsIkljIiwiSmMiLCJLYyIsIkxjIiwidGFiSW5kZXgiLCJNYyIsImNoYW5nZSIsIk5jIiwiT2MiLCJQYyIsIlFjIiwiUmMiLCJTYyIsIlRjIiwiVWMiLCJkZXRhY2hFdmVudCIsIlZjIiwiV2MiLCJYYyIsIlljIiwiWmMiLCIkYyIsIl9pc0lucHV0RXZlbnRTdXBwb3J0ZWQiLCJhZCIsInZpZXciLCJiZCIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJjZCIsImdldE1vZGlmaWVyU3RhdGUiLCJkZCIsImVkIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJzaGlmdEtleSIsImJ1dHRvbiIsImJ1dHRvbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZnJvbUVsZW1lbnQiLCJzcmNFbGVtZW50IiwidG9FbGVtZW50IiwiZmQiLCJwb2ludGVySWQiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwiZ2QiLCJtb3VzZUVudGVyIiwibW91c2VMZWF2ZSIsInBvaW50ZXJFbnRlciIsInBvaW50ZXJMZWF2ZSIsImhkIiwicGFyZW50V2luZG93IiwiZWZmZWN0VGFnIiwiamQiLCJrZCIsImNoaWxkIiwic2libGluZyIsImxkIiwibmQiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50Iiwib2QiLCJjbGlwYm9hcmREYXRhIiwicGQiLCJxZCIsImNoYXJDb2RlIiwicmQiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5Iiwic2QiLCI4IiwiOSIsIjEyIiwiMTMiLCIxNiIsIjE3IiwiMTgiLCIxOSIsIjIwIiwiMjciLCIzMiIsIjMzIiwiMzQiLCIzNSIsIjM2IiwiMzciLCIzOCIsIjM5IiwiNDAiLCI0NSIsIjQ2IiwiMTEyIiwiMTEzIiwiMTE0IiwiMTE1IiwiMTE2IiwiMTE3IiwiMTE4IiwiMTE5IiwiMTIwIiwiMTIxIiwiMTIyIiwiMTIzIiwiMTQ0IiwiMTQ1IiwiMjI0IiwidGQiLCJyZXBlYXQiLCJsb2NhbGUiLCJ1ZCIsImRhdGFUcmFuc2ZlciIsInZkIiwidG91Y2hlcyIsInRhcmdldFRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsIndkIiwieGQiLCJkZWx0YVgiLCJ3aGVlbERlbHRhWCIsImRlbHRhWSIsIndoZWVsRGVsdGFZIiwid2hlZWxEZWx0YSIsImRlbHRhWiIsImRlbHRhTW9kZSIsInlkIiwiemQiLCJBZCIsIkJkIiwiaXNJbnRlcmFjdGl2ZSIsIkNkIiwiaXNJbnRlcmFjdGl2ZVRvcExldmVsRXZlbnRUeXBlIiwiRGQiLCJFZCIsIkZkIiwidGFyZ2V0SW5zdCIsImFuY2VzdG9ycyIsImNvbnRhaW5lckluZm8iLCJ0b3BMZXZlbFR5cGUiLCJHZCIsIklkIiwiSmQiLCJLZCIsIkxkIiwiTWQiLCJfZW5hYmxlZCIsInNldEVuYWJsZWQiLCJpc0VuYWJsZWQiLCJ0cmFwQnViYmxlZEV2ZW50IiwidHJhcENhcHR1cmVkRXZlbnQiLCJkaXNwYXRjaEV2ZW50IiwiTmQiLCJPZCIsIlBkIiwiUWQiLCJSZCIsImZpcnN0Q2hpbGQiLCJTZCIsInRleHRDb250ZW50Iiwib2Zmc2V0IiwibmV4dFNpYmxpbmciLCJUZCIsImNvbnRlbnRFZGl0YWJsZSIsIlVkIiwiVmQiLCJzZWxlY3QiLCJXZCIsIlhkIiwiWWQiLCJaZCIsIiRkIiwic3RhcnQiLCJzZWxlY3Rpb25TdGFydCIsImVuZCIsInNlbGVjdGlvbkVuZCIsImdldFNlbGVjdGlvbiIsImFuY2hvck5vZGUiLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsImFlIiwib25TZWxlY3QiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwiYmUiLCJjZSIsImRlIiwiZWUiLCJmZSIsImdlIiwiaGUiLCJpZSIsImplIiwia2UiLCJsZSIsIm1lIiwibmUiLCJkaWRUaW1lb3V0IiwidGltZVJlbWFpbmluZyIsIm9lIiwicGUiLCJ0aW1lb3V0VGltZSIsInNjaGVkdWxlZENhbGxiYWNrIiwiY2FsbGJhY2tJZCIsInNoaWZ0IiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwicWUiLCJwb3N0TWVzc2FnZSIsInRpbWVvdXQiLCJyZSIsInNlIiwic2V0VGltZW91dCIsIkluZmluaXR5IiwiY2xlYXJUaW1lb3V0IiwidWUiLCJDaGlsZHJlbiIsInRlIiwidmUiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsIndlIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsInhlIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJ5ZSIsInplIiwiQWUiLCJCZSIsImh0bWwiLCJtYXRobWwiLCJzdmciLCJDZSIsIkRlIiwiRWUiLCJGZSIsIm5hbWVzcGFjZVVSSSIsImlubmVySFRNTCIsInJlbW92ZUNoaWxkIiwiYXBwZW5kQ2hpbGQiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwiR2UiLCJsYXN0Q2hpbGQiLCJub2RlVmFsdWUiLCJIZSIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsIkllIiwiSmUiLCJ0cmltIiwic2V0UHJvcGVydHkiLCJjaGFyQXQiLCJLZSIsIm1lbnVpdGVtIiwiYXJlYSIsImJhc2UiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsImxpbmsiLCJtZXRhIiwicGFyYW0iLCJ0cmFjayIsIndiciIsIkxlIiwiTWUiLCJOZSIsIk9lIiwiYmx1ciIsImZvY3VzIiwiUGUiLCJjcmVhdGVFbGVtZW50TlMiLCJRZSIsImNyZWF0ZVRleHROb2RlIiwiUmUiLCJfX2h0bWwiLCJvbmNsaWNrIiwiU2UiLCJUZSIsIlVlIiwiVmUiLCJXZSIsInNldEluaXRpYWxQcm9wZXJ0aWVzIiwiZGlmZlByb3BlcnRpZXMiLCJ1cGRhdGVQcm9wZXJ0aWVzIiwiZGlmZkh5ZHJhdGVkUHJvcGVydGllcyIsImRpZmZIeWRyYXRlZFRleHQiLCJ3YXJuRm9yVW5tYXRjaGVkVGV4dCIsIndhcm5Gb3JEZWxldGVkSHlkcmF0YWJsZUVsZW1lbnQiLCJ3YXJuRm9yRGVsZXRlZEh5ZHJhdGFibGVUZXh0Iiwid2FybkZvckluc2VydGVkSHlkcmF0ZWRFbGVtZW50Iiwid2FybkZvckluc2VydGVkSHlkcmF0ZWRUZXh0IiwicXVlcnlTZWxlY3RvckFsbCIsImZvcm0iLCJYZSIsIlllIiwiWmUiLCJhdXRvRm9jdXMiLCIkZSIsImFmIiwiYmYiLCJjZiIsImRmIiwiZWYiLCJTZXQiLCJmZiIsImdmIiwiaGYiLCJqZiIsImtmIiwibGYiLCJtZiIsIm5mIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0Iiwib2YiLCJwZiIsInFmIiwicmYiLCJzZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwidGYiLCJ1ZiIsIm1lbW9pemVkU3RhdGUiLCJ1cGRhdGVRdWV1ZSIsIm1lbW9pemVkUHJvcHMiLCJsYXN0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiZXhwaXJhdGlvblRpbWUiLCJ2ZiIsIndmIiwiaXNSZWFjdENvbXBvbmVudCIsInhmIiwieWYiLCJ6ZiIsInBlbmRpbmdDaGlsZHJlbiIsImltcGxlbWVudGF0aW9uIiwiQWYiLCJlYXJsaWVzdFBlbmRpbmdUaW1lIiwibGF0ZXN0UGVuZGluZ1RpbWUiLCJlYXJsaWVzdFN1c3BlbmRlZFRpbWUiLCJsYXRlc3RTdXNwZW5kZWRUaW1lIiwibGF0ZXN0UGluZ2VkVGltZSIsInBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZSIsImZpbmlzaGVkV29yayIsInBlbmRpbmdDb250ZXh0IiwiaHlkcmF0ZSIsInJlbWFpbmluZ0V4cGlyYXRpb25UaW1lIiwiZmlyc3RCYXRjaCIsIm5leHRTY2hlZHVsZWRSb290IiwiQmYiLCJDZiIsIkRmIiwiRmYiLCJHZiIsIkhmIiwiSWYiLCJiYXNlU3RhdGUiLCJmaXJzdFVwZGF0ZSIsImxhc3RVcGRhdGUiLCJmaXJzdENhcHR1cmVkVXBkYXRlIiwibGFzdENhcHR1cmVkVXBkYXRlIiwiZmlyc3RDYXB0dXJlZEVmZmVjdCIsImxhc3RDYXB0dXJlZEVmZmVjdCIsIkpmIiwiS2YiLCJwYXlsb2FkIiwiY2FsbGJhY2siLCJMZiIsIk1mIiwiTmYiLCJPZiIsIlBmIiwiUWYiLCJSZiIsIlNmIiwiVGYiLCJzdGFjayIsIlVmIiwiVmYiLCJXZiIsIlhmIiwiX2NvbnRleHQiLCJfY2hhbmdlZEJpdHMiLCJfY3VycmVudFZhbHVlIiwiWWYiLCJaZiIsIiRmIiwiYWciLCJiZyIsImNnIiwiZGciLCJ0YWdOYW1lIiwiZWciLCJmZyIsImhnIiwibGciLCJpc01vdW50ZWQiLCJfcmVhY3RJbnRlcm5hbEZpYmVyIiwiZW5xdWV1ZVNldFN0YXRlIiwiaWciLCJqZyIsImtnIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVGb3JjZVVwZGF0ZSIsIm1nIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJuZyIsIlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwib2ciLCJyZWZzIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwicGciLCJxZyIsIl9vd25lciIsIl9zdHJpbmdSZWYiLCJyZyIsInNnIiwiTWFwIiwia2MiLCJIZCIsInEiLCJkZWxldGUiLCJkb25lIiwidGciLCJ1ZyIsInZnIiwid2ciLCJ4ZyIsInlnIiwiemciLCJBZyIsIkJnIiwiQ2ciLCJEZyIsIlEiLCJFZyIsIkZnIiwiR2ciLCJSIiwiSGciLCJJZyIsIktnIiwidXBkYXRlciIsIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsImhpZGRlbiIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsIkpnIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwiTGciLCJQZyIsIlFnIiwiUmciLCJTZyIsIlRnIiwic3VwcHJlc3NSZWFjdEVycm9yTG9nZ2luZyIsIlVnIiwiVmciLCJXZyIsIlhnIiwiWWciLCJaZyIsImluc2VydEJlZm9yZSIsIiRnIiwiYWgiLCJiaCIsImNoIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJkaCIsImFkZCIsImNvbXBvbmVudFN0YWNrIiwiZWgiLCJoYXMiLCJmaCIsImdoIiwiaGgiLCJpaCIsImpoIiwia2giLCJsaCIsIm1oIiwibmgiLCJvaCIsIlUiLCJwaCIsInFoIiwicmgiLCJzaCIsInRoIiwidWgiLCJ2aCIsIndoIiwiWCIsInhoIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUNhdGNoIiwieWgiLCJ6aCIsIkFoIiwiQmgiLCJDaCIsIkRoIiwiRWgiLCJGaCIsIlYiLCJHaCIsIkhoIiwiVyIsIlkiLCJJaCIsIkpoIiwiS2giLCJMaCIsIloiLCJNaCIsIk5oIiwiT2giLCJQaCIsIlFoIiwiUmgiLCJTaCIsIlRoIiwiVWgiLCJWaCIsIldoIiwiX29uQ29tcGxldGUiLCJYaCIsIl9leHBpcmF0aW9uVGltZSIsIl9kZWZlciIsInJhbmdlQ291bnQiLCJXYSIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJqYSIsImhpIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJ6IiwibWluIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJnZyIsImxjIiwiYmEiLCJyaSIsInNpIiwiTWciLCJOZyIsInRpIiwidWMiLCJPZyIsInVpIiwiWWgiLCJaaCIsIiRoIiwiYWkiLCJiaSIsImNpIiwiZGkiLCJlaSIsImZpIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsImluamVjdCIsIm9uQ29tbWl0RmliZXJSb290Iiwib25Db21taXRGaWJlclVubW91bnQiLCJFZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiZ2kiLCJqaSIsIl9jYWxsYmFja3MiLCJfbmV4dCIsIl9oYXNDaGlsZHJlbiIsIl9kaWRDb21wbGV0ZSIsIl9jaGlsZHJlbiIsImtpIiwiX2RpZENvbW1pdCIsIl9vbkNvbW1pdCIsImxpIiwiX2ludGVybmFsUm9vdCIsIm1pIiwib2kiLCJfcmVhY3RSb290Q29udGFpbmVyIiwibGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiaGFzQXR0cmlidXRlIiwibmkiLCJwaSIsImlpIiwidGhlbiIsImNvbW1pdCIsInVubW91bnQiLCJjcmVhdGVCYXRjaCIsInFpIiwiY3JlYXRlUG9ydGFsIiwiZmluZERPTU5vZGUiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9jcmVhdGVQb3J0YWwiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2RlZmVycmVkVXBkYXRlcyIsImZsdXNoU3luYyIsInVuc3RhYmxlX2ZsdXNoQ29udHJvbGxlZCIsIkV2ZW50UGx1Z2luSHViIiwiRXZlbnRQbHVnaW5SZWdpc3RyeSIsIkV2ZW50UHJvcGFnYXRvcnMiLCJSZWFjdENvbnRyb2xsZWRDb21wb25lbnQiLCJSZWFjdERPTUNvbXBvbmVudFRyZWUiLCJSZWFjdERPTUV2ZW50TGlzdGVuZXIiLCJ1bnN0YWJsZV9jcmVhdGVSb290IiwiYnVuZGxlVHlwZSIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJ2aSIsIndpIiwiY2hlY2tEQ0UiLCJfX3NlbGYiLCJfX3NvdXJjZSIsImtleVByZWZpeCIsImNvdW50IiwiPSIsIjoiLCJlc2NhcGUiLCJ0b0FycmF5IiwiY3JlYXRlUmVmIiwiUHVyZUNvbXBvbmVudCIsImNyZWF0ZUNvbnRleHQiLCJfZGVmYXVsdFZhbHVlIiwiX2N1cnJlbnRWYWx1ZTIiLCJfY2hhbmdlZEJpdHMyIiwiQ29uc3VtZXIiLCJmb3J3YXJkUmVmIiwiRnJhZ21lbnQiLCJTdHJpY3RNb2RlIiwidW5zdGFibGVfQXN5bmNNb2RlIiwidW5zdGFibGVfUHJvZmlsZXIiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVGYWN0b3J5IiwiaXNWYWxpZEVsZW1lbnQiLCJSZWFjdERPTSIsInJlZHV4XzEiLCJyZWR1eF90aHVua18xIiwicmVkdXhfbG9nZ2VyXzEiLCJFeHByZXNzaW9uRWRpdG9yXzEiLCJsb2dnZXJNaWRkbGV3YXJlIiwiY29tcG9zZUVuaGFuY2VycyIsIl9fUkVEVVhfREVWVE9PTFNfRVhURU5TSU9OX0NPTVBPU0VfXyIsImdl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Q25DcW9DLEVBQ0lMLEVBQUE3ckMsZ0JBQ0k4ckMsRUFBQTVxQyxRQUNBK3FDLEtBSVJMLEVBQVNqN0MsT0FDTG1ULEVBQUFTLGNBQUNSLEVBQUExVSxVQUFTWSxNQUFPQSxHQUNiNlQsRUFBQVMsY0FBQ3luQyxFQUFBOXFDLFFBQWdCLE9BRXJCOEssU0FBU29nQyxlQUFlIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDM2KTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJFQUNUX0VMRU1FTlRfVFlQRSA9ICh0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmXG4gICAgU3ltYm9sLmZvciAmJlxuICAgIFN5bWJvbC5mb3IoJ3JlYWN0LmVsZW1lbnQnKSkgfHxcbiAgICAweGVhYzc7XG5cbiAgdmFyIGlzVmFsaWRFbGVtZW50ID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvYmplY3QgPT09ICdvYmplY3QnICYmXG4gICAgICBvYmplY3QgIT09IG51bGwgJiZcbiAgICAgIG9iamVjdC4kJHR5cGVvZiA9PT0gUkVBQ1RfRUxFTUVOVF9UWVBFO1xuICB9O1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoaXNWYWxpZEVsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiaW1wb3J0IGZyZWVHbG9iYWwgZnJvbSAnLi9fZnJlZUdsb2JhbC5qcyc7XG5cbi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgc2VsZmAuICovXG52YXIgZnJlZVNlbGYgPSB0eXBlb2Ygc2VsZiA9PSAnb2JqZWN0JyAmJiBzZWxmICYmIHNlbGYuT2JqZWN0ID09PSBPYmplY3QgJiYgc2VsZjtcblxuLyoqIFVzZWQgYXMgYSByZWZlcmVuY2UgdG8gdGhlIGdsb2JhbCBvYmplY3QuICovXG52YXIgcm9vdCA9IGZyZWVHbG9iYWwgfHwgZnJlZVNlbGYgfHwgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblxuZXhwb3J0IGRlZmF1bHQgcm9vdDtcbiIsImltcG9ydCByb290IGZyb20gJy4vX3Jvb3QuanMnO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBTeW1ib2wgPSByb290LlN5bWJvbDtcblxuZXhwb3J0IGRlZmF1bHQgU3ltYm9sO1xuIiwiaW1wb3J0IFN5bWJvbCBmcm9tICcuL19TeW1ib2wuanMnO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIFVzZWQgdG8gcmVzb2x2ZSB0aGVcbiAqIFtgdG9TdHJpbmdUYWdgXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1vYmplY3QucHJvdG90eXBlLnRvc3RyaW5nKVxuICogb2YgdmFsdWVzLlxuICovXG52YXIgbmF0aXZlT2JqZWN0VG9TdHJpbmcgPSBvYmplY3RQcm90by50b1N0cmluZztcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgc3ltVG9TdHJpbmdUYWcgPSBTeW1ib2wgPyBTeW1ib2wudG9TdHJpbmdUYWcgOiB1bmRlZmluZWQ7XG5cbi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBiYXNlR2V0VGFnYCB3aGljaCBpZ25vcmVzIGBTeW1ib2wudG9TdHJpbmdUYWdgIHZhbHVlcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSByYXcgYHRvU3RyaW5nVGFnYC5cbiAqL1xuZnVuY3Rpb24gZ2V0UmF3VGFnKHZhbHVlKSB7XG4gIHZhciBpc093biA9IGhhc093blByb3BlcnR5LmNhbGwodmFsdWUsIHN5bVRvU3RyaW5nVGFnKSxcbiAgICAgIHRhZyA9IHZhbHVlW3N5bVRvU3RyaW5nVGFnXTtcblxuICB0cnkge1xuICAgIHZhbHVlW3N5bVRvU3RyaW5nVGFnXSA9IHVuZGVmaW5lZDtcbiAgICB2YXIgdW5tYXNrZWQgPSB0cnVlO1xuICB9IGNhdGNoIChlKSB7fVxuXG4gIHZhciByZXN1bHQgPSBuYXRpdmVPYmplY3RUb1N0cmluZy5jYWxsKHZhbHVlKTtcbiAgaWYgKHVubWFza2VkKSB7XG4gICAgaWYgKGlzT3duKSB7XG4gICAgICB2YWx1ZVtzeW1Ub1N0cmluZ1RhZ10gPSB0YWc7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRlbGV0ZSB2YWx1ZVtzeW1Ub1N0cmluZ1RhZ107XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGdldFJhd1RhZztcbiIsIi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKlxuICogVXNlZCB0byByZXNvbHZlIHRoZVxuICogW2B0b1N0cmluZ1RhZ2BdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLW9iamVjdC5wcm90b3R5cGUudG9zdHJpbmcpXG4gKiBvZiB2YWx1ZXMuXG4gKi9cbnZhciBuYXRpdmVPYmplY3RUb1N0cmluZyA9IG9iamVjdFByb3RvLnRvU3RyaW5nO1xuXG4vKipcbiAqIENvbnZlcnRzIGB2YWx1ZWAgdG8gYSBzdHJpbmcgdXNpbmcgYE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmdgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjb252ZXJ0LlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgY29udmVydGVkIHN0cmluZy5cbiAqL1xuZnVuY3Rpb24gb2JqZWN0VG9TdHJpbmcodmFsdWUpIHtcbiAgcmV0dXJuIG5hdGl2ZU9iamVjdFRvU3RyaW5nLmNhbGwodmFsdWUpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBvYmplY3RUb1N0cmluZztcbiIsImltcG9ydCBTeW1ib2wgZnJvbSAnLi9fU3ltYm9sLmpzJztcbmltcG9ydCBnZXRSYXdUYWcgZnJvbSAnLi9fZ2V0UmF3VGFnLmpzJztcbmltcG9ydCBvYmplY3RUb1N0cmluZyBmcm9tICcuL19vYmplY3RUb1N0cmluZy5qcyc7XG5cbi8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi9cbnZhciBudWxsVGFnID0gJ1tvYmplY3QgTnVsbF0nLFxuICAgIHVuZGVmaW5lZFRhZyA9ICdbb2JqZWN0IFVuZGVmaW5lZF0nO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBzeW1Ub1N0cmluZ1RhZyA9IFN5bWJvbCA/IFN5bWJvbC50b1N0cmluZ1RhZyA6IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgZ2V0VGFnYCB3aXRob3V0IGZhbGxiYWNrcyBmb3IgYnVnZ3kgZW52aXJvbm1lbnRzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIGB0b1N0cmluZ1RhZ2AuXG4gKi9cbmZ1bmN0aW9uIGJhc2VHZXRUYWcodmFsdWUpIHtcbiAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICByZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZFRhZyA6IG51bGxUYWc7XG4gIH1cbiAgcmV0dXJuIChzeW1Ub1N0cmluZ1RhZyAmJiBzeW1Ub1N0cmluZ1RhZyBpbiBPYmplY3QodmFsdWUpKVxuICAgID8gZ2V0UmF3VGFnKHZhbHVlKVxuICAgIDogb2JqZWN0VG9TdHJpbmcodmFsdWUpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBiYXNlR2V0VGFnO1xuIiwiLyoqXG4gKiBDcmVhdGVzIGEgdW5hcnkgZnVuY3Rpb24gdGhhdCBpbnZva2VzIGBmdW5jYCB3aXRoIGl0cyBhcmd1bWVudCB0cmFuc2Zvcm1lZC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gd3JhcC5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHRyYW5zZm9ybSBUaGUgYXJndW1lbnQgdHJhbnNmb3JtLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIG92ZXJBcmcoZnVuYywgdHJhbnNmb3JtKSB7XG4gIHJldHVybiBmdW5jdGlvbihhcmcpIHtcbiAgICByZXR1cm4gZnVuYyh0cmFuc2Zvcm0oYXJnKSk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IG92ZXJBcmc7XG4iLCJpbXBvcnQgb3ZlckFyZyBmcm9tICcuL19vdmVyQXJnLmpzJztcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgZ2V0UHJvdG90eXBlID0gb3ZlckFyZyhPYmplY3QuZ2V0UHJvdG90eXBlT2YsIE9iamVjdCk7XG5cbmV4cG9ydCBkZWZhdWx0IGdldFByb3RvdHlwZTtcbiIsIi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgb2JqZWN0LWxpa2UuIEEgdmFsdWUgaXMgb2JqZWN0LWxpa2UgaWYgaXQncyBub3QgYG51bGxgXG4gKiBhbmQgaGFzIGEgYHR5cGVvZmAgcmVzdWx0IG9mIFwib2JqZWN0XCIuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgb2JqZWN0LWxpa2UsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc09iamVjdExpa2Uoe30pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdExpa2UoXy5ub29wKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc09iamVjdExpa2UobnVsbCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc09iamVjdExpa2UodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgdHlwZW9mIHZhbHVlID09ICdvYmplY3QnO1xufVxuXG5leHBvcnQgZGVmYXVsdCBpc09iamVjdExpa2U7XG4iLCJpbXBvcnQgYmFzZUdldFRhZyBmcm9tICcuL19iYXNlR2V0VGFnLmpzJztcbmltcG9ydCBnZXRQcm90b3R5cGUgZnJvbSAnLi9fZ2V0UHJvdG90eXBlLmpzJztcbmltcG9ydCBpc09iamVjdExpa2UgZnJvbSAnLi9pc09iamVjdExpa2UuanMnO1xuXG4vKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0VGFnID0gJ1tvYmplY3QgT2JqZWN0XSc7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBmdW5jUHJvdG8gPSBGdW5jdGlvbi5wcm90b3R5cGUsXG4gICAgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byByZXNvbHZlIHRoZSBkZWNvbXBpbGVkIHNvdXJjZSBvZiBmdW5jdGlvbnMuICovXG52YXIgZnVuY1RvU3RyaW5nID0gZnVuY1Byb3RvLnRvU3RyaW5nO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKiogVXNlZCB0byBpbmZlciB0aGUgYE9iamVjdGAgY29uc3RydWN0b3IuICovXG52YXIgb2JqZWN0Q3RvclN0cmluZyA9IGZ1bmNUb1N0cmluZy5jYWxsKE9iamVjdCk7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSBwbGFpbiBvYmplY3QsIHRoYXQgaXMsIGFuIG9iamVjdCBjcmVhdGVkIGJ5IHRoZVxuICogYE9iamVjdGAgY29uc3RydWN0b3Igb3Igb25lIHdpdGggYSBgW1tQcm90b3R5cGVdXWAgb2YgYG51bGxgLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC44LjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgcGxhaW4gb2JqZWN0LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIGZ1bmN0aW9uIEZvbygpIHtcbiAqICAgdGhpcy5hID0gMTtcbiAqIH1cbiAqXG4gKiBfLmlzUGxhaW5PYmplY3QobmV3IEZvbyk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNQbGFpbk9iamVjdChbMSwgMiwgM10pO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzUGxhaW5PYmplY3QoeyAneCc6IDAsICd5JzogMCB9KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzUGxhaW5PYmplY3QoT2JqZWN0LmNyZWF0ZShudWxsKSk7XG4gKiAvLyA9PiB0cnVlXG4gKi9cbmZ1bmN0aW9uIGlzUGxhaW5PYmplY3QodmFsdWUpIHtcbiAgaWYgKCFpc09iamVjdExpa2UodmFsdWUpIHx8IGJhc2VHZXRUYWcodmFsdWUpICE9IG9iamVjdFRhZykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICB2YXIgcHJvdG8gPSBnZXRQcm90b3R5cGUodmFsdWUpO1xuICBpZiAocHJvdG8gPT09IG51bGwpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICB2YXIgQ3RvciA9IGhhc093blByb3BlcnR5LmNhbGwocHJvdG8sICdjb25zdHJ1Y3RvcicpICYmIHByb3RvLmNvbnN0cnVjdG9yO1xuICByZXR1cm4gdHlwZW9mIEN0b3IgPT0gJ2Z1bmN0aW9uJyAmJiBDdG9yIGluc3RhbmNlb2YgQ3RvciAmJlxuICAgIGZ1bmNUb1N0cmluZy5jYWxsKEN0b3IpID09IG9iamVjdEN0b3JTdHJpbmc7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGlzUGxhaW5PYmplY3Q7XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5leHBvcnQgdmFyIHN1YnNjcmlwdGlvblNoYXBlID0gUHJvcFR5cGVzLnNoYXBlKHtcbiAgdHJ5U3Vic2NyaWJlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICB0cnlVbnN1YnNjcmliZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgbm90aWZ5TmVzdGVkU3ViczogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgaXNTdWJzY3JpYmVkOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59KTtcblxuZXhwb3J0IHZhciBzdG9yZVNoYXBlID0gUHJvcFR5cGVzLnNoYXBlKHtcbiAgc3Vic2NyaWJlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBkaXNwYXRjaDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgZ2V0U3RhdGU6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbn0pOyIsImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBDaGlsZHJlbiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBzdG9yZVNoYXBlLCBzdWJzY3JpcHRpb25TaGFwZSB9IGZyb20gJy4uL3V0aWxzL1Byb3BUeXBlcyc7XG5pbXBvcnQgd2FybmluZyBmcm9tICcuLi91dGlscy93YXJuaW5nJztcblxudmFyIGRpZFdhcm5BYm91dFJlY2VpdmluZ1N0b3JlID0gZmFsc2U7XG5mdW5jdGlvbiB3YXJuQWJvdXRSZWNlaXZpbmdTdG9yZSgpIHtcbiAgaWYgKGRpZFdhcm5BYm91dFJlY2VpdmluZ1N0b3JlKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGRpZFdhcm5BYm91dFJlY2VpdmluZ1N0b3JlID0gdHJ1ZTtcblxuICB3YXJuaW5nKCc8UHJvdmlkZXI+IGRvZXMgbm90IHN1cHBvcnQgY2hhbmdpbmcgYHN0b3JlYCBvbiB0aGUgZmx5LiAnICsgJ0l0IGlzIG1vc3QgbGlrZWx5IHRoYXQgeW91IHNlZSB0aGlzIGVycm9yIGJlY2F1c2UgeW91IHVwZGF0ZWQgdG8gJyArICdSZWR1eCAyLnggYW5kIFJlYWN0IFJlZHV4IDIueCB3aGljaCBubyBsb25nZXIgaG90IHJlbG9hZCByZWR1Y2VycyAnICsgJ2F1dG9tYXRpY2FsbHkuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vcmVhY3Rqcy9yZWFjdC1yZWR1eC9yZWxlYXNlcy8nICsgJ3RhZy92Mi4wLjAgZm9yIHRoZSBtaWdyYXRpb24gaW5zdHJ1Y3Rpb25zLicpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUHJvdmlkZXIoKSB7XG4gIHZhciBfUHJvdmlkZXIkY2hpbGRDb250ZXg7XG5cbiAgdmFyIHN0b3JlS2V5ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiAnc3RvcmUnO1xuICB2YXIgc3ViS2V5ID0gYXJndW1lbnRzWzFdO1xuXG4gIHZhciBzdWJzY3JpcHRpb25LZXkgPSBzdWJLZXkgfHwgc3RvcmVLZXkgKyAnU3Vic2NyaXB0aW9uJztcblxuICB2YXIgUHJvdmlkZXIgPSBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICAgIF9pbmhlcml0cyhQcm92aWRlciwgX0NvbXBvbmVudCk7XG5cbiAgICBQcm92aWRlci5wcm90b3R5cGUuZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgICAgdmFyIF9yZWY7XG5cbiAgICAgIHJldHVybiBfcmVmID0ge30sIF9yZWZbc3RvcmVLZXldID0gdGhpc1tzdG9yZUtleV0sIF9yZWZbc3Vic2NyaXB0aW9uS2V5XSA9IG51bGwsIF9yZWY7XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIFByb3ZpZGVyKHByb3BzLCBjb250ZXh0KSB7XG4gICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUHJvdmlkZXIpO1xuXG4gICAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMsIGNvbnRleHQpKTtcblxuICAgICAgX3RoaXNbc3RvcmVLZXldID0gcHJvcHMuc3RvcmU7XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgUHJvdmlkZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiBDaGlsZHJlbi5vbmx5KHRoaXMucHJvcHMuY2hpbGRyZW4pO1xuICAgIH07XG5cbiAgICByZXR1cm4gUHJvdmlkZXI7XG4gIH0oQ29tcG9uZW50KTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIFByb3ZpZGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gKG5leHRQcm9wcykge1xuICAgICAgaWYgKHRoaXNbc3RvcmVLZXldICE9PSBuZXh0UHJvcHMuc3RvcmUpIHtcbiAgICAgICAgd2FybkFib3V0UmVjZWl2aW5nU3RvcmUoKTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG5cbiAgUHJvdmlkZXIucHJvcFR5cGVzID0ge1xuICAgIHN0b3JlOiBzdG9yZVNoYXBlLmlzUmVxdWlyZWQsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5lbGVtZW50LmlzUmVxdWlyZWRcbiAgfTtcbiAgUHJvdmlkZXIuY2hpbGRDb250ZXh0VHlwZXMgPSAoX1Byb3ZpZGVyJGNoaWxkQ29udGV4ID0ge30sIF9Qcm92aWRlciRjaGlsZENvbnRleFtzdG9yZUtleV0gPSBzdG9yZVNoYXBlLmlzUmVxdWlyZWQsIF9Qcm92aWRlciRjaGlsZENvbnRleFtzdWJzY3JpcHRpb25LZXldID0gc3Vic2NyaXB0aW9uU2hhcGUsIF9Qcm92aWRlciRjaGlsZENvbnRleCk7XG5cbiAgcmV0dXJuIFByb3ZpZGVyO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVQcm92aWRlcigpOyIsImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbi8vIGVuY2Fwc3VsYXRlcyB0aGUgc3Vic2NyaXB0aW9uIGxvZ2ljIGZvciBjb25uZWN0aW5nIGEgY29tcG9uZW50IHRvIHRoZSByZWR1eCBzdG9yZSwgYXNcbi8vIHdlbGwgYXMgbmVzdGluZyBzdWJzY3JpcHRpb25zIG9mIGRlc2NlbmRhbnQgY29tcG9uZW50cywgc28gdGhhdCB3ZSBjYW4gZW5zdXJlIHRoZVxuLy8gYW5jZXN0b3IgY29tcG9uZW50cyByZS1yZW5kZXIgYmVmb3JlIGRlc2NlbmRhbnRzXG5cbnZhciBDTEVBUkVEID0gbnVsbDtcbnZhciBudWxsTGlzdGVuZXJzID0ge1xuICBub3RpZnk6IGZ1bmN0aW9uIG5vdGlmeSgpIHt9XG59O1xuXG5mdW5jdGlvbiBjcmVhdGVMaXN0ZW5lckNvbGxlY3Rpb24oKSB7XG4gIC8vIHRoZSBjdXJyZW50L25leHQgcGF0dGVybiBpcyBjb3BpZWQgZnJvbSByZWR1eCdzIGNyZWF0ZVN0b3JlIGNvZGUuXG4gIC8vIFRPRE86IHJlZmFjdG9yK2V4cG9zZSB0aGF0IGNvZGUgdG8gYmUgcmV1c2FibGUgaGVyZT9cbiAgdmFyIGN1cnJlbnQgPSBbXTtcbiAgdmFyIG5leHQgPSBbXTtcblxuICByZXR1cm4ge1xuICAgIGNsZWFyOiBmdW5jdGlvbiBjbGVhcigpIHtcbiAgICAgIG5leHQgPSBDTEVBUkVEO1xuICAgICAgY3VycmVudCA9IENMRUFSRUQ7XG4gICAgfSxcbiAgICBub3RpZnk6IGZ1bmN0aW9uIG5vdGlmeSgpIHtcbiAgICAgIHZhciBsaXN0ZW5lcnMgPSBjdXJyZW50ID0gbmV4dDtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdGVuZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGxpc3RlbmVyc1tpXSgpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gbmV4dDtcbiAgICB9LFxuICAgIHN1YnNjcmliZTogZnVuY3Rpb24gc3Vic2NyaWJlKGxpc3RlbmVyKSB7XG4gICAgICB2YXIgaXNTdWJzY3JpYmVkID0gdHJ1ZTtcbiAgICAgIGlmIChuZXh0ID09PSBjdXJyZW50KSBuZXh0ID0gY3VycmVudC5zbGljZSgpO1xuICAgICAgbmV4dC5wdXNoKGxpc3RlbmVyKTtcblxuICAgICAgcmV0dXJuIGZ1bmN0aW9uIHVuc3Vic2NyaWJlKCkge1xuICAgICAgICBpZiAoIWlzU3Vic2NyaWJlZCB8fCBjdXJyZW50ID09PSBDTEVBUkVEKSByZXR1cm47XG4gICAgICAgIGlzU3Vic2NyaWJlZCA9IGZhbHNlO1xuXG4gICAgICAgIGlmIChuZXh0ID09PSBjdXJyZW50KSBuZXh0ID0gY3VycmVudC5zbGljZSgpO1xuICAgICAgICBuZXh0LnNwbGljZShuZXh0LmluZGV4T2YobGlzdGVuZXIpLCAxKTtcbiAgICAgIH07XG4gICAgfVxuICB9O1xufVxuXG52YXIgU3Vic2NyaXB0aW9uID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBTdWJzY3JpcHRpb24oc3RvcmUsIHBhcmVudFN1Yiwgb25TdGF0ZUNoYW5nZSkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTdWJzY3JpcHRpb24pO1xuXG4gICAgdGhpcy5zdG9yZSA9IHN0b3JlO1xuICAgIHRoaXMucGFyZW50U3ViID0gcGFyZW50U3ViO1xuICAgIHRoaXMub25TdGF0ZUNoYW5nZSA9IG9uU3RhdGVDaGFuZ2U7XG4gICAgdGhpcy51bnN1YnNjcmliZSA9IG51bGw7XG4gICAgdGhpcy5saXN0ZW5lcnMgPSBudWxsTGlzdGVuZXJzO1xuICB9XG5cbiAgU3Vic2NyaXB0aW9uLnByb3RvdHlwZS5hZGROZXN0ZWRTdWIgPSBmdW5jdGlvbiBhZGROZXN0ZWRTdWIobGlzdGVuZXIpIHtcbiAgICB0aGlzLnRyeVN1YnNjcmliZSgpO1xuICAgIHJldHVybiB0aGlzLmxpc3RlbmVycy5zdWJzY3JpYmUobGlzdGVuZXIpO1xuICB9O1xuXG4gIFN1YnNjcmlwdGlvbi5wcm90b3R5cGUubm90aWZ5TmVzdGVkU3VicyA9IGZ1bmN0aW9uIG5vdGlmeU5lc3RlZFN1YnMoKSB7XG4gICAgdGhpcy5saXN0ZW5lcnMubm90aWZ5KCk7XG4gIH07XG5cbiAgU3Vic2NyaXB0aW9uLnByb3RvdHlwZS5pc1N1YnNjcmliZWQgPSBmdW5jdGlvbiBpc1N1YnNjcmliZWQoKSB7XG4gICAgcmV0dXJuIEJvb2xlYW4odGhpcy51bnN1YnNjcmliZSk7XG4gIH07XG5cbiAgU3Vic2NyaXB0aW9uLnByb3RvdHlwZS50cnlTdWJzY3JpYmUgPSBmdW5jdGlvbiB0cnlTdWJzY3JpYmUoKSB7XG4gICAgaWYgKCF0aGlzLnVuc3Vic2NyaWJlKSB7XG4gICAgICB0aGlzLnVuc3Vic2NyaWJlID0gdGhpcy5wYXJlbnRTdWIgPyB0aGlzLnBhcmVudFN1Yi5hZGROZXN0ZWRTdWIodGhpcy5vblN0YXRlQ2hhbmdlKSA6IHRoaXMuc3RvcmUuc3Vic2NyaWJlKHRoaXMub25TdGF0ZUNoYW5nZSk7XG5cbiAgICAgIHRoaXMubGlzdGVuZXJzID0gY3JlYXRlTGlzdGVuZXJDb2xsZWN0aW9uKCk7XG4gICAgfVxuICB9O1xuXG4gIFN1YnNjcmlwdGlvbi5wcm90b3R5cGUudHJ5VW5zdWJzY3JpYmUgPSBmdW5jdGlvbiB0cnlVbnN1YnNjcmliZSgpIHtcbiAgICBpZiAodGhpcy51bnN1YnNjcmliZSkge1xuICAgICAgdGhpcy51bnN1YnNjcmliZSgpO1xuICAgICAgdGhpcy51bnN1YnNjcmliZSA9IG51bGw7XG4gICAgICB0aGlzLmxpc3RlbmVycy5jbGVhcigpO1xuICAgICAgdGhpcy5saXN0ZW5lcnMgPSBudWxsTGlzdGVuZXJzO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gU3Vic2NyaXB0aW9uO1xufSgpO1xuXG5leHBvcnQgeyBTdWJzY3JpcHRpb24gYXMgZGVmYXVsdCB9OyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKG9iaiwga2V5cykgeyB2YXIgdGFyZ2V0ID0ge307IGZvciAodmFyIGkgaW4gb2JqKSB7IGlmIChrZXlzLmluZGV4T2YoaSkgPj0gMCkgY29udGludWU7IGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgaSkpIGNvbnRpbnVlOyB0YXJnZXRbaV0gPSBvYmpbaV07IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5pbXBvcnQgaG9pc3RTdGF0aWNzIGZyb20gJ2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAnaW52YXJpYW50JztcbmltcG9ydCB7IENvbXBvbmVudCwgY3JlYXRlRWxlbWVudCB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IFN1YnNjcmlwdGlvbiBmcm9tICcuLi91dGlscy9TdWJzY3JpcHRpb24nO1xuaW1wb3J0IHsgc3RvcmVTaGFwZSwgc3Vic2NyaXB0aW9uU2hhcGUgfSBmcm9tICcuLi91dGlscy9Qcm9wVHlwZXMnO1xuXG52YXIgaG90UmVsb2FkaW5nVmVyc2lvbiA9IDA7XG52YXIgZHVtbXlTdGF0ZSA9IHt9O1xuZnVuY3Rpb24gbm9vcCgpIHt9XG5mdW5jdGlvbiBtYWtlU2VsZWN0b3JTdGF0ZWZ1bChzb3VyY2VTZWxlY3Rvciwgc3RvcmUpIHtcbiAgLy8gd3JhcCB0aGUgc2VsZWN0b3IgaW4gYW4gb2JqZWN0IHRoYXQgdHJhY2tzIGl0cyByZXN1bHRzIGJldHdlZW4gcnVucy5cbiAgdmFyIHNlbGVjdG9yID0ge1xuICAgIHJ1bjogZnVuY3Rpb24gcnVuQ29tcG9uZW50U2VsZWN0b3IocHJvcHMpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHZhciBuZXh0UHJvcHMgPSBzb3VyY2VTZWxlY3RvcihzdG9yZS5nZXRTdGF0ZSgpLCBwcm9wcyk7XG4gICAgICAgIGlmIChuZXh0UHJvcHMgIT09IHNlbGVjdG9yLnByb3BzIHx8IHNlbGVjdG9yLmVycm9yKSB7XG4gICAgICAgICAgc2VsZWN0b3Iuc2hvdWxkQ29tcG9uZW50VXBkYXRlID0gdHJ1ZTtcbiAgICAgICAgICBzZWxlY3Rvci5wcm9wcyA9IG5leHRQcm9wcztcbiAgICAgICAgICBzZWxlY3Rvci5lcnJvciA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHNlbGVjdG9yLnNob3VsZENvbXBvbmVudFVwZGF0ZSA9IHRydWU7XG4gICAgICAgIHNlbGVjdG9yLmVycm9yID0gZXJyb3I7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBzZWxlY3Rvcjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY29ubmVjdEFkdmFuY2VkKFxuLypcbiAgc2VsZWN0b3JGYWN0b3J5IGlzIGEgZnVuYyB0aGF0IGlzIHJlc3BvbnNpYmxlIGZvciByZXR1cm5pbmcgdGhlIHNlbGVjdG9yIGZ1bmN0aW9uIHVzZWQgdG9cbiAgY29tcHV0ZSBuZXcgcHJvcHMgZnJvbSBzdGF0ZSwgcHJvcHMsIGFuZCBkaXNwYXRjaC4gRm9yIGV4YW1wbGU6XG4gICAgIGV4cG9ydCBkZWZhdWx0IGNvbm5lY3RBZHZhbmNlZCgoZGlzcGF0Y2gsIG9wdGlvbnMpID0+IChzdGF0ZSwgcHJvcHMpID0+ICh7XG4gICAgICB0aGluZzogc3RhdGUudGhpbmdzW3Byb3BzLnRoaW5nSWRdLFxuICAgICAgc2F2ZVRoaW5nOiBmaWVsZHMgPT4gZGlzcGF0Y2goYWN0aW9uQ3JlYXRvcnMuc2F2ZVRoaW5nKHByb3BzLnRoaW5nSWQsIGZpZWxkcykpLFxuICAgIH0pKShZb3VyQ29tcG9uZW50KVxuICAgQWNjZXNzIHRvIGRpc3BhdGNoIGlzIHByb3ZpZGVkIHRvIHRoZSBmYWN0b3J5IHNvIHNlbGVjdG9yRmFjdG9yaWVzIGNhbiBiaW5kIGFjdGlvbkNyZWF0b3JzXG4gIG91dHNpZGUgb2YgdGhlaXIgc2VsZWN0b3IgYXMgYW4gb3B0aW1pemF0aW9uLiBPcHRpb25zIHBhc3NlZCB0byBjb25uZWN0QWR2YW5jZWQgYXJlIHBhc3NlZCB0b1xuICB0aGUgc2VsZWN0b3JGYWN0b3J5LCBhbG9uZyB3aXRoIGRpc3BsYXlOYW1lIGFuZCBXcmFwcGVkQ29tcG9uZW50LCBhcyB0aGUgc2Vjb25kIGFyZ3VtZW50LlxuICAgTm90ZSB0aGF0IHNlbGVjdG9yRmFjdG9yeSBpcyByZXNwb25zaWJsZSBmb3IgYWxsIGNhY2hpbmcvbWVtb2l6YXRpb24gb2YgaW5ib3VuZCBhbmQgb3V0Ym91bmRcbiAgcHJvcHMuIERvIG5vdCB1c2UgY29ubmVjdEFkdmFuY2VkIGRpcmVjdGx5IHdpdGhvdXQgbWVtb2l6aW5nIHJlc3VsdHMgYmV0d2VlbiBjYWxscyB0byB5b3VyXG4gIHNlbGVjdG9yLCBvdGhlcndpc2UgdGhlIENvbm5lY3QgY29tcG9uZW50IHdpbGwgcmUtcmVuZGVyIG9uIGV2ZXJ5IHN0YXRlIG9yIHByb3BzIGNoYW5nZS5cbiovXG5zZWxlY3RvckZhY3RvcnkpIHtcbiAgdmFyIF9jb250ZXh0VHlwZXMsIF9jaGlsZENvbnRleHRUeXBlcztcblxuICB2YXIgX3JlZiA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge30sXG4gICAgICBfcmVmJGdldERpc3BsYXlOYW1lID0gX3JlZi5nZXREaXNwbGF5TmFtZSxcbiAgICAgIGdldERpc3BsYXlOYW1lID0gX3JlZiRnZXREaXNwbGF5TmFtZSA9PT0gdW5kZWZpbmVkID8gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICByZXR1cm4gJ0Nvbm5lY3RBZHZhbmNlZCgnICsgbmFtZSArICcpJztcbiAgfSA6IF9yZWYkZ2V0RGlzcGxheU5hbWUsXG4gICAgICBfcmVmJG1ldGhvZE5hbWUgPSBfcmVmLm1ldGhvZE5hbWUsXG4gICAgICBtZXRob2ROYW1lID0gX3JlZiRtZXRob2ROYW1lID09PSB1bmRlZmluZWQgPyAnY29ubmVjdEFkdmFuY2VkJyA6IF9yZWYkbWV0aG9kTmFtZSxcbiAgICAgIF9yZWYkcmVuZGVyQ291bnRQcm9wID0gX3JlZi5yZW5kZXJDb3VudFByb3AsXG4gICAgICByZW5kZXJDb3VudFByb3AgPSBfcmVmJHJlbmRlckNvdW50UHJvcCA9PT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogX3JlZiRyZW5kZXJDb3VudFByb3AsXG4gICAgICBfcmVmJHNob3VsZEhhbmRsZVN0YXQgPSBfcmVmLnNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcyxcbiAgICAgIHNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcyA9IF9yZWYkc2hvdWxkSGFuZGxlU3RhdCA9PT0gdW5kZWZpbmVkID8gdHJ1ZSA6IF9yZWYkc2hvdWxkSGFuZGxlU3RhdCxcbiAgICAgIF9yZWYkc3RvcmVLZXkgPSBfcmVmLnN0b3JlS2V5LFxuICAgICAgc3RvcmVLZXkgPSBfcmVmJHN0b3JlS2V5ID09PSB1bmRlZmluZWQgPyAnc3RvcmUnIDogX3JlZiRzdG9yZUtleSxcbiAgICAgIF9yZWYkd2l0aFJlZiA9IF9yZWYud2l0aFJlZixcbiAgICAgIHdpdGhSZWYgPSBfcmVmJHdpdGhSZWYgPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogX3JlZiR3aXRoUmVmLFxuICAgICAgY29ubmVjdE9wdGlvbnMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZiwgWydnZXREaXNwbGF5TmFtZScsICdtZXRob2ROYW1lJywgJ3JlbmRlckNvdW50UHJvcCcsICdzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMnLCAnc3RvcmVLZXknLCAnd2l0aFJlZiddKTtcblxuICB2YXIgc3Vic2NyaXB0aW9uS2V5ID0gc3RvcmVLZXkgKyAnU3Vic2NyaXB0aW9uJztcbiAgdmFyIHZlcnNpb24gPSBob3RSZWxvYWRpbmdWZXJzaW9uKys7XG5cbiAgdmFyIGNvbnRleHRUeXBlcyA9IChfY29udGV4dFR5cGVzID0ge30sIF9jb250ZXh0VHlwZXNbc3RvcmVLZXldID0gc3RvcmVTaGFwZSwgX2NvbnRleHRUeXBlc1tzdWJzY3JpcHRpb25LZXldID0gc3Vic2NyaXB0aW9uU2hhcGUsIF9jb250ZXh0VHlwZXMpO1xuICB2YXIgY2hpbGRDb250ZXh0VHlwZXMgPSAoX2NoaWxkQ29udGV4dFR5cGVzID0ge30sIF9jaGlsZENvbnRleHRUeXBlc1tzdWJzY3JpcHRpb25LZXldID0gc3Vic2NyaXB0aW9uU2hhcGUsIF9jaGlsZENvbnRleHRUeXBlcyk7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXBXaXRoQ29ubmVjdChXcmFwcGVkQ29tcG9uZW50KSB7XG4gICAgaW52YXJpYW50KHR5cGVvZiBXcmFwcGVkQ29tcG9uZW50ID09ICdmdW5jdGlvbicsICdZb3UgbXVzdCBwYXNzIGEgY29tcG9uZW50IHRvIHRoZSBmdW5jdGlvbiByZXR1cm5lZCBieSAnICsgKG1ldGhvZE5hbWUgKyAnLiBJbnN0ZWFkIHJlY2VpdmVkICcgKyBKU09OLnN0cmluZ2lmeShXcmFwcGVkQ29tcG9uZW50KSkpO1xuXG4gICAgdmFyIHdyYXBwZWRDb21wb25lbnROYW1lID0gV3JhcHBlZENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBXcmFwcGVkQ29tcG9uZW50Lm5hbWUgfHwgJ0NvbXBvbmVudCc7XG5cbiAgICB2YXIgZGlzcGxheU5hbWUgPSBnZXREaXNwbGF5TmFtZSh3cmFwcGVkQ29tcG9uZW50TmFtZSk7XG5cbiAgICB2YXIgc2VsZWN0b3JGYWN0b3J5T3B0aW9ucyA9IF9leHRlbmRzKHt9LCBjb25uZWN0T3B0aW9ucywge1xuICAgICAgZ2V0RGlzcGxheU5hbWU6IGdldERpc3BsYXlOYW1lLFxuICAgICAgbWV0aG9kTmFtZTogbWV0aG9kTmFtZSxcbiAgICAgIHJlbmRlckNvdW50UHJvcDogcmVuZGVyQ291bnRQcm9wLFxuICAgICAgc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzOiBzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMsXG4gICAgICBzdG9yZUtleTogc3RvcmVLZXksXG4gICAgICB3aXRoUmVmOiB3aXRoUmVmLFxuICAgICAgZGlzcGxheU5hbWU6IGRpc3BsYXlOYW1lLFxuICAgICAgd3JhcHBlZENvbXBvbmVudE5hbWU6IHdyYXBwZWRDb21wb25lbnROYW1lLFxuICAgICAgV3JhcHBlZENvbXBvbmVudDogV3JhcHBlZENvbXBvbmVudFxuICAgIH0pO1xuXG4gICAgdmFyIENvbm5lY3QgPSBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICAgICAgX2luaGVyaXRzKENvbm5lY3QsIF9Db21wb25lbnQpO1xuXG4gICAgICBmdW5jdGlvbiBDb25uZWN0KHByb3BzLCBjb250ZXh0KSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDb25uZWN0KTtcblxuICAgICAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMsIGNvbnRleHQpKTtcblxuICAgICAgICBfdGhpcy52ZXJzaW9uID0gdmVyc2lvbjtcbiAgICAgICAgX3RoaXMuc3RhdGUgPSB7fTtcbiAgICAgICAgX3RoaXMucmVuZGVyQ291bnQgPSAwO1xuICAgICAgICBfdGhpcy5zdG9yZSA9IHByb3BzW3N0b3JlS2V5XSB8fCBjb250ZXh0W3N0b3JlS2V5XTtcbiAgICAgICAgX3RoaXMucHJvcHNNb2RlID0gQm9vbGVhbihwcm9wc1tzdG9yZUtleV0pO1xuICAgICAgICBfdGhpcy5zZXRXcmFwcGVkSW5zdGFuY2UgPSBfdGhpcy5zZXRXcmFwcGVkSW5zdGFuY2UuYmluZChfdGhpcyk7XG5cbiAgICAgICAgaW52YXJpYW50KF90aGlzLnN0b3JlLCAnQ291bGQgbm90IGZpbmQgXCInICsgc3RvcmVLZXkgKyAnXCIgaW4gZWl0aGVyIHRoZSBjb250ZXh0IG9yIHByb3BzIG9mICcgKyAoJ1wiJyArIGRpc3BsYXlOYW1lICsgJ1wiLiBFaXRoZXIgd3JhcCB0aGUgcm9vdCBjb21wb25lbnQgaW4gYSA8UHJvdmlkZXI+LCAnKSArICgnb3IgZXhwbGljaXRseSBwYXNzIFwiJyArIHN0b3JlS2V5ICsgJ1wiIGFzIGEgcHJvcCB0byBcIicgKyBkaXNwbGF5TmFtZSArICdcIi4nKSk7XG5cbiAgICAgICAgX3RoaXMuaW5pdFNlbGVjdG9yKCk7XG4gICAgICAgIF90aGlzLmluaXRTdWJzY3JpcHRpb24oKTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgICAgfVxuXG4gICAgICBDb25uZWN0LnByb3RvdHlwZS5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgICAgIHZhciBfcmVmMjtcblxuICAgICAgICAvLyBJZiB0aGlzIGNvbXBvbmVudCByZWNlaXZlZCBzdG9yZSBmcm9tIHByb3BzLCBpdHMgc3Vic2NyaXB0aW9uIHNob3VsZCBiZSB0cmFuc3BhcmVudFxuICAgICAgICAvLyB0byBhbnkgZGVzY2VuZGFudHMgcmVjZWl2aW5nIHN0b3JlK3N1YnNjcmlwdGlvbiBmcm9tIGNvbnRleHQ7IGl0IHBhc3NlcyBhbG9uZ1xuICAgICAgICAvLyBzdWJzY3JpcHRpb24gcGFzc2VkIHRvIGl0LiBPdGhlcndpc2UsIGl0IHNoYWRvd3MgdGhlIHBhcmVudCBzdWJzY3JpcHRpb24sIHdoaWNoIGFsbG93c1xuICAgICAgICAvLyBDb25uZWN0IHRvIGNvbnRyb2wgb3JkZXJpbmcgb2Ygbm90aWZpY2F0aW9ucyB0byBmbG93IHRvcC1kb3duLlxuICAgICAgICB2YXIgc3Vic2NyaXB0aW9uID0gdGhpcy5wcm9wc01vZGUgPyBudWxsIDogdGhpcy5zdWJzY3JpcHRpb247XG4gICAgICAgIHJldHVybiBfcmVmMiA9IHt9LCBfcmVmMltzdWJzY3JpcHRpb25LZXldID0gc3Vic2NyaXB0aW9uIHx8IHRoaXMuY29udGV4dFtzdWJzY3JpcHRpb25LZXldLCBfcmVmMjtcbiAgICAgIH07XG5cbiAgICAgIENvbm5lY3QucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICAgIGlmICghc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzKSByZXR1cm47XG5cbiAgICAgICAgLy8gY29tcG9uZW50V2lsbE1vdW50IGZpcmVzIGR1cmluZyBzZXJ2ZXIgc2lkZSByZW5kZXJpbmcsIGJ1dCBjb21wb25lbnREaWRNb3VudCBhbmRcbiAgICAgICAgLy8gY29tcG9uZW50V2lsbFVubW91bnQgZG8gbm90LiBCZWNhdXNlIG9mIHRoaXMsIHRyeVN1YnNjcmliZSBoYXBwZW5zIGR1cmluZyAuLi5kaWRNb3VudC5cbiAgICAgICAgLy8gT3RoZXJ3aXNlLCB1bnN1YnNjcmlwdGlvbiB3b3VsZCBuZXZlciB0YWtlIHBsYWNlIGR1cmluZyBTU1IsIGNhdXNpbmcgYSBtZW1vcnkgbGVhay5cbiAgICAgICAgLy8gVG8gaGFuZGxlIHRoZSBjYXNlIHdoZXJlIGEgY2hpbGQgY29tcG9uZW50IG1heSBoYXZlIHRyaWdnZXJlZCBhIHN0YXRlIGNoYW5nZSBieVxuICAgICAgICAvLyBkaXNwYXRjaGluZyBhbiBhY3Rpb24gaW4gaXRzIGNvbXBvbmVudFdpbGxNb3VudCwgd2UgaGF2ZSB0byByZS1ydW4gdGhlIHNlbGVjdCBhbmQgbWF5YmVcbiAgICAgICAgLy8gcmUtcmVuZGVyLlxuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbi50cnlTdWJzY3JpYmUoKTtcbiAgICAgICAgdGhpcy5zZWxlY3Rvci5ydW4odGhpcy5wcm9wcyk7XG4gICAgICAgIGlmICh0aGlzLnNlbGVjdG9yLnNob3VsZENvbXBvbmVudFVwZGF0ZSkgdGhpcy5mb3JjZVVwZGF0ZSgpO1xuICAgICAgfTtcblxuICAgICAgQ29ubmVjdC5wcm90b3R5cGUuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICAgIHRoaXMuc2VsZWN0b3IucnVuKG5leHRQcm9wcyk7XG4gICAgICB9O1xuXG4gICAgICBDb25uZWN0LnByb3RvdHlwZS5zaG91bGRDb21wb25lbnRVcGRhdGUgPSBmdW5jdGlvbiBzaG91bGRDb21wb25lbnRVcGRhdGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNlbGVjdG9yLnNob3VsZENvbXBvbmVudFVwZGF0ZTtcbiAgICAgIH07XG5cbiAgICAgIENvbm5lY3QucHJvdG90eXBlLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICAgIGlmICh0aGlzLnN1YnNjcmlwdGlvbikgdGhpcy5zdWJzY3JpcHRpb24udHJ5VW5zdWJzY3JpYmUoKTtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb24gPSBudWxsO1xuICAgICAgICB0aGlzLm5vdGlmeU5lc3RlZFN1YnMgPSBub29wO1xuICAgICAgICB0aGlzLnN0b3JlID0gbnVsbDtcbiAgICAgICAgdGhpcy5zZWxlY3Rvci5ydW4gPSBub29wO1xuICAgICAgICB0aGlzLnNlbGVjdG9yLnNob3VsZENvbXBvbmVudFVwZGF0ZSA9IGZhbHNlO1xuICAgICAgfTtcblxuICAgICAgQ29ubmVjdC5wcm90b3R5cGUuZ2V0V3JhcHBlZEluc3RhbmNlID0gZnVuY3Rpb24gZ2V0V3JhcHBlZEluc3RhbmNlKCkge1xuICAgICAgICBpbnZhcmlhbnQod2l0aFJlZiwgJ1RvIGFjY2VzcyB0aGUgd3JhcHBlZCBpbnN0YW5jZSwgeW91IG5lZWQgdG8gc3BlY2lmeSAnICsgKCd7IHdpdGhSZWY6IHRydWUgfSBpbiB0aGUgb3B0aW9ucyBhcmd1bWVudCBvZiB0aGUgJyArIG1ldGhvZE5hbWUgKyAnKCkgY2FsbC4nKSk7XG4gICAgICAgIHJldHVybiB0aGlzLndyYXBwZWRJbnN0YW5jZTtcbiAgICAgIH07XG5cbiAgICAgIENvbm5lY3QucHJvdG90eXBlLnNldFdyYXBwZWRJbnN0YW5jZSA9IGZ1bmN0aW9uIHNldFdyYXBwZWRJbnN0YW5jZShyZWYpIHtcbiAgICAgICAgdGhpcy53cmFwcGVkSW5zdGFuY2UgPSByZWY7XG4gICAgICB9O1xuXG4gICAgICBDb25uZWN0LnByb3RvdHlwZS5pbml0U2VsZWN0b3IgPSBmdW5jdGlvbiBpbml0U2VsZWN0b3IoKSB7XG4gICAgICAgIHZhciBzb3VyY2VTZWxlY3RvciA9IHNlbGVjdG9yRmFjdG9yeSh0aGlzLnN0b3JlLmRpc3BhdGNoLCBzZWxlY3RvckZhY3RvcnlPcHRpb25zKTtcbiAgICAgICAgdGhpcy5zZWxlY3RvciA9IG1ha2VTZWxlY3RvclN0YXRlZnVsKHNvdXJjZVNlbGVjdG9yLCB0aGlzLnN0b3JlKTtcbiAgICAgICAgdGhpcy5zZWxlY3Rvci5ydW4odGhpcy5wcm9wcyk7XG4gICAgICB9O1xuXG4gICAgICBDb25uZWN0LnByb3RvdHlwZS5pbml0U3Vic2NyaXB0aW9uID0gZnVuY3Rpb24gaW5pdFN1YnNjcmlwdGlvbigpIHtcbiAgICAgICAgaWYgKCFzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMpIHJldHVybjtcblxuICAgICAgICAvLyBwYXJlbnRTdWIncyBzb3VyY2Ugc2hvdWxkIG1hdGNoIHdoZXJlIHN0b3JlIGNhbWUgZnJvbTogcHJvcHMgdnMuIGNvbnRleHQuIEEgY29tcG9uZW50XG4gICAgICAgIC8vIGNvbm5lY3RlZCB0byB0aGUgc3RvcmUgdmlhIHByb3BzIHNob3VsZG4ndCB1c2Ugc3Vic2NyaXB0aW9uIGZyb20gY29udGV4dCwgb3IgdmljZSB2ZXJzYS5cbiAgICAgICAgdmFyIHBhcmVudFN1YiA9ICh0aGlzLnByb3BzTW9kZSA/IHRoaXMucHJvcHMgOiB0aGlzLmNvbnRleHQpW3N1YnNjcmlwdGlvbktleV07XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uID0gbmV3IFN1YnNjcmlwdGlvbih0aGlzLnN0b3JlLCBwYXJlbnRTdWIsIHRoaXMub25TdGF0ZUNoYW5nZS5iaW5kKHRoaXMpKTtcblxuICAgICAgICAvLyBgbm90aWZ5TmVzdGVkU3Vic2AgaXMgZHVwbGljYXRlZCB0byBoYW5kbGUgdGhlIGNhc2Ugd2hlcmUgdGhlIGNvbXBvbmVudCBpcyAgdW5tb3VudGVkIGluXG4gICAgICAgIC8vIHRoZSBtaWRkbGUgb2YgdGhlIG5vdGlmaWNhdGlvbiBsb29wLCB3aGVyZSBgdGhpcy5zdWJzY3JpcHRpb25gIHdpbGwgdGhlbiBiZSBudWxsLiBBblxuICAgICAgICAvLyBleHRyYSBudWxsIGNoZWNrIGV2ZXJ5IGNoYW5nZSBjYW4gYmUgYXZvaWRlZCBieSBjb3B5aW5nIHRoZSBtZXRob2Qgb250byBgdGhpc2AgYW5kIHRoZW5cbiAgICAgICAgLy8gcmVwbGFjaW5nIGl0IHdpdGggYSBuby1vcCBvbiB1bm1vdW50LiBUaGlzIGNhbiBwcm9iYWJseSBiZSBhdm9pZGVkIGlmIFN1YnNjcmlwdGlvbidzXG4gICAgICAgIC8vIGxpc3RlbmVycyBsb2dpYyBpcyBjaGFuZ2VkIHRvIG5vdCBjYWxsIGxpc3RlbmVycyB0aGF0IGhhdmUgYmVlbiB1bnN1YnNjcmliZWQgaW4gdGhlXG4gICAgICAgIC8vIG1pZGRsZSBvZiB0aGUgbm90aWZpY2F0aW9uIGxvb3AuXG4gICAgICAgIHRoaXMubm90aWZ5TmVzdGVkU3VicyA9IHRoaXMuc3Vic2NyaXB0aW9uLm5vdGlmeU5lc3RlZFN1YnMuYmluZCh0aGlzLnN1YnNjcmlwdGlvbik7XG4gICAgICB9O1xuXG4gICAgICBDb25uZWN0LnByb3RvdHlwZS5vblN0YXRlQ2hhbmdlID0gZnVuY3Rpb24gb25TdGF0ZUNoYW5nZSgpIHtcbiAgICAgICAgdGhpcy5zZWxlY3Rvci5ydW4odGhpcy5wcm9wcyk7XG5cbiAgICAgICAgaWYgKCF0aGlzLnNlbGVjdG9yLnNob3VsZENvbXBvbmVudFVwZGF0ZSkge1xuICAgICAgICAgIHRoaXMubm90aWZ5TmVzdGVkU3VicygpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuY29tcG9uZW50RGlkVXBkYXRlID0gdGhpcy5ub3RpZnlOZXN0ZWRTdWJzT25Db21wb25lbnREaWRVcGRhdGU7XG4gICAgICAgICAgdGhpcy5zZXRTdGF0ZShkdW1teVN0YXRlKTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgQ29ubmVjdC5wcm90b3R5cGUubm90aWZ5TmVzdGVkU3Vic09uQ29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gbm90aWZ5TmVzdGVkU3Vic09uQ29tcG9uZW50RGlkVXBkYXRlKCkge1xuICAgICAgICAvLyBgY29tcG9uZW50RGlkVXBkYXRlYCBpcyBjb25kaXRpb25hbGx5IGltcGxlbWVudGVkIHdoZW4gYG9uU3RhdGVDaGFuZ2VgIGRldGVybWluZXMgaXRcbiAgICAgICAgLy8gbmVlZHMgdG8gbm90aWZ5IG5lc3RlZCBzdWJzLiBPbmNlIGNhbGxlZCwgaXQgdW5pbXBsZW1lbnRzIGl0c2VsZiB1bnRpbCBmdXJ0aGVyIHN0YXRlXG4gICAgICAgIC8vIGNoYW5nZXMgb2NjdXIuIERvaW5nIGl0IHRoaXMgd2F5IHZzIGhhdmluZyBhIHBlcm1hbmVudCBgY29tcG9uZW50RGlkVXBkYXRlYCB0aGF0IGRvZXNcbiAgICAgICAgLy8gYSBib29sZWFuIGNoZWNrIGV2ZXJ5IHRpbWUgYXZvaWRzIGFuIGV4dHJhIG1ldGhvZCBjYWxsIG1vc3Qgb2YgdGhlIHRpbWUsIHJlc3VsdGluZ1xuICAgICAgICAvLyBpbiBzb21lIHBlcmYgYm9vc3QuXG4gICAgICAgIHRoaXMuY29tcG9uZW50RGlkVXBkYXRlID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLm5vdGlmeU5lc3RlZFN1YnMoKTtcbiAgICAgIH07XG5cbiAgICAgIENvbm5lY3QucHJvdG90eXBlLmlzU3Vic2NyaWJlZCA9IGZ1bmN0aW9uIGlzU3Vic2NyaWJlZCgpIHtcbiAgICAgICAgcmV0dXJuIEJvb2xlYW4odGhpcy5zdWJzY3JpcHRpb24pICYmIHRoaXMuc3Vic2NyaXB0aW9uLmlzU3Vic2NyaWJlZCgpO1xuICAgICAgfTtcblxuICAgICAgQ29ubmVjdC5wcm90b3R5cGUuYWRkRXh0cmFQcm9wcyA9IGZ1bmN0aW9uIGFkZEV4dHJhUHJvcHMocHJvcHMpIHtcbiAgICAgICAgaWYgKCF3aXRoUmVmICYmICFyZW5kZXJDb3VudFByb3AgJiYgISh0aGlzLnByb3BzTW9kZSAmJiB0aGlzLnN1YnNjcmlwdGlvbikpIHJldHVybiBwcm9wcztcbiAgICAgICAgLy8gbWFrZSBhIHNoYWxsb3cgY29weSBzbyB0aGF0IGZpZWxkcyBhZGRlZCBkb24ndCBsZWFrIHRvIHRoZSBvcmlnaW5hbCBzZWxlY3Rvci5cbiAgICAgICAgLy8gdGhpcyBpcyBlc3BlY2lhbGx5IGltcG9ydGFudCBmb3IgJ3JlZicgc2luY2UgdGhhdCdzIGEgcmVmZXJlbmNlIGJhY2sgdG8gdGhlIGNvbXBvbmVudFxuICAgICAgICAvLyBpbnN0YW5jZS4gYSBzaW5nbGV0b24gbWVtb2l6ZWQgc2VsZWN0b3Igd291bGQgdGhlbiBiZSBob2xkaW5nIGEgcmVmZXJlbmNlIHRvIHRoZVxuICAgICAgICAvLyBpbnN0YW5jZSwgcHJldmVudGluZyB0aGUgaW5zdGFuY2UgZnJvbSBiZWluZyBnYXJiYWdlIGNvbGxlY3RlZCwgYW5kIHRoYXQgd291bGQgYmUgYmFkXG4gICAgICAgIHZhciB3aXRoRXh0cmFzID0gX2V4dGVuZHMoe30sIHByb3BzKTtcbiAgICAgICAgaWYgKHdpdGhSZWYpIHdpdGhFeHRyYXMucmVmID0gdGhpcy5zZXRXcmFwcGVkSW5zdGFuY2U7XG4gICAgICAgIGlmIChyZW5kZXJDb3VudFByb3ApIHdpdGhFeHRyYXNbcmVuZGVyQ291bnRQcm9wXSA9IHRoaXMucmVuZGVyQ291bnQrKztcbiAgICAgICAgaWYgKHRoaXMucHJvcHNNb2RlICYmIHRoaXMuc3Vic2NyaXB0aW9uKSB3aXRoRXh0cmFzW3N1YnNjcmlwdGlvbktleV0gPSB0aGlzLnN1YnNjcmlwdGlvbjtcbiAgICAgICAgcmV0dXJuIHdpdGhFeHRyYXM7XG4gICAgICB9O1xuXG4gICAgICBDb25uZWN0LnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICAgIHZhciBzZWxlY3RvciA9IHRoaXMuc2VsZWN0b3I7XG4gICAgICAgIHNlbGVjdG9yLnNob3VsZENvbXBvbmVudFVwZGF0ZSA9IGZhbHNlO1xuXG4gICAgICAgIGlmIChzZWxlY3Rvci5lcnJvcikge1xuICAgICAgICAgIHRocm93IHNlbGVjdG9yLmVycm9yO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVFbGVtZW50KFdyYXBwZWRDb21wb25lbnQsIHRoaXMuYWRkRXh0cmFQcm9wcyhzZWxlY3Rvci5wcm9wcykpO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gQ29ubmVjdDtcbiAgICB9KENvbXBvbmVudCk7XG5cbiAgICBDb25uZWN0LldyYXBwZWRDb21wb25lbnQgPSBXcmFwcGVkQ29tcG9uZW50O1xuICAgIENvbm5lY3QuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcbiAgICBDb25uZWN0LmNoaWxkQ29udGV4dFR5cGVzID0gY2hpbGRDb250ZXh0VHlwZXM7XG4gICAgQ29ubmVjdC5jb250ZXh0VHlwZXMgPSBjb250ZXh0VHlwZXM7XG4gICAgQ29ubmVjdC5wcm9wVHlwZXMgPSBjb250ZXh0VHlwZXM7XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgQ29ubmVjdC5wcm90b3R5cGUuY29tcG9uZW50V2lsbFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVcGRhdGUoKSB7XG4gICAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICAgIC8vIFdlIGFyZSBob3QgcmVsb2FkaW5nIVxuICAgICAgICBpZiAodGhpcy52ZXJzaW9uICE9PSB2ZXJzaW9uKSB7XG4gICAgICAgICAgdGhpcy52ZXJzaW9uID0gdmVyc2lvbjtcbiAgICAgICAgICB0aGlzLmluaXRTZWxlY3RvcigpO1xuXG4gICAgICAgICAgLy8gSWYgYW55IGNvbm5lY3RlZCBkZXNjZW5kYW50cyBkb24ndCBob3QgcmVsb2FkIChhbmQgcmVzdWJzY3JpYmUgaW4gdGhlIHByb2Nlc3MpLCB0aGVpclxuICAgICAgICAgIC8vIGxpc3RlbmVycyB3aWxsIGJlIGxvc3Qgd2hlbiB3ZSB1bnN1YnNjcmliZS4gVW5mb3J0dW5hdGVseSwgYnkgY29weWluZyBvdmVyIGFsbFxuICAgICAgICAgIC8vIGxpc3RlbmVycywgdGhpcyBkb2VzIG1lYW4gdGhhdCB0aGUgb2xkIHZlcnNpb25zIG9mIGNvbm5lY3RlZCBkZXNjZW5kYW50cyB3aWxsIHN0aWxsIGJlXG4gICAgICAgICAgLy8gbm90aWZpZWQgb2Ygc3RhdGUgY2hhbmdlczsgaG93ZXZlciwgdGhlaXIgb25TdGF0ZUNoYW5nZSBmdW5jdGlvbiBpcyBhIG5vLW9wIHNvIHRoaXNcbiAgICAgICAgICAvLyBpc24ndCBhIGh1Z2UgZGVhbC5cbiAgICAgICAgICB2YXIgb2xkTGlzdGVuZXJzID0gW107XG5cbiAgICAgICAgICBpZiAodGhpcy5zdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgIG9sZExpc3RlbmVycyA9IHRoaXMuc3Vic2NyaXB0aW9uLmxpc3RlbmVycy5nZXQoKTtcbiAgICAgICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uLnRyeVVuc3Vic2NyaWJlKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRoaXMuaW5pdFN1YnNjcmlwdGlvbigpO1xuICAgICAgICAgIGlmIChzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMpIHtcbiAgICAgICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uLnRyeVN1YnNjcmliZSgpO1xuICAgICAgICAgICAgb2xkTGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKGxpc3RlbmVyKSB7XG4gICAgICAgICAgICAgIHJldHVybiBfdGhpczIuc3Vic2NyaXB0aW9uLmxpc3RlbmVycy5zdWJzY3JpYmUobGlzdGVuZXIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiBob2lzdFN0YXRpY3MoQ29ubmVjdCwgV3JhcHBlZENvbXBvbmVudCk7XG4gIH07XG59IiwidmFyIGhhc093biA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbmZ1bmN0aW9uIGlzKHgsIHkpIHtcbiAgaWYgKHggPT09IHkpIHtcbiAgICByZXR1cm4geCAhPT0gMCB8fCB5ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4geCAhPT0geCAmJiB5ICE9PSB5O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNoYWxsb3dFcXVhbChvYmpBLCBvYmpCKSB7XG4gIGlmIChpcyhvYmpBLCBvYmpCKSkgcmV0dXJuIHRydWU7XG5cbiAgaWYgKHR5cGVvZiBvYmpBICE9PSAnb2JqZWN0JyB8fCBvYmpBID09PSBudWxsIHx8IHR5cGVvZiBvYmpCICE9PSAnb2JqZWN0JyB8fCBvYmpCID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIGtleXNBID0gT2JqZWN0LmtleXMob2JqQSk7XG4gIHZhciBrZXlzQiA9IE9iamVjdC5rZXlzKG9iakIpO1xuXG4gIGlmIChrZXlzQS5sZW5ndGggIT09IGtleXNCLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwga2V5c0EubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoIWhhc093bi5jYWxsKG9iakIsIGtleXNBW2ldKSB8fCAhaXMob2JqQVtrZXlzQVtpXV0sIG9iakJba2V5c0FbaV1dKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufSIsImltcG9ydCB2ZXJpZnlQbGFpbk9iamVjdCBmcm9tICcuLi91dGlscy92ZXJpZnlQbGFpbk9iamVjdCc7XG5cbmV4cG9ydCBmdW5jdGlvbiB3cmFwTWFwVG9Qcm9wc0NvbnN0YW50KGdldENvbnN0YW50KSB7XG4gIHJldHVybiBmdW5jdGlvbiBpbml0Q29uc3RhbnRTZWxlY3RvcihkaXNwYXRjaCwgb3B0aW9ucykge1xuICAgIHZhciBjb25zdGFudCA9IGdldENvbnN0YW50KGRpc3BhdGNoLCBvcHRpb25zKTtcblxuICAgIGZ1bmN0aW9uIGNvbnN0YW50U2VsZWN0b3IoKSB7XG4gICAgICByZXR1cm4gY29uc3RhbnQ7XG4gICAgfVxuICAgIGNvbnN0YW50U2VsZWN0b3IuZGVwZW5kc09uT3duUHJvcHMgPSBmYWxzZTtcbiAgICByZXR1cm4gY29uc3RhbnRTZWxlY3RvcjtcbiAgfTtcbn1cblxuLy8gZGVwZW5kc09uT3duUHJvcHMgaXMgdXNlZCBieSBjcmVhdGVNYXBUb1Byb3BzUHJveHkgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdG8gcGFzcyBwcm9wcyBhcyBhcmdzXG4vLyB0byB0aGUgbWFwVG9Qcm9wcyBmdW5jdGlvbiBiZWluZyB3cmFwcGVkLiBJdCBpcyBhbHNvIHVzZWQgYnkgbWFrZVB1cmVQcm9wc1NlbGVjdG9yIHRvIGRldGVybWluZVxuLy8gd2hldGhlciBtYXBUb1Byb3BzIG5lZWRzIHRvIGJlIGludm9rZWQgd2hlbiBwcm9wcyBoYXZlIGNoYW5nZWQuXG4vLyBcbi8vIEEgbGVuZ3RoIG9mIG9uZSBzaWduYWxzIHRoYXQgbWFwVG9Qcm9wcyBkb2VzIG5vdCBkZXBlbmQgb24gcHJvcHMgZnJvbSB0aGUgcGFyZW50IGNvbXBvbmVudC5cbi8vIEEgbGVuZ3RoIG9mIHplcm8gaXMgYXNzdW1lZCB0byBtZWFuIG1hcFRvUHJvcHMgaXMgZ2V0dGluZyBhcmdzIHZpYSBhcmd1bWVudHMgb3IgLi4uYXJncyBhbmRcbi8vIHRoZXJlZm9yZSBub3QgcmVwb3J0aW5nIGl0cyBsZW5ndGggYWNjdXJhdGVseS4uXG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVwZW5kc09uT3duUHJvcHMobWFwVG9Qcm9wcykge1xuICByZXR1cm4gbWFwVG9Qcm9wcy5kZXBlbmRzT25Pd25Qcm9wcyAhPT0gbnVsbCAmJiBtYXBUb1Byb3BzLmRlcGVuZHNPbk93blByb3BzICE9PSB1bmRlZmluZWQgPyBCb29sZWFuKG1hcFRvUHJvcHMuZGVwZW5kc09uT3duUHJvcHMpIDogbWFwVG9Qcm9wcy5sZW5ndGggIT09IDE7XG59XG5cbi8vIFVzZWQgYnkgd2hlbk1hcFN0YXRlVG9Qcm9wc0lzRnVuY3Rpb24gYW5kIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc0Z1bmN0aW9uLFxuLy8gdGhpcyBmdW5jdGlvbiB3cmFwcyBtYXBUb1Byb3BzIGluIGEgcHJveHkgZnVuY3Rpb24gd2hpY2ggZG9lcyBzZXZlcmFsIHRoaW5nczpcbi8vIFxuLy8gICogRGV0ZWN0cyB3aGV0aGVyIHRoZSBtYXBUb1Byb3BzIGZ1bmN0aW9uIGJlaW5nIGNhbGxlZCBkZXBlbmRzIG9uIHByb3BzLCB3aGljaFxuLy8gICAgaXMgdXNlZCBieSBzZWxlY3RvckZhY3RvcnkgdG8gZGVjaWRlIGlmIGl0IHNob3VsZCByZWludm9rZSBvbiBwcm9wcyBjaGFuZ2VzLlxuLy8gICAgXG4vLyAgKiBPbiBmaXJzdCBjYWxsLCBoYW5kbGVzIG1hcFRvUHJvcHMgaWYgcmV0dXJucyBhbm90aGVyIGZ1bmN0aW9uLCBhbmQgdHJlYXRzIHRoYXRcbi8vICAgIG5ldyBmdW5jdGlvbiBhcyB0aGUgdHJ1ZSBtYXBUb1Byb3BzIGZvciBzdWJzZXF1ZW50IGNhbGxzLlxuLy8gICAgXG4vLyAgKiBPbiBmaXJzdCBjYWxsLCB2ZXJpZmllcyB0aGUgZmlyc3QgcmVzdWx0IGlzIGEgcGxhaW4gb2JqZWN0LCBpbiBvcmRlciB0byB3YXJuXG4vLyAgICB0aGUgZGV2ZWxvcGVyIHRoYXQgdGhlaXIgbWFwVG9Qcm9wcyBmdW5jdGlvbiBpcyBub3QgcmV0dXJuaW5nIGEgdmFsaWQgcmVzdWx0LlxuLy8gICAgXG5leHBvcnQgZnVuY3Rpb24gd3JhcE1hcFRvUHJvcHNGdW5jKG1hcFRvUHJvcHMsIG1ldGhvZE5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGluaXRQcm94eVNlbGVjdG9yKGRpc3BhdGNoLCBfcmVmKSB7XG4gICAgdmFyIGRpc3BsYXlOYW1lID0gX3JlZi5kaXNwbGF5TmFtZTtcblxuICAgIHZhciBwcm94eSA9IGZ1bmN0aW9uIG1hcFRvUHJvcHNQcm94eShzdGF0ZU9yRGlzcGF0Y2gsIG93blByb3BzKSB7XG4gICAgICByZXR1cm4gcHJveHkuZGVwZW5kc09uT3duUHJvcHMgPyBwcm94eS5tYXBUb1Byb3BzKHN0YXRlT3JEaXNwYXRjaCwgb3duUHJvcHMpIDogcHJveHkubWFwVG9Qcm9wcyhzdGF0ZU9yRGlzcGF0Y2gpO1xuICAgIH07XG5cbiAgICAvLyBhbGxvdyBkZXRlY3RGYWN0b3J5QW5kVmVyaWZ5IHRvIGdldCBvd25Qcm9wc1xuICAgIHByb3h5LmRlcGVuZHNPbk93blByb3BzID0gdHJ1ZTtcblxuICAgIHByb3h5Lm1hcFRvUHJvcHMgPSBmdW5jdGlvbiBkZXRlY3RGYWN0b3J5QW5kVmVyaWZ5KHN0YXRlT3JEaXNwYXRjaCwgb3duUHJvcHMpIHtcbiAgICAgIHByb3h5Lm1hcFRvUHJvcHMgPSBtYXBUb1Byb3BzO1xuICAgICAgcHJveHkuZGVwZW5kc09uT3duUHJvcHMgPSBnZXREZXBlbmRzT25Pd25Qcm9wcyhtYXBUb1Byb3BzKTtcbiAgICAgIHZhciBwcm9wcyA9IHByb3h5KHN0YXRlT3JEaXNwYXRjaCwgb3duUHJvcHMpO1xuXG4gICAgICBpZiAodHlwZW9mIHByb3BzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHByb3h5Lm1hcFRvUHJvcHMgPSBwcm9wcztcbiAgICAgICAgcHJveHkuZGVwZW5kc09uT3duUHJvcHMgPSBnZXREZXBlbmRzT25Pd25Qcm9wcyhwcm9wcyk7XG4gICAgICAgIHByb3BzID0gcHJveHkoc3RhdGVPckRpc3BhdGNoLCBvd25Qcm9wcyk7XG4gICAgICB9XG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB2ZXJpZnlQbGFpbk9iamVjdChwcm9wcywgZGlzcGxheU5hbWUsIG1ldGhvZE5hbWUpO1xuXG4gICAgICByZXR1cm4gcHJvcHM7XG4gICAgfTtcblxuICAgIHJldHVybiBwcm94eTtcbiAgfTtcbn0iLCJpbXBvcnQgeyBiaW5kQWN0aW9uQ3JlYXRvcnMgfSBmcm9tICdyZWR1eCc7XG5pbXBvcnQgeyB3cmFwTWFwVG9Qcm9wc0NvbnN0YW50LCB3cmFwTWFwVG9Qcm9wc0Z1bmMgfSBmcm9tICcuL3dyYXBNYXBUb1Byb3BzJztcblxuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc0Z1bmN0aW9uKG1hcERpc3BhdGNoVG9Qcm9wcykge1xuICByZXR1cm4gdHlwZW9mIG1hcERpc3BhdGNoVG9Qcm9wcyA9PT0gJ2Z1bmN0aW9uJyA/IHdyYXBNYXBUb1Byb3BzRnVuYyhtYXBEaXNwYXRjaFRvUHJvcHMsICdtYXBEaXNwYXRjaFRvUHJvcHMnKSA6IHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc01pc3NpbmcobWFwRGlzcGF0Y2hUb1Byb3BzKSB7XG4gIHJldHVybiAhbWFwRGlzcGF0Y2hUb1Byb3BzID8gd3JhcE1hcFRvUHJvcHNDb25zdGFudChmdW5jdGlvbiAoZGlzcGF0Y2gpIHtcbiAgICByZXR1cm4geyBkaXNwYXRjaDogZGlzcGF0Y2ggfTtcbiAgfSkgOiB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNPYmplY3QobWFwRGlzcGF0Y2hUb1Byb3BzKSB7XG4gIHJldHVybiBtYXBEaXNwYXRjaFRvUHJvcHMgJiYgdHlwZW9mIG1hcERpc3BhdGNoVG9Qcm9wcyA9PT0gJ29iamVjdCcgPyB3cmFwTWFwVG9Qcm9wc0NvbnN0YW50KGZ1bmN0aW9uIChkaXNwYXRjaCkge1xuICAgIHJldHVybiBiaW5kQWN0aW9uQ3JlYXRvcnMobWFwRGlzcGF0Y2hUb1Byb3BzLCBkaXNwYXRjaCk7XG4gIH0pIDogdW5kZWZpbmVkO1xufVxuXG5leHBvcnQgZGVmYXVsdCBbd2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzRnVuY3Rpb24sIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc01pc3NpbmcsIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc09iamVjdF07IiwiaW1wb3J0IHsgd3JhcE1hcFRvUHJvcHNDb25zdGFudCwgd3JhcE1hcFRvUHJvcHNGdW5jIH0gZnJvbSAnLi93cmFwTWFwVG9Qcm9wcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWFwU3RhdGVUb1Byb3BzSXNGdW5jdGlvbihtYXBTdGF0ZVRvUHJvcHMpIHtcbiAgcmV0dXJuIHR5cGVvZiBtYXBTdGF0ZVRvUHJvcHMgPT09ICdmdW5jdGlvbicgPyB3cmFwTWFwVG9Qcm9wc0Z1bmMobWFwU3RhdGVUb1Byb3BzLCAnbWFwU3RhdGVUb1Byb3BzJykgOiB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWFwU3RhdGVUb1Byb3BzSXNNaXNzaW5nKG1hcFN0YXRlVG9Qcm9wcykge1xuICByZXR1cm4gIW1hcFN0YXRlVG9Qcm9wcyA/IHdyYXBNYXBUb1Byb3BzQ29uc3RhbnQoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB7fTtcbiAgfSkgOiB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFt3aGVuTWFwU3RhdGVUb1Byb3BzSXNGdW5jdGlvbiwgd2hlbk1hcFN0YXRlVG9Qcm9wc0lzTWlzc2luZ107IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuaW1wb3J0IHZlcmlmeVBsYWluT2JqZWN0IGZyb20gJy4uL3V0aWxzL3ZlcmlmeVBsYWluT2JqZWN0JztcblxuZXhwb3J0IGZ1bmN0aW9uIGRlZmF1bHRNZXJnZVByb3BzKHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKSB7XG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgb3duUHJvcHMsIHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gd3JhcE1lcmdlUHJvcHNGdW5jKG1lcmdlUHJvcHMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGluaXRNZXJnZVByb3BzUHJveHkoZGlzcGF0Y2gsIF9yZWYpIHtcbiAgICB2YXIgZGlzcGxheU5hbWUgPSBfcmVmLmRpc3BsYXlOYW1lLFxuICAgICAgICBwdXJlID0gX3JlZi5wdXJlLFxuICAgICAgICBhcmVNZXJnZWRQcm9wc0VxdWFsID0gX3JlZi5hcmVNZXJnZWRQcm9wc0VxdWFsO1xuXG4gICAgdmFyIGhhc1J1bk9uY2UgPSBmYWxzZTtcbiAgICB2YXIgbWVyZ2VkUHJvcHMgPSB2b2lkIDA7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gbWVyZ2VQcm9wc1Byb3h5KHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKSB7XG4gICAgICB2YXIgbmV4dE1lcmdlZFByb3BzID0gbWVyZ2VQcm9wcyhzdGF0ZVByb3BzLCBkaXNwYXRjaFByb3BzLCBvd25Qcm9wcyk7XG5cbiAgICAgIGlmIChoYXNSdW5PbmNlKSB7XG4gICAgICAgIGlmICghcHVyZSB8fCAhYXJlTWVyZ2VkUHJvcHNFcXVhbChuZXh0TWVyZ2VkUHJvcHMsIG1lcmdlZFByb3BzKSkgbWVyZ2VkUHJvcHMgPSBuZXh0TWVyZ2VkUHJvcHM7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBoYXNSdW5PbmNlID0gdHJ1ZTtcbiAgICAgICAgbWVyZ2VkUHJvcHMgPSBuZXh0TWVyZ2VkUHJvcHM7XG5cbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHZlcmlmeVBsYWluT2JqZWN0KG1lcmdlZFByb3BzLCBkaXNwbGF5TmFtZSwgJ21lcmdlUHJvcHMnKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICAgIH07XG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWVyZ2VQcm9wc0lzRnVuY3Rpb24obWVyZ2VQcm9wcykge1xuICByZXR1cm4gdHlwZW9mIG1lcmdlUHJvcHMgPT09ICdmdW5jdGlvbicgPyB3cmFwTWVyZ2VQcm9wc0Z1bmMobWVyZ2VQcm9wcykgOiB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWVyZ2VQcm9wc0lzT21pdHRlZChtZXJnZVByb3BzKSB7XG4gIHJldHVybiAhbWVyZ2VQcm9wcyA/IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZGVmYXVsdE1lcmdlUHJvcHM7XG4gIH0gOiB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFt3aGVuTWVyZ2VQcm9wc0lzRnVuY3Rpb24sIHdoZW5NZXJnZVByb3BzSXNPbWl0dGVkXTsiLCJmdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMob2JqLCBrZXlzKSB7IHZhciB0YXJnZXQgPSB7fTsgZm9yICh2YXIgaSBpbiBvYmopIHsgaWYgKGtleXMuaW5kZXhPZihpKSA+PSAwKSBjb250aW51ZTsgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBpKSkgY29udGludWU7IHRhcmdldFtpXSA9IG9ialtpXTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmltcG9ydCB2ZXJpZnlTdWJzZWxlY3RvcnMgZnJvbSAnLi92ZXJpZnlTdWJzZWxlY3RvcnMnO1xuXG5leHBvcnQgZnVuY3Rpb24gaW1wdXJlRmluYWxQcm9wc1NlbGVjdG9yRmFjdG9yeShtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcywgbWVyZ2VQcm9wcywgZGlzcGF0Y2gpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGltcHVyZUZpbmFsUHJvcHNTZWxlY3RvcihzdGF0ZSwgb3duUHJvcHMpIHtcbiAgICByZXR1cm4gbWVyZ2VQcm9wcyhtYXBTdGF0ZVRvUHJvcHMoc3RhdGUsIG93blByb3BzKSwgbWFwRGlzcGF0Y2hUb1Byb3BzKGRpc3BhdGNoLCBvd25Qcm9wcyksIG93blByb3BzKTtcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHB1cmVGaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzLCBtZXJnZVByb3BzLCBkaXNwYXRjaCwgX3JlZikge1xuICB2YXIgYXJlU3RhdGVzRXF1YWwgPSBfcmVmLmFyZVN0YXRlc0VxdWFsLFxuICAgICAgYXJlT3duUHJvcHNFcXVhbCA9IF9yZWYuYXJlT3duUHJvcHNFcXVhbCxcbiAgICAgIGFyZVN0YXRlUHJvcHNFcXVhbCA9IF9yZWYuYXJlU3RhdGVQcm9wc0VxdWFsO1xuXG4gIHZhciBoYXNSdW5BdExlYXN0T25jZSA9IGZhbHNlO1xuICB2YXIgc3RhdGUgPSB2b2lkIDA7XG4gIHZhciBvd25Qcm9wcyA9IHZvaWQgMDtcbiAgdmFyIHN0YXRlUHJvcHMgPSB2b2lkIDA7XG4gIHZhciBkaXNwYXRjaFByb3BzID0gdm9pZCAwO1xuICB2YXIgbWVyZ2VkUHJvcHMgPSB2b2lkIDA7XG5cbiAgZnVuY3Rpb24gaGFuZGxlRmlyc3RDYWxsKGZpcnN0U3RhdGUsIGZpcnN0T3duUHJvcHMpIHtcbiAgICBzdGF0ZSA9IGZpcnN0U3RhdGU7XG4gICAgb3duUHJvcHMgPSBmaXJzdE93blByb3BzO1xuICAgIHN0YXRlUHJvcHMgPSBtYXBTdGF0ZVRvUHJvcHMoc3RhdGUsIG93blByb3BzKTtcbiAgICBkaXNwYXRjaFByb3BzID0gbWFwRGlzcGF0Y2hUb1Byb3BzKGRpc3BhdGNoLCBvd25Qcm9wcyk7XG4gICAgbWVyZ2VkUHJvcHMgPSBtZXJnZVByb3BzKHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKTtcbiAgICBoYXNSdW5BdExlYXN0T25jZSA9IHRydWU7XG4gICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlTmV3UHJvcHNBbmROZXdTdGF0ZSgpIHtcbiAgICBzdGF0ZVByb3BzID0gbWFwU3RhdGVUb1Byb3BzKHN0YXRlLCBvd25Qcm9wcyk7XG5cbiAgICBpZiAobWFwRGlzcGF0Y2hUb1Byb3BzLmRlcGVuZHNPbk93blByb3BzKSBkaXNwYXRjaFByb3BzID0gbWFwRGlzcGF0Y2hUb1Byb3BzKGRpc3BhdGNoLCBvd25Qcm9wcyk7XG5cbiAgICBtZXJnZWRQcm9wcyA9IG1lcmdlUHJvcHMoc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcywgb3duUHJvcHMpO1xuICAgIHJldHVybiBtZXJnZWRQcm9wcztcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZU5ld1Byb3BzKCkge1xuICAgIGlmIChtYXBTdGF0ZVRvUHJvcHMuZGVwZW5kc09uT3duUHJvcHMpIHN0YXRlUHJvcHMgPSBtYXBTdGF0ZVRvUHJvcHMoc3RhdGUsIG93blByb3BzKTtcblxuICAgIGlmIChtYXBEaXNwYXRjaFRvUHJvcHMuZGVwZW5kc09uT3duUHJvcHMpIGRpc3BhdGNoUHJvcHMgPSBtYXBEaXNwYXRjaFRvUHJvcHMoZGlzcGF0Y2gsIG93blByb3BzKTtcblxuICAgIG1lcmdlZFByb3BzID0gbWVyZ2VQcm9wcyhzdGF0ZVByb3BzLCBkaXNwYXRjaFByb3BzLCBvd25Qcm9wcyk7XG4gICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlTmV3U3RhdGUoKSB7XG4gICAgdmFyIG5leHRTdGF0ZVByb3BzID0gbWFwU3RhdGVUb1Byb3BzKHN0YXRlLCBvd25Qcm9wcyk7XG4gICAgdmFyIHN0YXRlUHJvcHNDaGFuZ2VkID0gIWFyZVN0YXRlUHJvcHNFcXVhbChuZXh0U3RhdGVQcm9wcywgc3RhdGVQcm9wcyk7XG4gICAgc3RhdGVQcm9wcyA9IG5leHRTdGF0ZVByb3BzO1xuXG4gICAgaWYgKHN0YXRlUHJvcHNDaGFuZ2VkKSBtZXJnZWRQcm9wcyA9IG1lcmdlUHJvcHMoc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcywgb3duUHJvcHMpO1xuXG4gICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlU3Vic2VxdWVudENhbGxzKG5leHRTdGF0ZSwgbmV4dE93blByb3BzKSB7XG4gICAgdmFyIHByb3BzQ2hhbmdlZCA9ICFhcmVPd25Qcm9wc0VxdWFsKG5leHRPd25Qcm9wcywgb3duUHJvcHMpO1xuICAgIHZhciBzdGF0ZUNoYW5nZWQgPSAhYXJlU3RhdGVzRXF1YWwobmV4dFN0YXRlLCBzdGF0ZSk7XG4gICAgc3RhdGUgPSBuZXh0U3RhdGU7XG4gICAgb3duUHJvcHMgPSBuZXh0T3duUHJvcHM7XG5cbiAgICBpZiAocHJvcHNDaGFuZ2VkICYmIHN0YXRlQ2hhbmdlZCkgcmV0dXJuIGhhbmRsZU5ld1Byb3BzQW5kTmV3U3RhdGUoKTtcbiAgICBpZiAocHJvcHNDaGFuZ2VkKSByZXR1cm4gaGFuZGxlTmV3UHJvcHMoKTtcbiAgICBpZiAoc3RhdGVDaGFuZ2VkKSByZXR1cm4gaGFuZGxlTmV3U3RhdGUoKTtcbiAgICByZXR1cm4gbWVyZ2VkUHJvcHM7XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gcHVyZUZpbmFsUHJvcHNTZWxlY3RvcihuZXh0U3RhdGUsIG5leHRPd25Qcm9wcykge1xuICAgIHJldHVybiBoYXNSdW5BdExlYXN0T25jZSA/IGhhbmRsZVN1YnNlcXVlbnRDYWxscyhuZXh0U3RhdGUsIG5leHRPd25Qcm9wcykgOiBoYW5kbGVGaXJzdENhbGwobmV4dFN0YXRlLCBuZXh0T3duUHJvcHMpO1xuICB9O1xufVxuXG4vLyBUT0RPOiBBZGQgbW9yZSBjb21tZW50c1xuXG4vLyBJZiBwdXJlIGlzIHRydWUsIHRoZSBzZWxlY3RvciByZXR1cm5lZCBieSBzZWxlY3RvckZhY3Rvcnkgd2lsbCBtZW1vaXplIGl0cyByZXN1bHRzLFxuLy8gYWxsb3dpbmcgY29ubmVjdEFkdmFuY2VkJ3Mgc2hvdWxkQ29tcG9uZW50VXBkYXRlIHRvIHJldHVybiBmYWxzZSBpZiBmaW5hbFxuLy8gcHJvcHMgaGF2ZSBub3QgY2hhbmdlZC4gSWYgZmFsc2UsIHRoZSBzZWxlY3RvciB3aWxsIGFsd2F5cyByZXR1cm4gYSBuZXdcbi8vIG9iamVjdCBhbmQgc2hvdWxkQ29tcG9uZW50VXBkYXRlIHdpbGwgYWx3YXlzIHJldHVybiB0cnVlLlxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5KGRpc3BhdGNoLCBfcmVmMikge1xuICB2YXIgaW5pdE1hcFN0YXRlVG9Qcm9wcyA9IF9yZWYyLmluaXRNYXBTdGF0ZVRvUHJvcHMsXG4gICAgICBpbml0TWFwRGlzcGF0Y2hUb1Byb3BzID0gX3JlZjIuaW5pdE1hcERpc3BhdGNoVG9Qcm9wcyxcbiAgICAgIGluaXRNZXJnZVByb3BzID0gX3JlZjIuaW5pdE1lcmdlUHJvcHMsXG4gICAgICBvcHRpb25zID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZWYyLCBbJ2luaXRNYXBTdGF0ZVRvUHJvcHMnLCAnaW5pdE1hcERpc3BhdGNoVG9Qcm9wcycsICdpbml0TWVyZ2VQcm9wcyddKTtcblxuICB2YXIgbWFwU3RhdGVUb1Byb3BzID0gaW5pdE1hcFN0YXRlVG9Qcm9wcyhkaXNwYXRjaCwgb3B0aW9ucyk7XG4gIHZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSBpbml0TWFwRGlzcGF0Y2hUb1Byb3BzKGRpc3BhdGNoLCBvcHRpb25zKTtcbiAgdmFyIG1lcmdlUHJvcHMgPSBpbml0TWVyZ2VQcm9wcyhkaXNwYXRjaCwgb3B0aW9ucyk7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICB2ZXJpZnlTdWJzZWxlY3RvcnMobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMsIG1lcmdlUHJvcHMsIG9wdGlvbnMuZGlzcGxheU5hbWUpO1xuICB9XG5cbiAgdmFyIHNlbGVjdG9yRmFjdG9yeSA9IG9wdGlvbnMucHVyZSA/IHB1cmVGaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5IDogaW1wdXJlRmluYWxQcm9wc1NlbGVjdG9yRmFjdG9yeTtcblxuICByZXR1cm4gc2VsZWN0b3JGYWN0b3J5KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzLCBtZXJnZVByb3BzLCBkaXNwYXRjaCwgb3B0aW9ucyk7XG59IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKG9iaiwga2V5cykgeyB2YXIgdGFyZ2V0ID0ge307IGZvciAodmFyIGkgaW4gb2JqKSB7IGlmIChrZXlzLmluZGV4T2YoaSkgPj0gMCkgY29udGludWU7IGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgaSkpIGNvbnRpbnVlOyB0YXJnZXRbaV0gPSBvYmpbaV07IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5pbXBvcnQgY29ubmVjdEFkdmFuY2VkIGZyb20gJy4uL2NvbXBvbmVudHMvY29ubmVjdEFkdmFuY2VkJztcbmltcG9ydCBzaGFsbG93RXF1YWwgZnJvbSAnLi4vdXRpbHMvc2hhbGxvd0VxdWFsJztcbmltcG9ydCBkZWZhdWx0TWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzIGZyb20gJy4vbWFwRGlzcGF0Y2hUb1Byb3BzJztcbmltcG9ydCBkZWZhdWx0TWFwU3RhdGVUb1Byb3BzRmFjdG9yaWVzIGZyb20gJy4vbWFwU3RhdGVUb1Byb3BzJztcbmltcG9ydCBkZWZhdWx0TWVyZ2VQcm9wc0ZhY3RvcmllcyBmcm9tICcuL21lcmdlUHJvcHMnO1xuaW1wb3J0IGRlZmF1bHRTZWxlY3RvckZhY3RvcnkgZnJvbSAnLi9zZWxlY3RvckZhY3RvcnknO1xuXG4vKlxuICBjb25uZWN0IGlzIGEgZmFjYWRlIG92ZXIgY29ubmVjdEFkdmFuY2VkLiBJdCB0dXJucyBpdHMgYXJncyBpbnRvIGEgY29tcGF0aWJsZVxuICBzZWxlY3RvckZhY3RvcnksIHdoaWNoIGhhcyB0aGUgc2lnbmF0dXJlOlxuXG4gICAgKGRpc3BhdGNoLCBvcHRpb25zKSA9PiAobmV4dFN0YXRlLCBuZXh0T3duUHJvcHMpID0+IG5leHRGaW5hbFByb3BzXG4gIFxuICBjb25uZWN0IHBhc3NlcyBpdHMgYXJncyB0byBjb25uZWN0QWR2YW5jZWQgYXMgb3B0aW9ucywgd2hpY2ggd2lsbCBpbiB0dXJuIHBhc3MgdGhlbSB0b1xuICBzZWxlY3RvckZhY3RvcnkgZWFjaCB0aW1lIGEgQ29ubmVjdCBjb21wb25lbnQgaW5zdGFuY2UgaXMgaW5zdGFudGlhdGVkIG9yIGhvdCByZWxvYWRlZC5cblxuICBzZWxlY3RvckZhY3RvcnkgcmV0dXJucyBhIGZpbmFsIHByb3BzIHNlbGVjdG9yIGZyb20gaXRzIG1hcFN0YXRlVG9Qcm9wcyxcbiAgbWFwU3RhdGVUb1Byb3BzRmFjdG9yaWVzLCBtYXBEaXNwYXRjaFRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcmllcywgbWVyZ2VQcm9wcyxcbiAgbWVyZ2VQcm9wc0ZhY3RvcmllcywgYW5kIHB1cmUgYXJncy5cblxuICBUaGUgcmVzdWx0aW5nIGZpbmFsIHByb3BzIHNlbGVjdG9yIGlzIGNhbGxlZCBieSB0aGUgQ29ubmVjdCBjb21wb25lbnQgaW5zdGFuY2Ugd2hlbmV2ZXJcbiAgaXQgcmVjZWl2ZXMgbmV3IHByb3BzIG9yIHN0b3JlIHN0YXRlLlxuICovXG5cbmZ1bmN0aW9uIG1hdGNoKGFyZywgZmFjdG9yaWVzLCBuYW1lKSB7XG4gIGZvciAodmFyIGkgPSBmYWN0b3JpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICB2YXIgcmVzdWx0ID0gZmFjdG9yaWVzW2ldKGFyZyk7XG4gICAgaWYgKHJlc3VsdCkgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoZGlzcGF0Y2gsIG9wdGlvbnMpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgdmFsdWUgb2YgdHlwZSAnICsgdHlwZW9mIGFyZyArICcgZm9yICcgKyBuYW1lICsgJyBhcmd1bWVudCB3aGVuIGNvbm5lY3RpbmcgY29tcG9uZW50ICcgKyBvcHRpb25zLndyYXBwZWRDb21wb25lbnROYW1lICsgJy4nKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gc3RyaWN0RXF1YWwoYSwgYikge1xuICByZXR1cm4gYSA9PT0gYjtcbn1cblxuLy8gY3JlYXRlQ29ubmVjdCB3aXRoIGRlZmF1bHQgYXJncyBidWlsZHMgdGhlICdvZmZpY2lhbCcgY29ubmVjdCBiZWhhdmlvci4gQ2FsbGluZyBpdCB3aXRoXG4vLyBkaWZmZXJlbnQgb3B0aW9ucyBvcGVucyB1cCBzb21lIHRlc3RpbmcgYW5kIGV4dGVuc2liaWxpdHkgc2NlbmFyaW9zXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29ubmVjdCgpIHtcbiAgdmFyIF9yZWYgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9LFxuICAgICAgX3JlZiRjb25uZWN0SE9DID0gX3JlZi5jb25uZWN0SE9DLFxuICAgICAgY29ubmVjdEhPQyA9IF9yZWYkY29ubmVjdEhPQyA9PT0gdW5kZWZpbmVkID8gY29ubmVjdEFkdmFuY2VkIDogX3JlZiRjb25uZWN0SE9DLFxuICAgICAgX3JlZiRtYXBTdGF0ZVRvUHJvcHNGID0gX3JlZi5tYXBTdGF0ZVRvUHJvcHNGYWN0b3JpZXMsXG4gICAgICBtYXBTdGF0ZVRvUHJvcHNGYWN0b3JpZXMgPSBfcmVmJG1hcFN0YXRlVG9Qcm9wc0YgPT09IHVuZGVmaW5lZCA/IGRlZmF1bHRNYXBTdGF0ZVRvUHJvcHNGYWN0b3JpZXMgOiBfcmVmJG1hcFN0YXRlVG9Qcm9wc0YsXG4gICAgICBfcmVmJG1hcERpc3BhdGNoVG9Qcm8gPSBfcmVmLm1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcmllcyxcbiAgICAgIG1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcmllcyA9IF9yZWYkbWFwRGlzcGF0Y2hUb1BybyA9PT0gdW5kZWZpbmVkID8gZGVmYXVsdE1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcmllcyA6IF9yZWYkbWFwRGlzcGF0Y2hUb1BybyxcbiAgICAgIF9yZWYkbWVyZ2VQcm9wc0ZhY3RvciA9IF9yZWYubWVyZ2VQcm9wc0ZhY3RvcmllcyxcbiAgICAgIG1lcmdlUHJvcHNGYWN0b3JpZXMgPSBfcmVmJG1lcmdlUHJvcHNGYWN0b3IgPT09IHVuZGVmaW5lZCA/IGRlZmF1bHRNZXJnZVByb3BzRmFjdG9yaWVzIDogX3JlZiRtZXJnZVByb3BzRmFjdG9yLFxuICAgICAgX3JlZiRzZWxlY3RvckZhY3RvcnkgPSBfcmVmLnNlbGVjdG9yRmFjdG9yeSxcbiAgICAgIHNlbGVjdG9yRmFjdG9yeSA9IF9yZWYkc2VsZWN0b3JGYWN0b3J5ID09PSB1bmRlZmluZWQgPyBkZWZhdWx0U2VsZWN0b3JGYWN0b3J5IDogX3JlZiRzZWxlY3RvckZhY3Rvcnk7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMsIG1lcmdlUHJvcHMpIHtcbiAgICB2YXIgX3JlZjIgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IHt9LFxuICAgICAgICBfcmVmMiRwdXJlID0gX3JlZjIucHVyZSxcbiAgICAgICAgcHVyZSA9IF9yZWYyJHB1cmUgPT09IHVuZGVmaW5lZCA/IHRydWUgOiBfcmVmMiRwdXJlLFxuICAgICAgICBfcmVmMiRhcmVTdGF0ZXNFcXVhbCA9IF9yZWYyLmFyZVN0YXRlc0VxdWFsLFxuICAgICAgICBhcmVTdGF0ZXNFcXVhbCA9IF9yZWYyJGFyZVN0YXRlc0VxdWFsID09PSB1bmRlZmluZWQgPyBzdHJpY3RFcXVhbCA6IF9yZWYyJGFyZVN0YXRlc0VxdWFsLFxuICAgICAgICBfcmVmMiRhcmVPd25Qcm9wc0VxdWEgPSBfcmVmMi5hcmVPd25Qcm9wc0VxdWFsLFxuICAgICAgICBhcmVPd25Qcm9wc0VxdWFsID0gX3JlZjIkYXJlT3duUHJvcHNFcXVhID09PSB1bmRlZmluZWQgPyBzaGFsbG93RXF1YWwgOiBfcmVmMiRhcmVPd25Qcm9wc0VxdWEsXG4gICAgICAgIF9yZWYyJGFyZVN0YXRlUHJvcHNFcSA9IF9yZWYyLmFyZVN0YXRlUHJvcHNFcXVhbCxcbiAgICAgICAgYXJlU3RhdGVQcm9wc0VxdWFsID0gX3JlZjIkYXJlU3RhdGVQcm9wc0VxID09PSB1bmRlZmluZWQgPyBzaGFsbG93RXF1YWwgOiBfcmVmMiRhcmVTdGF0ZVByb3BzRXEsXG4gICAgICAgIF9yZWYyJGFyZU1lcmdlZFByb3BzRSA9IF9yZWYyLmFyZU1lcmdlZFByb3BzRXF1YWwsXG4gICAgICAgIGFyZU1lcmdlZFByb3BzRXF1YWwgPSBfcmVmMiRhcmVNZXJnZWRQcm9wc0UgPT09IHVuZGVmaW5lZCA/IHNoYWxsb3dFcXVhbCA6IF9yZWYyJGFyZU1lcmdlZFByb3BzRSxcbiAgICAgICAgZXh0cmFPcHRpb25zID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZWYyLCBbJ3B1cmUnLCAnYXJlU3RhdGVzRXF1YWwnLCAnYXJlT3duUHJvcHNFcXVhbCcsICdhcmVTdGF0ZVByb3BzRXF1YWwnLCAnYXJlTWVyZ2VkUHJvcHNFcXVhbCddKTtcblxuICAgIHZhciBpbml0TWFwU3RhdGVUb1Byb3BzID0gbWF0Y2gobWFwU3RhdGVUb1Byb3BzLCBtYXBTdGF0ZVRvUHJvcHNGYWN0b3JpZXMsICdtYXBTdGF0ZVRvUHJvcHMnKTtcbiAgICB2YXIgaW5pdE1hcERpc3BhdGNoVG9Qcm9wcyA9IG1hdGNoKG1hcERpc3BhdGNoVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzLCAnbWFwRGlzcGF0Y2hUb1Byb3BzJyk7XG4gICAgdmFyIGluaXRNZXJnZVByb3BzID0gbWF0Y2gobWVyZ2VQcm9wcywgbWVyZ2VQcm9wc0ZhY3RvcmllcywgJ21lcmdlUHJvcHMnKTtcblxuICAgIHJldHVybiBjb25uZWN0SE9DKHNlbGVjdG9yRmFjdG9yeSwgX2V4dGVuZHMoe1xuICAgICAgLy8gdXNlZCBpbiBlcnJvciBtZXNzYWdlc1xuICAgICAgbWV0aG9kTmFtZTogJ2Nvbm5lY3QnLFxuXG4gICAgICAvLyB1c2VkIHRvIGNvbXB1dGUgQ29ubmVjdCdzIGRpc3BsYXlOYW1lIGZyb20gdGhlIHdyYXBwZWQgY29tcG9uZW50J3MgZGlzcGxheU5hbWUuXG4gICAgICBnZXREaXNwbGF5TmFtZTogZnVuY3Rpb24gZ2V0RGlzcGxheU5hbWUobmFtZSkge1xuICAgICAgICByZXR1cm4gJ0Nvbm5lY3QoJyArIG5hbWUgKyAnKSc7XG4gICAgICB9LFxuXG4gICAgICAvLyBpZiBtYXBTdGF0ZVRvUHJvcHMgaXMgZmFsc3ksIHRoZSBDb25uZWN0IGNvbXBvbmVudCBkb2Vzbid0IHN1YnNjcmliZSB0byBzdG9yZSBzdGF0ZSBjaGFuZ2VzXG4gICAgICBzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXM6IEJvb2xlYW4obWFwU3RhdGVUb1Byb3BzKSxcblxuICAgICAgLy8gcGFzc2VkIHRocm91Z2ggdG8gc2VsZWN0b3JGYWN0b3J5XG4gICAgICBpbml0TWFwU3RhdGVUb1Byb3BzOiBpbml0TWFwU3RhdGVUb1Byb3BzLFxuICAgICAgaW5pdE1hcERpc3BhdGNoVG9Qcm9wczogaW5pdE1hcERpc3BhdGNoVG9Qcm9wcyxcbiAgICAgIGluaXRNZXJnZVByb3BzOiBpbml0TWVyZ2VQcm9wcyxcbiAgICAgIHB1cmU6IHB1cmUsXG4gICAgICBhcmVTdGF0ZXNFcXVhbDogYXJlU3RhdGVzRXF1YWwsXG4gICAgICBhcmVPd25Qcm9wc0VxdWFsOiBhcmVPd25Qcm9wc0VxdWFsLFxuICAgICAgYXJlU3RhdGVQcm9wc0VxdWFsOiBhcmVTdGF0ZVByb3BzRXF1YWwsXG4gICAgICBhcmVNZXJnZWRQcm9wc0VxdWFsOiBhcmVNZXJnZWRQcm9wc0VxdWFsXG5cbiAgICB9LCBleHRyYU9wdGlvbnMpKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlQ29ubmVjdCgpOyIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFVzZSBpbnZhcmlhbnQoKSB0byBhc3NlcnQgc3RhdGUgd2hpY2ggeW91ciBwcm9ncmFtIGFzc3VtZXMgdG8gYmUgdHJ1ZS5cbiAqXG4gKiBQcm92aWRlIHNwcmludGYtc3R5bGUgZm9ybWF0IChvbmx5ICVzIGlzIHN1cHBvcnRlZCkgYW5kIGFyZ3VtZW50c1xuICogdG8gcHJvdmlkZSBpbmZvcm1hdGlvbiBhYm91dCB3aGF0IGJyb2tlIGFuZCB3aGF0IHlvdSB3ZXJlXG4gKiBleHBlY3RpbmcuXG4gKlxuICogVGhlIGludmFyaWFudCBtZXNzYWdlIHdpbGwgYmUgc3RyaXBwZWQgaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBpbnZhcmlhbnRcbiAqIHdpbGwgcmVtYWluIHRvIGVuc3VyZSBsb2dpYyBkb2VzIG5vdCBkaWZmZXIgaW4gcHJvZHVjdGlvbi5cbiAqL1xuXG52YXIgaW52YXJpYW50ID0gZnVuY3Rpb24oY29uZGl0aW9uLCBmb3JtYXQsIGEsIGIsIGMsIGQsIGUsIGYpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignaW52YXJpYW50IHJlcXVpcmVzIGFuIGVycm9yIG1lc3NhZ2UgYXJndW1lbnQnKTtcbiAgICB9XG4gIH1cblxuICBpZiAoIWNvbmRpdGlvbikge1xuICAgIHZhciBlcnJvcjtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKFxuICAgICAgICAnTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgJyArXG4gICAgICAgICdmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLidcbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhcmdzID0gW2EsIGIsIGMsIGQsIGUsIGZdO1xuICAgICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKFxuICAgICAgICBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24oKSB7IHJldHVybiBhcmdzW2FyZ0luZGV4KytdOyB9KVxuICAgICAgKTtcbiAgICAgIGVycm9yLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgfVxuXG4gICAgZXJyb3IuZnJhbWVzVG9Qb3AgPSAxOyAvLyB3ZSBkb24ndCBjYXJlIGFib3V0IGludmFyaWFudCdzIG93biBmcmFtZVxuICAgIHRocm93IGVycm9yO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGludmFyaWFudDtcbiIsInZhciBnO1xuXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxuZyA9IChmdW5jdGlvbigpIHtcblx0cmV0dXJuIHRoaXM7XG59KSgpO1xuXG50cnkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcblx0ZyA9IGcgfHwgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpIHx8ICgxLCBldmFsKShcInRoaXNcIik7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG5mdW5jdGlvbiBtYWtlRW1wdHlGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gYXJnO1xuICB9O1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWNjZXB0cyBhbmQgZGlzY2FyZHMgaW5wdXRzOyBpdCBoYXMgbm8gc2lkZSBlZmZlY3RzLiBUaGlzIGlzXG4gKiBwcmltYXJpbHkgdXNlZnVsIGlkaW9tYXRpY2FsbHkgZm9yIG92ZXJyaWRhYmxlIGZ1bmN0aW9uIGVuZHBvaW50cyB3aGljaFxuICogYWx3YXlzIG5lZWQgdG8gYmUgY2FsbGFibGUsIHNpbmNlIEpTIGxhY2tzIGEgbnVsbC1jYWxsIGlkaW9tIGFsYSBDb2NvYS5cbiAqL1xudmFyIGVtcHR5RnVuY3Rpb24gPSBmdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge307XG5cbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnMgPSBtYWtlRW1wdHlGdW5jdGlvbjtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNGYWxzZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKGZhbHNlKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUcnVlID0gbWFrZUVtcHR5RnVuY3Rpb24odHJ1ZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zTnVsbCA9IG1ha2VFbXB0eUZ1bmN0aW9uKG51bGwpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc1RoaXMgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzO1xufTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNBcmd1bWVudCA9IGZ1bmN0aW9uIChhcmcpIHtcbiAgcmV0dXJuIGFyZztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlGdW5jdGlvbjsiLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogVXNlIGludmFyaWFudCgpIHRvIGFzc2VydCBzdGF0ZSB3aGljaCB5b3VyIHByb2dyYW0gYXNzdW1lcyB0byBiZSB0cnVlLlxuICpcbiAqIFByb3ZpZGUgc3ByaW50Zi1zdHlsZSBmb3JtYXQgKG9ubHkgJXMgaXMgc3VwcG9ydGVkKSBhbmQgYXJndW1lbnRzXG4gKiB0byBwcm92aWRlIGluZm9ybWF0aW9uIGFib3V0IHdoYXQgYnJva2UgYW5kIHdoYXQgeW91IHdlcmVcbiAqIGV4cGVjdGluZy5cbiAqXG4gKiBUaGUgaW52YXJpYW50IG1lc3NhZ2Ugd2lsbCBiZSBzdHJpcHBlZCBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGludmFyaWFudFxuICogd2lsbCByZW1haW4gdG8gZW5zdXJlIGxvZ2ljIGRvZXMgbm90IGRpZmZlciBpbiBwcm9kdWN0aW9uLlxuICovXG5cbnZhciB2YWxpZGF0ZUZvcm1hdCA9IGZ1bmN0aW9uIHZhbGlkYXRlRm9ybWF0KGZvcm1hdCkge307XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhbGlkYXRlRm9ybWF0ID0gZnVuY3Rpb24gdmFsaWRhdGVGb3JtYXQoZm9ybWF0KSB7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFyaWFudCByZXF1aXJlcyBhbiBlcnJvciBtZXNzYWdlIGFyZ3VtZW50Jyk7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBpbnZhcmlhbnQoY29uZGl0aW9uLCBmb3JtYXQsIGEsIGIsIGMsIGQsIGUsIGYpIHtcbiAgdmFsaWRhdGVGb3JtYXQoZm9ybWF0KTtcblxuICBpZiAoIWNvbmRpdGlvbikge1xuICAgIHZhciBlcnJvcjtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKCdNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCAnICsgJ2ZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhcmdzID0gW2EsIGIsIGMsIGQsIGUsIGZdO1xuICAgICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgICAgfSkpO1xuICAgICAgZXJyb3IubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB9XG5cbiAgICBlcnJvci5mcmFtZXNUb1BvcCA9IDE7IC8vIHdlIGRvbid0IGNhcmUgYWJvdXQgaW52YXJpYW50J3Mgb3duIGZyYW1lXG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnZhcmlhbnQ7IiwiaW1wb3J0IGlzUGxhaW5PYmplY3QgZnJvbSAnbG9kYXNoLWVzL2lzUGxhaW5PYmplY3QnO1xuaW1wb3J0ICQkb2JzZXJ2YWJsZSBmcm9tICdzeW1ib2wtb2JzZXJ2YWJsZSc7XG5cbi8qKlxuICogVGhlc2UgYXJlIHByaXZhdGUgYWN0aW9uIHR5cGVzIHJlc2VydmVkIGJ5IFJlZHV4LlxuICogRm9yIGFueSB1bmtub3duIGFjdGlvbnMsIHlvdSBtdXN0IHJldHVybiB0aGUgY3VycmVudCBzdGF0ZS5cbiAqIElmIHRoZSBjdXJyZW50IHN0YXRlIGlzIHVuZGVmaW5lZCwgeW91IG11c3QgcmV0dXJuIHRoZSBpbml0aWFsIHN0YXRlLlxuICogRG8gbm90IHJlZmVyZW5jZSB0aGVzZSBhY3Rpb24gdHlwZXMgZGlyZWN0bHkgaW4geW91ciBjb2RlLlxuICovXG5leHBvcnQgdmFyIEFjdGlvblR5cGVzID0ge1xuICBJTklUOiAnQEByZWR1eC9JTklUJ1xuXG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgUmVkdXggc3RvcmUgdGhhdCBob2xkcyB0aGUgc3RhdGUgdHJlZS5cbiAgICogVGhlIG9ubHkgd2F5IHRvIGNoYW5nZSB0aGUgZGF0YSBpbiB0aGUgc3RvcmUgaXMgdG8gY2FsbCBgZGlzcGF0Y2goKWAgb24gaXQuXG4gICAqXG4gICAqIFRoZXJlIHNob3VsZCBvbmx5IGJlIGEgc2luZ2xlIHN0b3JlIGluIHlvdXIgYXBwLiBUbyBzcGVjaWZ5IGhvdyBkaWZmZXJlbnRcbiAgICogcGFydHMgb2YgdGhlIHN0YXRlIHRyZWUgcmVzcG9uZCB0byBhY3Rpb25zLCB5b3UgbWF5IGNvbWJpbmUgc2V2ZXJhbCByZWR1Y2Vyc1xuICAgKiBpbnRvIGEgc2luZ2xlIHJlZHVjZXIgZnVuY3Rpb24gYnkgdXNpbmcgYGNvbWJpbmVSZWR1Y2Vyc2AuXG4gICAqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IHJlZHVjZXIgQSBmdW5jdGlvbiB0aGF0IHJldHVybnMgdGhlIG5leHQgc3RhdGUgdHJlZSwgZ2l2ZW5cbiAgICogdGhlIGN1cnJlbnQgc3RhdGUgdHJlZSBhbmQgdGhlIGFjdGlvbiB0byBoYW5kbGUuXG4gICAqXG4gICAqIEBwYXJhbSB7YW55fSBbcHJlbG9hZGVkU3RhdGVdIFRoZSBpbml0aWFsIHN0YXRlLiBZb3UgbWF5IG9wdGlvbmFsbHkgc3BlY2lmeSBpdFxuICAgKiB0byBoeWRyYXRlIHRoZSBzdGF0ZSBmcm9tIHRoZSBzZXJ2ZXIgaW4gdW5pdmVyc2FsIGFwcHMsIG9yIHRvIHJlc3RvcmUgYVxuICAgKiBwcmV2aW91c2x5IHNlcmlhbGl6ZWQgdXNlciBzZXNzaW9uLlxuICAgKiBJZiB5b3UgdXNlIGBjb21iaW5lUmVkdWNlcnNgIHRvIHByb2R1Y2UgdGhlIHJvb3QgcmVkdWNlciBmdW5jdGlvbiwgdGhpcyBtdXN0IGJlXG4gICAqIGFuIG9iamVjdCB3aXRoIHRoZSBzYW1lIHNoYXBlIGFzIGBjb21iaW5lUmVkdWNlcnNgIGtleXMuXG4gICAqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtlbmhhbmNlcl0gVGhlIHN0b3JlIGVuaGFuY2VyLiBZb3UgbWF5IG9wdGlvbmFsbHkgc3BlY2lmeSBpdFxuICAgKiB0byBlbmhhbmNlIHRoZSBzdG9yZSB3aXRoIHRoaXJkLXBhcnR5IGNhcGFiaWxpdGllcyBzdWNoIGFzIG1pZGRsZXdhcmUsXG4gICAqIHRpbWUgdHJhdmVsLCBwZXJzaXN0ZW5jZSwgZXRjLiBUaGUgb25seSBzdG9yZSBlbmhhbmNlciB0aGF0IHNoaXBzIHdpdGggUmVkdXhcbiAgICogaXMgYGFwcGx5TWlkZGxld2FyZSgpYC5cbiAgICpcbiAgICogQHJldHVybnMge1N0b3JlfSBBIFJlZHV4IHN0b3JlIHRoYXQgbGV0cyB5b3UgcmVhZCB0aGUgc3RhdGUsIGRpc3BhdGNoIGFjdGlvbnNcbiAgICogYW5kIHN1YnNjcmliZSB0byBjaGFuZ2VzLlxuICAgKi9cbn07ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlU3RvcmUocmVkdWNlciwgcHJlbG9hZGVkU3RhdGUsIGVuaGFuY2VyKSB7XG4gIHZhciBfcmVmMjtcblxuICBpZiAodHlwZW9mIHByZWxvYWRlZFN0YXRlID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBlbmhhbmNlciA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBlbmhhbmNlciA9IHByZWxvYWRlZFN0YXRlO1xuICAgIHByZWxvYWRlZFN0YXRlID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBlbmhhbmNlciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBpZiAodHlwZW9mIGVuaGFuY2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIHRoZSBlbmhhbmNlciB0byBiZSBhIGZ1bmN0aW9uLicpO1xuICAgIH1cblxuICAgIHJldHVybiBlbmhhbmNlcihjcmVhdGVTdG9yZSkocmVkdWNlciwgcHJlbG9hZGVkU3RhdGUpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiByZWR1Y2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCB0aGUgcmVkdWNlciB0byBiZSBhIGZ1bmN0aW9uLicpO1xuICB9XG5cbiAgdmFyIGN1cnJlbnRSZWR1Y2VyID0gcmVkdWNlcjtcbiAgdmFyIGN1cnJlbnRTdGF0ZSA9IHByZWxvYWRlZFN0YXRlO1xuICB2YXIgY3VycmVudExpc3RlbmVycyA9IFtdO1xuICB2YXIgbmV4dExpc3RlbmVycyA9IGN1cnJlbnRMaXN0ZW5lcnM7XG4gIHZhciBpc0Rpc3BhdGNoaW5nID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gZW5zdXJlQ2FuTXV0YXRlTmV4dExpc3RlbmVycygpIHtcbiAgICBpZiAobmV4dExpc3RlbmVycyA9PT0gY3VycmVudExpc3RlbmVycykge1xuICAgICAgbmV4dExpc3RlbmVycyA9IGN1cnJlbnRMaXN0ZW5lcnMuc2xpY2UoKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUmVhZHMgdGhlIHN0YXRlIHRyZWUgbWFuYWdlZCBieSB0aGUgc3RvcmUuXG4gICAqXG4gICAqIEByZXR1cm5zIHthbnl9IFRoZSBjdXJyZW50IHN0YXRlIHRyZWUgb2YgeW91ciBhcHBsaWNhdGlvbi5cbiAgICovXG4gIGZ1bmN0aW9uIGdldFN0YXRlKCkge1xuICAgIHJldHVybiBjdXJyZW50U3RhdGU7XG4gIH1cblxuICAvKipcbiAgICogQWRkcyBhIGNoYW5nZSBsaXN0ZW5lci4gSXQgd2lsbCBiZSBjYWxsZWQgYW55IHRpbWUgYW4gYWN0aW9uIGlzIGRpc3BhdGNoZWQsXG4gICAqIGFuZCBzb21lIHBhcnQgb2YgdGhlIHN0YXRlIHRyZWUgbWF5IHBvdGVudGlhbGx5IGhhdmUgY2hhbmdlZC4gWW91IG1heSB0aGVuXG4gICAqIGNhbGwgYGdldFN0YXRlKClgIHRvIHJlYWQgdGhlIGN1cnJlbnQgc3RhdGUgdHJlZSBpbnNpZGUgdGhlIGNhbGxiYWNrLlxuICAgKlxuICAgKiBZb3UgbWF5IGNhbGwgYGRpc3BhdGNoKClgIGZyb20gYSBjaGFuZ2UgbGlzdGVuZXIsIHdpdGggdGhlIGZvbGxvd2luZ1xuICAgKiBjYXZlYXRzOlxuICAgKlxuICAgKiAxLiBUaGUgc3Vic2NyaXB0aW9ucyBhcmUgc25hcHNob3R0ZWQganVzdCBiZWZvcmUgZXZlcnkgYGRpc3BhdGNoKClgIGNhbGwuXG4gICAqIElmIHlvdSBzdWJzY3JpYmUgb3IgdW5zdWJzY3JpYmUgd2hpbGUgdGhlIGxpc3RlbmVycyBhcmUgYmVpbmcgaW52b2tlZCwgdGhpc1xuICAgKiB3aWxsIG5vdCBoYXZlIGFueSBlZmZlY3Qgb24gdGhlIGBkaXNwYXRjaCgpYCB0aGF0IGlzIGN1cnJlbnRseSBpbiBwcm9ncmVzcy5cbiAgICogSG93ZXZlciwgdGhlIG5leHQgYGRpc3BhdGNoKClgIGNhbGwsIHdoZXRoZXIgbmVzdGVkIG9yIG5vdCwgd2lsbCB1c2UgYSBtb3JlXG4gICAqIHJlY2VudCBzbmFwc2hvdCBvZiB0aGUgc3Vic2NyaXB0aW9uIGxpc3QuXG4gICAqXG4gICAqIDIuIFRoZSBsaXN0ZW5lciBzaG91bGQgbm90IGV4cGVjdCB0byBzZWUgYWxsIHN0YXRlIGNoYW5nZXMsIGFzIHRoZSBzdGF0ZVxuICAgKiBtaWdodCBoYXZlIGJlZW4gdXBkYXRlZCBtdWx0aXBsZSB0aW1lcyBkdXJpbmcgYSBuZXN0ZWQgYGRpc3BhdGNoKClgIGJlZm9yZVxuICAgKiB0aGUgbGlzdGVuZXIgaXMgY2FsbGVkLiBJdCBpcywgaG93ZXZlciwgZ3VhcmFudGVlZCB0aGF0IGFsbCBzdWJzY3JpYmVyc1xuICAgKiByZWdpc3RlcmVkIGJlZm9yZSB0aGUgYGRpc3BhdGNoKClgIHN0YXJ0ZWQgd2lsbCBiZSBjYWxsZWQgd2l0aCB0aGUgbGF0ZXN0XG4gICAqIHN0YXRlIGJ5IHRoZSB0aW1lIGl0IGV4aXRzLlxuICAgKlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBsaXN0ZW5lciBBIGNhbGxiYWNrIHRvIGJlIGludm9rZWQgb24gZXZlcnkgZGlzcGF0Y2guXG4gICAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSBmdW5jdGlvbiB0byByZW1vdmUgdGhpcyBjaGFuZ2UgbGlzdGVuZXIuXG4gICAqL1xuICBmdW5jdGlvbiBzdWJzY3JpYmUobGlzdGVuZXIpIHtcbiAgICBpZiAodHlwZW9mIGxpc3RlbmVyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIGxpc3RlbmVyIHRvIGJlIGEgZnVuY3Rpb24uJyk7XG4gICAgfVxuXG4gICAgdmFyIGlzU3Vic2NyaWJlZCA9IHRydWU7XG5cbiAgICBlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzKCk7XG4gICAgbmV4dExpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcblxuICAgIHJldHVybiBmdW5jdGlvbiB1bnN1YnNjcmliZSgpIHtcbiAgICAgIGlmICghaXNTdWJzY3JpYmVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaXNTdWJzY3JpYmVkID0gZmFsc2U7XG5cbiAgICAgIGVuc3VyZUNhbk11dGF0ZU5leHRMaXN0ZW5lcnMoKTtcbiAgICAgIHZhciBpbmRleCA9IG5leHRMaXN0ZW5lcnMuaW5kZXhPZihsaXN0ZW5lcik7XG4gICAgICBuZXh0TGlzdGVuZXJzLnNwbGljZShpbmRleCwgMSk7XG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBEaXNwYXRjaGVzIGFuIGFjdGlvbi4gSXQgaXMgdGhlIG9ubHkgd2F5IHRvIHRyaWdnZXIgYSBzdGF0ZSBjaGFuZ2UuXG4gICAqXG4gICAqIFRoZSBgcmVkdWNlcmAgZnVuY3Rpb24sIHVzZWQgdG8gY3JlYXRlIHRoZSBzdG9yZSwgd2lsbCBiZSBjYWxsZWQgd2l0aCB0aGVcbiAgICogY3VycmVudCBzdGF0ZSB0cmVlIGFuZCB0aGUgZ2l2ZW4gYGFjdGlvbmAuIEl0cyByZXR1cm4gdmFsdWUgd2lsbFxuICAgKiBiZSBjb25zaWRlcmVkIHRoZSAqKm5leHQqKiBzdGF0ZSBvZiB0aGUgdHJlZSwgYW5kIHRoZSBjaGFuZ2UgbGlzdGVuZXJzXG4gICAqIHdpbGwgYmUgbm90aWZpZWQuXG4gICAqXG4gICAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9ubHkgc3VwcG9ydHMgcGxhaW4gb2JqZWN0IGFjdGlvbnMuIElmIHlvdSB3YW50IHRvXG4gICAqIGRpc3BhdGNoIGEgUHJvbWlzZSwgYW4gT2JzZXJ2YWJsZSwgYSB0aHVuaywgb3Igc29tZXRoaW5nIGVsc2UsIHlvdSBuZWVkIHRvXG4gICAqIHdyYXAgeW91ciBzdG9yZSBjcmVhdGluZyBmdW5jdGlvbiBpbnRvIHRoZSBjb3JyZXNwb25kaW5nIG1pZGRsZXdhcmUuIEZvclxuICAgKiBleGFtcGxlLCBzZWUgdGhlIGRvY3VtZW50YXRpb24gZm9yIHRoZSBgcmVkdXgtdGh1bmtgIHBhY2thZ2UuIEV2ZW4gdGhlXG4gICAqIG1pZGRsZXdhcmUgd2lsbCBldmVudHVhbGx5IGRpc3BhdGNoIHBsYWluIG9iamVjdCBhY3Rpb25zIHVzaW5nIHRoaXMgbWV0aG9kLlxuICAgKlxuICAgKiBAcGFyYW0ge09iamVjdH0gYWN0aW9uIEEgcGxhaW4gb2JqZWN0IHJlcHJlc2VudGluZyDigJx3aGF0IGNoYW5nZWTigJ0uIEl0IGlzXG4gICAqIGEgZ29vZCBpZGVhIHRvIGtlZXAgYWN0aW9ucyBzZXJpYWxpemFibGUgc28geW91IGNhbiByZWNvcmQgYW5kIHJlcGxheSB1c2VyXG4gICAqIHNlc3Npb25zLCBvciB1c2UgdGhlIHRpbWUgdHJhdmVsbGluZyBgcmVkdXgtZGV2dG9vbHNgLiBBbiBhY3Rpb24gbXVzdCBoYXZlXG4gICAqIGEgYHR5cGVgIHByb3BlcnR5IHdoaWNoIG1heSBub3QgYmUgYHVuZGVmaW5lZGAuIEl0IGlzIGEgZ29vZCBpZGVhIHRvIHVzZVxuICAgKiBzdHJpbmcgY29uc3RhbnRzIGZvciBhY3Rpb24gdHlwZXMuXG4gICAqXG4gICAqIEByZXR1cm5zIHtPYmplY3R9IEZvciBjb252ZW5pZW5jZSwgdGhlIHNhbWUgYWN0aW9uIG9iamVjdCB5b3UgZGlzcGF0Y2hlZC5cbiAgICpcbiAgICogTm90ZSB0aGF0LCBpZiB5b3UgdXNlIGEgY3VzdG9tIG1pZGRsZXdhcmUsIGl0IG1heSB3cmFwIGBkaXNwYXRjaCgpYCB0b1xuICAgKiByZXR1cm4gc29tZXRoaW5nIGVsc2UgKGZvciBleGFtcGxlLCBhIFByb21pc2UgeW91IGNhbiBhd2FpdCkuXG4gICAqL1xuICBmdW5jdGlvbiBkaXNwYXRjaChhY3Rpb24pIHtcbiAgICBpZiAoIWlzUGxhaW5PYmplY3QoYWN0aW9uKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdBY3Rpb25zIG11c3QgYmUgcGxhaW4gb2JqZWN0cy4gJyArICdVc2UgY3VzdG9tIG1pZGRsZXdhcmUgZm9yIGFzeW5jIGFjdGlvbnMuJyk7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBhY3Rpb24udHlwZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQWN0aW9ucyBtYXkgbm90IGhhdmUgYW4gdW5kZWZpbmVkIFwidHlwZVwiIHByb3BlcnR5LiAnICsgJ0hhdmUgeW91IG1pc3NwZWxsZWQgYSBjb25zdGFudD8nKTtcbiAgICB9XG5cbiAgICBpZiAoaXNEaXNwYXRjaGluZykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdSZWR1Y2VycyBtYXkgbm90IGRpc3BhdGNoIGFjdGlvbnMuJyk7XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIGlzRGlzcGF0Y2hpbmcgPSB0cnVlO1xuICAgICAgY3VycmVudFN0YXRlID0gY3VycmVudFJlZHVjZXIoY3VycmVudFN0YXRlLCBhY3Rpb24pO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBpc0Rpc3BhdGNoaW5nID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIGxpc3RlbmVycyA9IGN1cnJlbnRMaXN0ZW5lcnMgPSBuZXh0TGlzdGVuZXJzO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdGVuZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgbGlzdGVuZXIgPSBsaXN0ZW5lcnNbaV07XG4gICAgICBsaXN0ZW5lcigpO1xuICAgIH1cblxuICAgIHJldHVybiBhY3Rpb247XG4gIH1cblxuICAvKipcbiAgICogUmVwbGFjZXMgdGhlIHJlZHVjZXIgY3VycmVudGx5IHVzZWQgYnkgdGhlIHN0b3JlIHRvIGNhbGN1bGF0ZSB0aGUgc3RhdGUuXG4gICAqXG4gICAqIFlvdSBtaWdodCBuZWVkIHRoaXMgaWYgeW91ciBhcHAgaW1wbGVtZW50cyBjb2RlIHNwbGl0dGluZyBhbmQgeW91IHdhbnQgdG9cbiAgICogbG9hZCBzb21lIG9mIHRoZSByZWR1Y2VycyBkeW5hbWljYWxseS4gWW91IG1pZ2h0IGFsc28gbmVlZCB0aGlzIGlmIHlvdVxuICAgKiBpbXBsZW1lbnQgYSBob3QgcmVsb2FkaW5nIG1lY2hhbmlzbSBmb3IgUmVkdXguXG4gICAqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IG5leHRSZWR1Y2VyIFRoZSByZWR1Y2VyIGZvciB0aGUgc3RvcmUgdG8gdXNlIGluc3RlYWQuXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cbiAgZnVuY3Rpb24gcmVwbGFjZVJlZHVjZXIobmV4dFJlZHVjZXIpIHtcbiAgICBpZiAodHlwZW9mIG5leHRSZWR1Y2VyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIHRoZSBuZXh0UmVkdWNlciB0byBiZSBhIGZ1bmN0aW9uLicpO1xuICAgIH1cblxuICAgIGN1cnJlbnRSZWR1Y2VyID0gbmV4dFJlZHVjZXI7XG4gICAgZGlzcGF0Y2goeyB0eXBlOiBBY3Rpb25UeXBlcy5JTklUIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEludGVyb3BlcmFiaWxpdHkgcG9pbnQgZm9yIG9ic2VydmFibGUvcmVhY3RpdmUgbGlicmFyaWVzLlxuICAgKiBAcmV0dXJucyB7b2JzZXJ2YWJsZX0gQSBtaW5pbWFsIG9ic2VydmFibGUgb2Ygc3RhdGUgY2hhbmdlcy5cbiAgICogRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZSB0aGUgb2JzZXJ2YWJsZSBwcm9wb3NhbDpcbiAgICogaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtb2JzZXJ2YWJsZVxuICAgKi9cbiAgZnVuY3Rpb24gb2JzZXJ2YWJsZSgpIHtcbiAgICB2YXIgX3JlZjtcblxuICAgIHZhciBvdXRlclN1YnNjcmliZSA9IHN1YnNjcmliZTtcbiAgICByZXR1cm4gX3JlZiA9IHtcbiAgICAgIC8qKlxuICAgICAgICogVGhlIG1pbmltYWwgb2JzZXJ2YWJsZSBzdWJzY3JpcHRpb24gbWV0aG9kLlxuICAgICAgICogQHBhcmFtIHtPYmplY3R9IG9ic2VydmVyIEFueSBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCBhcyBhbiBvYnNlcnZlci5cbiAgICAgICAqIFRoZSBvYnNlcnZlciBvYmplY3Qgc2hvdWxkIGhhdmUgYSBgbmV4dGAgbWV0aG9kLlxuICAgICAgICogQHJldHVybnMge3N1YnNjcmlwdGlvbn0gQW4gb2JqZWN0IHdpdGggYW4gYHVuc3Vic2NyaWJlYCBtZXRob2QgdGhhdCBjYW5cbiAgICAgICAqIGJlIHVzZWQgdG8gdW5zdWJzY3JpYmUgdGhlIG9ic2VydmFibGUgZnJvbSB0aGUgc3RvcmUsIGFuZCBwcmV2ZW50IGZ1cnRoZXJcbiAgICAgICAqIGVtaXNzaW9uIG9mIHZhbHVlcyBmcm9tIHRoZSBvYnNlcnZhYmxlLlxuICAgICAgICovXG4gICAgICBzdWJzY3JpYmU6IGZ1bmN0aW9uIHN1YnNjcmliZShvYnNlcnZlcikge1xuICAgICAgICBpZiAodHlwZW9mIG9ic2VydmVyICE9PSAnb2JqZWN0Jykge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIHRoZSBvYnNlcnZlciB0byBiZSBhbiBvYmplY3QuJyk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBvYnNlcnZlU3RhdGUoKSB7XG4gICAgICAgICAgaWYgKG9ic2VydmVyLm5leHQpIHtcbiAgICAgICAgICAgIG9ic2VydmVyLm5leHQoZ2V0U3RhdGUoKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgb2JzZXJ2ZVN0YXRlKCk7XG4gICAgICAgIHZhciB1bnN1YnNjcmliZSA9IG91dGVyU3Vic2NyaWJlKG9ic2VydmVTdGF0ZSk7XG4gICAgICAgIHJldHVybiB7IHVuc3Vic2NyaWJlOiB1bnN1YnNjcmliZSB9O1xuICAgICAgfVxuICAgIH0sIF9yZWZbJCRvYnNlcnZhYmxlXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sIF9yZWY7XG4gIH1cblxuICAvLyBXaGVuIGEgc3RvcmUgaXMgY3JlYXRlZCwgYW4gXCJJTklUXCIgYWN0aW9uIGlzIGRpc3BhdGNoZWQgc28gdGhhdCBldmVyeVxuICAvLyByZWR1Y2VyIHJldHVybnMgdGhlaXIgaW5pdGlhbCBzdGF0ZS4gVGhpcyBlZmZlY3RpdmVseSBwb3B1bGF0ZXNcbiAgLy8gdGhlIGluaXRpYWwgc3RhdGUgdHJlZS5cbiAgZGlzcGF0Y2goeyB0eXBlOiBBY3Rpb25UeXBlcy5JTklUIH0pO1xuXG4gIHJldHVybiBfcmVmMiA9IHtcbiAgICBkaXNwYXRjaDogZGlzcGF0Y2gsXG4gICAgc3Vic2NyaWJlOiBzdWJzY3JpYmUsXG4gICAgZ2V0U3RhdGU6IGdldFN0YXRlLFxuICAgIHJlcGxhY2VSZWR1Y2VyOiByZXBsYWNlUmVkdWNlclxuICB9LCBfcmVmMlskJG9ic2VydmFibGVdID0gb2JzZXJ2YWJsZSwgX3JlZjI7XG59IiwiaW1wb3J0IHsgQWN0aW9uVHlwZXMgfSBmcm9tICcuL2NyZWF0ZVN0b3JlJztcbmltcG9ydCBpc1BsYWluT2JqZWN0IGZyb20gJ2xvZGFzaC1lcy9pc1BsYWluT2JqZWN0JztcbmltcG9ydCB3YXJuaW5nIGZyb20gJy4vdXRpbHMvd2FybmluZyc7XG5cbmZ1bmN0aW9uIGdldFVuZGVmaW5lZFN0YXRlRXJyb3JNZXNzYWdlKGtleSwgYWN0aW9uKSB7XG4gIHZhciBhY3Rpb25UeXBlID0gYWN0aW9uICYmIGFjdGlvbi50eXBlO1xuICB2YXIgYWN0aW9uTmFtZSA9IGFjdGlvblR5cGUgJiYgJ1wiJyArIGFjdGlvblR5cGUudG9TdHJpbmcoKSArICdcIicgfHwgJ2FuIGFjdGlvbic7XG5cbiAgcmV0dXJuICdHaXZlbiBhY3Rpb24gJyArIGFjdGlvbk5hbWUgKyAnLCByZWR1Y2VyIFwiJyArIGtleSArICdcIiByZXR1cm5lZCB1bmRlZmluZWQuICcgKyAnVG8gaWdub3JlIGFuIGFjdGlvbiwgeW91IG11c3QgZXhwbGljaXRseSByZXR1cm4gdGhlIHByZXZpb3VzIHN0YXRlLiAnICsgJ0lmIHlvdSB3YW50IHRoaXMgcmVkdWNlciB0byBob2xkIG5vIHZhbHVlLCB5b3UgY2FuIHJldHVybiBudWxsIGluc3RlYWQgb2YgdW5kZWZpbmVkLic7XG59XG5cbmZ1bmN0aW9uIGdldFVuZXhwZWN0ZWRTdGF0ZVNoYXBlV2FybmluZ01lc3NhZ2UoaW5wdXRTdGF0ZSwgcmVkdWNlcnMsIGFjdGlvbiwgdW5leHBlY3RlZEtleUNhY2hlKSB7XG4gIHZhciByZWR1Y2VyS2V5cyA9IE9iamVjdC5rZXlzKHJlZHVjZXJzKTtcbiAgdmFyIGFyZ3VtZW50TmFtZSA9IGFjdGlvbiAmJiBhY3Rpb24udHlwZSA9PT0gQWN0aW9uVHlwZXMuSU5JVCA/ICdwcmVsb2FkZWRTdGF0ZSBhcmd1bWVudCBwYXNzZWQgdG8gY3JlYXRlU3RvcmUnIDogJ3ByZXZpb3VzIHN0YXRlIHJlY2VpdmVkIGJ5IHRoZSByZWR1Y2VyJztcblxuICBpZiAocmVkdWNlcktleXMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuICdTdG9yZSBkb2VzIG5vdCBoYXZlIGEgdmFsaWQgcmVkdWNlci4gTWFrZSBzdXJlIHRoZSBhcmd1bWVudCBwYXNzZWQgJyArICd0byBjb21iaW5lUmVkdWNlcnMgaXMgYW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgcmVkdWNlcnMuJztcbiAgfVxuXG4gIGlmICghaXNQbGFpbk9iamVjdChpbnB1dFN0YXRlKSkge1xuICAgIHJldHVybiAnVGhlICcgKyBhcmd1bWVudE5hbWUgKyAnIGhhcyB1bmV4cGVjdGVkIHR5cGUgb2YgXCInICsge30udG9TdHJpbmcuY2FsbChpbnB1dFN0YXRlKS5tYXRjaCgvXFxzKFthLXp8QS1aXSspLylbMV0gKyAnXCIuIEV4cGVjdGVkIGFyZ3VtZW50IHRvIGJlIGFuIG9iamVjdCB3aXRoIHRoZSBmb2xsb3dpbmcgJyArICgna2V5czogXCInICsgcmVkdWNlcktleXMuam9pbignXCIsIFwiJykgKyAnXCInKTtcbiAgfVxuXG4gIHZhciB1bmV4cGVjdGVkS2V5cyA9IE9iamVjdC5rZXlzKGlucHV0U3RhdGUpLmZpbHRlcihmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuICFyZWR1Y2Vycy5oYXNPd25Qcm9wZXJ0eShrZXkpICYmICF1bmV4cGVjdGVkS2V5Q2FjaGVba2V5XTtcbiAgfSk7XG5cbiAgdW5leHBlY3RlZEtleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgdW5leHBlY3RlZEtleUNhY2hlW2tleV0gPSB0cnVlO1xuICB9KTtcblxuICBpZiAodW5leHBlY3RlZEtleXMubGVuZ3RoID4gMCkge1xuICAgIHJldHVybiAnVW5leHBlY3RlZCAnICsgKHVuZXhwZWN0ZWRLZXlzLmxlbmd0aCA+IDEgPyAna2V5cycgOiAna2V5JykgKyAnICcgKyAoJ1wiJyArIHVuZXhwZWN0ZWRLZXlzLmpvaW4oJ1wiLCBcIicpICsgJ1wiIGZvdW5kIGluICcgKyBhcmd1bWVudE5hbWUgKyAnLiAnKSArICdFeHBlY3RlZCB0byBmaW5kIG9uZSBvZiB0aGUga25vd24gcmVkdWNlciBrZXlzIGluc3RlYWQ6ICcgKyAoJ1wiJyArIHJlZHVjZXJLZXlzLmpvaW4oJ1wiLCBcIicpICsgJ1wiLiBVbmV4cGVjdGVkIGtleXMgd2lsbCBiZSBpZ25vcmVkLicpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGFzc2VydFJlZHVjZXJTaGFwZShyZWR1Y2Vycykge1xuICBPYmplY3Qua2V5cyhyZWR1Y2VycykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgdmFyIHJlZHVjZXIgPSByZWR1Y2Vyc1trZXldO1xuICAgIHZhciBpbml0aWFsU3RhdGUgPSByZWR1Y2VyKHVuZGVmaW5lZCwgeyB0eXBlOiBBY3Rpb25UeXBlcy5JTklUIH0pO1xuXG4gICAgaWYgKHR5cGVvZiBpbml0aWFsU3RhdGUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1JlZHVjZXIgXCInICsga2V5ICsgJ1wiIHJldHVybmVkIHVuZGVmaW5lZCBkdXJpbmcgaW5pdGlhbGl6YXRpb24uICcgKyAnSWYgdGhlIHN0YXRlIHBhc3NlZCB0byB0aGUgcmVkdWNlciBpcyB1bmRlZmluZWQsIHlvdSBtdXN0ICcgKyAnZXhwbGljaXRseSByZXR1cm4gdGhlIGluaXRpYWwgc3RhdGUuIFRoZSBpbml0aWFsIHN0YXRlIG1heSAnICsgJ25vdCBiZSB1bmRlZmluZWQuIElmIHlvdSBkb25cXCd0IHdhbnQgdG8gc2V0IGEgdmFsdWUgZm9yIHRoaXMgcmVkdWNlciwgJyArICd5b3UgY2FuIHVzZSBudWxsIGluc3RlYWQgb2YgdW5kZWZpbmVkLicpO1xuICAgIH1cblxuICAgIHZhciB0eXBlID0gJ0BAcmVkdXgvUFJPQkVfVU5LTk9XTl9BQ1RJT05fJyArIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cmluZyg3KS5zcGxpdCgnJykuam9pbignLicpO1xuICAgIGlmICh0eXBlb2YgcmVkdWNlcih1bmRlZmluZWQsIHsgdHlwZTogdHlwZSB9KSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignUmVkdWNlciBcIicgKyBrZXkgKyAnXCIgcmV0dXJuZWQgdW5kZWZpbmVkIHdoZW4gcHJvYmVkIHdpdGggYSByYW5kb20gdHlwZS4gJyArICgnRG9uXFwndCB0cnkgdG8gaGFuZGxlICcgKyBBY3Rpb25UeXBlcy5JTklUICsgJyBvciBvdGhlciBhY3Rpb25zIGluIFwicmVkdXgvKlwiICcpICsgJ25hbWVzcGFjZS4gVGhleSBhcmUgY29uc2lkZXJlZCBwcml2YXRlLiBJbnN0ZWFkLCB5b3UgbXVzdCByZXR1cm4gdGhlICcgKyAnY3VycmVudCBzdGF0ZSBmb3IgYW55IHVua25vd24gYWN0aW9ucywgdW5sZXNzIGl0IGlzIHVuZGVmaW5lZCwgJyArICdpbiB3aGljaCBjYXNlIHlvdSBtdXN0IHJldHVybiB0aGUgaW5pdGlhbCBzdGF0ZSwgcmVnYXJkbGVzcyBvZiB0aGUgJyArICdhY3Rpb24gdHlwZS4gVGhlIGluaXRpYWwgc3RhdGUgbWF5IG5vdCBiZSB1bmRlZmluZWQsIGJ1dCBjYW4gYmUgbnVsbC4nKTtcbiAgICB9XG4gIH0pO1xufVxuXG4vKipcbiAqIFR1cm5zIGFuIG9iamVjdCB3aG9zZSB2YWx1ZXMgYXJlIGRpZmZlcmVudCByZWR1Y2VyIGZ1bmN0aW9ucywgaW50byBhIHNpbmdsZVxuICogcmVkdWNlciBmdW5jdGlvbi4gSXQgd2lsbCBjYWxsIGV2ZXJ5IGNoaWxkIHJlZHVjZXIsIGFuZCBnYXRoZXIgdGhlaXIgcmVzdWx0c1xuICogaW50byBhIHNpbmdsZSBzdGF0ZSBvYmplY3QsIHdob3NlIGtleXMgY29ycmVzcG9uZCB0byB0aGUga2V5cyBvZiB0aGUgcGFzc2VkXG4gKiByZWR1Y2VyIGZ1bmN0aW9ucy5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gcmVkdWNlcnMgQW4gb2JqZWN0IHdob3NlIHZhbHVlcyBjb3JyZXNwb25kIHRvIGRpZmZlcmVudFxuICogcmVkdWNlciBmdW5jdGlvbnMgdGhhdCBuZWVkIHRvIGJlIGNvbWJpbmVkIGludG8gb25lLiBPbmUgaGFuZHkgd2F5IHRvIG9idGFpblxuICogaXQgaXMgdG8gdXNlIEVTNiBgaW1wb3J0ICogYXMgcmVkdWNlcnNgIHN5bnRheC4gVGhlIHJlZHVjZXJzIG1heSBuZXZlciByZXR1cm5cbiAqIHVuZGVmaW5lZCBmb3IgYW55IGFjdGlvbi4gSW5zdGVhZCwgdGhleSBzaG91bGQgcmV0dXJuIHRoZWlyIGluaXRpYWwgc3RhdGVcbiAqIGlmIHRoZSBzdGF0ZSBwYXNzZWQgdG8gdGhlbSB3YXMgdW5kZWZpbmVkLCBhbmQgdGhlIGN1cnJlbnQgc3RhdGUgZm9yIGFueVxuICogdW5yZWNvZ25pemVkIGFjdGlvbi5cbiAqXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgcmVkdWNlciBmdW5jdGlvbiB0aGF0IGludm9rZXMgZXZlcnkgcmVkdWNlciBpbnNpZGUgdGhlXG4gKiBwYXNzZWQgb2JqZWN0LCBhbmQgYnVpbGRzIGEgc3RhdGUgb2JqZWN0IHdpdGggdGhlIHNhbWUgc2hhcGUuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbWJpbmVSZWR1Y2VycyhyZWR1Y2Vycykge1xuICB2YXIgcmVkdWNlcktleXMgPSBPYmplY3Qua2V5cyhyZWR1Y2Vycyk7XG4gIHZhciBmaW5hbFJlZHVjZXJzID0ge307XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcmVkdWNlcktleXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIga2V5ID0gcmVkdWNlcktleXNbaV07XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaWYgKHR5cGVvZiByZWR1Y2Vyc1trZXldID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICB3YXJuaW5nKCdObyByZWR1Y2VyIHByb3ZpZGVkIGZvciBrZXkgXCInICsga2V5ICsgJ1wiJyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiByZWR1Y2Vyc1trZXldID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBmaW5hbFJlZHVjZXJzW2tleV0gPSByZWR1Y2Vyc1trZXldO1xuICAgIH1cbiAgfVxuICB2YXIgZmluYWxSZWR1Y2VyS2V5cyA9IE9iamVjdC5rZXlzKGZpbmFsUmVkdWNlcnMpO1xuXG4gIHZhciB1bmV4cGVjdGVkS2V5Q2FjaGUgPSB2b2lkIDA7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgdW5leHBlY3RlZEtleUNhY2hlID0ge307XG4gIH1cblxuICB2YXIgc2hhcGVBc3NlcnRpb25FcnJvciA9IHZvaWQgMDtcbiAgdHJ5IHtcbiAgICBhc3NlcnRSZWR1Y2VyU2hhcGUoZmluYWxSZWR1Y2Vycyk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBzaGFwZUFzc2VydGlvbkVycm9yID0gZTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiBjb21iaW5hdGlvbigpIHtcbiAgICB2YXIgc3RhdGUgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuICAgIHZhciBhY3Rpb24gPSBhcmd1bWVudHNbMV07XG5cbiAgICBpZiAoc2hhcGVBc3NlcnRpb25FcnJvcikge1xuICAgICAgdGhyb3cgc2hhcGVBc3NlcnRpb25FcnJvcjtcbiAgICB9XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgdmFyIHdhcm5pbmdNZXNzYWdlID0gZ2V0VW5leHBlY3RlZFN0YXRlU2hhcGVXYXJuaW5nTWVzc2FnZShzdGF0ZSwgZmluYWxSZWR1Y2VycywgYWN0aW9uLCB1bmV4cGVjdGVkS2V5Q2FjaGUpO1xuICAgICAgaWYgKHdhcm5pbmdNZXNzYWdlKSB7XG4gICAgICAgIHdhcm5pbmcod2FybmluZ01lc3NhZ2UpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBoYXNDaGFuZ2VkID0gZmFsc2U7XG4gICAgdmFyIG5leHRTdGF0ZSA9IHt9O1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBmaW5hbFJlZHVjZXJLZXlzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9rZXkgPSBmaW5hbFJlZHVjZXJLZXlzW19pXTtcbiAgICAgIHZhciByZWR1Y2VyID0gZmluYWxSZWR1Y2Vyc1tfa2V5XTtcbiAgICAgIHZhciBwcmV2aW91c1N0YXRlRm9yS2V5ID0gc3RhdGVbX2tleV07XG4gICAgICB2YXIgbmV4dFN0YXRlRm9yS2V5ID0gcmVkdWNlcihwcmV2aW91c1N0YXRlRm9yS2V5LCBhY3Rpb24pO1xuICAgICAgaWYgKHR5cGVvZiBuZXh0U3RhdGVGb3JLZXkgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHZhciBlcnJvck1lc3NhZ2UgPSBnZXRVbmRlZmluZWRTdGF0ZUVycm9yTWVzc2FnZShfa2V5LCBhY3Rpb24pO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3JNZXNzYWdlKTtcbiAgICAgIH1cbiAgICAgIG5leHRTdGF0ZVtfa2V5XSA9IG5leHRTdGF0ZUZvcktleTtcbiAgICAgIGhhc0NoYW5nZWQgPSBoYXNDaGFuZ2VkIHx8IG5leHRTdGF0ZUZvcktleSAhPT0gcHJldmlvdXNTdGF0ZUZvcktleTtcbiAgICB9XG4gICAgcmV0dXJuIGhhc0NoYW5nZWQgPyBuZXh0U3RhdGUgOiBzdGF0ZTtcbiAgfTtcbn0iLCJmdW5jdGlvbiBiaW5kQWN0aW9uQ3JlYXRvcihhY3Rpb25DcmVhdG9yLCBkaXNwYXRjaCkge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBkaXNwYXRjaChhY3Rpb25DcmVhdG9yLmFwcGx5KHVuZGVmaW5lZCwgYXJndW1lbnRzKSk7XG4gIH07XG59XG5cbi8qKlxuICogVHVybnMgYW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgYWN0aW9uIGNyZWF0b3JzLCBpbnRvIGFuIG9iamVjdCB3aXRoIHRoZVxuICogc2FtZSBrZXlzLCBidXQgd2l0aCBldmVyeSBmdW5jdGlvbiB3cmFwcGVkIGludG8gYSBgZGlzcGF0Y2hgIGNhbGwgc28gdGhleVxuICogbWF5IGJlIGludm9rZWQgZGlyZWN0bHkuIFRoaXMgaXMganVzdCBhIGNvbnZlbmllbmNlIG1ldGhvZCwgYXMgeW91IGNhbiBjYWxsXG4gKiBgc3RvcmUuZGlzcGF0Y2goTXlBY3Rpb25DcmVhdG9ycy5kb1NvbWV0aGluZygpKWAgeW91cnNlbGYganVzdCBmaW5lLlxuICpcbiAqIEZvciBjb252ZW5pZW5jZSwgeW91IGNhbiBhbHNvIHBhc3MgYSBzaW5nbGUgZnVuY3Rpb24gYXMgdGhlIGZpcnN0IGFyZ3VtZW50LFxuICogYW5kIGdldCBhIGZ1bmN0aW9uIGluIHJldHVybi5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufE9iamVjdH0gYWN0aW9uQ3JlYXRvcnMgQW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgYWN0aW9uXG4gKiBjcmVhdG9yIGZ1bmN0aW9ucy4gT25lIGhhbmR5IHdheSB0byBvYnRhaW4gaXQgaXMgdG8gdXNlIEVTNiBgaW1wb3J0ICogYXNgXG4gKiBzeW50YXguIFlvdSBtYXkgYWxzbyBwYXNzIGEgc2luZ2xlIGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGRpc3BhdGNoIFRoZSBgZGlzcGF0Y2hgIGZ1bmN0aW9uIGF2YWlsYWJsZSBvbiB5b3VyIFJlZHV4XG4gKiBzdG9yZS5cbiAqXG4gKiBAcmV0dXJucyB7RnVuY3Rpb258T2JqZWN0fSBUaGUgb2JqZWN0IG1pbWlja2luZyB0aGUgb3JpZ2luYWwgb2JqZWN0LCBidXQgd2l0aFxuICogZXZlcnkgYWN0aW9uIGNyZWF0b3Igd3JhcHBlZCBpbnRvIHRoZSBgZGlzcGF0Y2hgIGNhbGwuIElmIHlvdSBwYXNzZWQgYVxuICogZnVuY3Rpb24gYXMgYGFjdGlvbkNyZWF0b3JzYCwgdGhlIHJldHVybiB2YWx1ZSB3aWxsIGFsc28gYmUgYSBzaW5nbGVcbiAqIGZ1bmN0aW9uLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBiaW5kQWN0aW9uQ3JlYXRvcnMoYWN0aW9uQ3JlYXRvcnMsIGRpc3BhdGNoKSB7XG4gIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvcnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gYmluZEFjdGlvbkNyZWF0b3IoYWN0aW9uQ3JlYXRvcnMsIGRpc3BhdGNoKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvcnMgIT09ICdvYmplY3QnIHx8IGFjdGlvbkNyZWF0b3JzID09PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdiaW5kQWN0aW9uQ3JlYXRvcnMgZXhwZWN0ZWQgYW4gb2JqZWN0IG9yIGEgZnVuY3Rpb24sIGluc3RlYWQgcmVjZWl2ZWQgJyArIChhY3Rpb25DcmVhdG9ycyA9PT0gbnVsbCA/ICdudWxsJyA6IHR5cGVvZiBhY3Rpb25DcmVhdG9ycykgKyAnLiAnICsgJ0RpZCB5b3Ugd3JpdGUgXCJpbXBvcnQgQWN0aW9uQ3JlYXRvcnMgZnJvbVwiIGluc3RlYWQgb2YgXCJpbXBvcnQgKiBhcyBBY3Rpb25DcmVhdG9ycyBmcm9tXCI/Jyk7XG4gIH1cblxuICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGFjdGlvbkNyZWF0b3JzKTtcbiAgdmFyIGJvdW5kQWN0aW9uQ3JlYXRvcnMgPSB7fTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGtleSA9IGtleXNbaV07XG4gICAgdmFyIGFjdGlvbkNyZWF0b3IgPSBhY3Rpb25DcmVhdG9yc1trZXldO1xuICAgIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgYm91bmRBY3Rpb25DcmVhdG9yc1trZXldID0gYmluZEFjdGlvbkNyZWF0b3IoYWN0aW9uQ3JlYXRvciwgZGlzcGF0Y2gpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gYm91bmRBY3Rpb25DcmVhdG9ycztcbn0iLCIvKipcbiAqIENvbXBvc2VzIHNpbmdsZS1hcmd1bWVudCBmdW5jdGlvbnMgZnJvbSByaWdodCB0byBsZWZ0LiBUaGUgcmlnaHRtb3N0XG4gKiBmdW5jdGlvbiBjYW4gdGFrZSBtdWx0aXBsZSBhcmd1bWVudHMgYXMgaXQgcHJvdmlkZXMgdGhlIHNpZ25hdHVyZSBmb3JcbiAqIHRoZSByZXN1bHRpbmcgY29tcG9zaXRlIGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSB7Li4uRnVuY3Rpb259IGZ1bmNzIFRoZSBmdW5jdGlvbnMgdG8gY29tcG9zZS5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSBmdW5jdGlvbiBvYnRhaW5lZCBieSBjb21wb3NpbmcgdGhlIGFyZ3VtZW50IGZ1bmN0aW9uc1xuICogZnJvbSByaWdodCB0byBsZWZ0LiBGb3IgZXhhbXBsZSwgY29tcG9zZShmLCBnLCBoKSBpcyBpZGVudGljYWwgdG8gZG9pbmdcbiAqICguLi5hcmdzKSA9PiBmKGcoaCguLi5hcmdzKSkpLlxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbXBvc2UoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBmdW5jcyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGZ1bmNzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgaWYgKGZ1bmNzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoYXJnKSB7XG4gICAgICByZXR1cm4gYXJnO1xuICAgIH07XG4gIH1cblxuICBpZiAoZnVuY3MubGVuZ3RoID09PSAxKSB7XG4gICAgcmV0dXJuIGZ1bmNzWzBdO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmNzLnJlZHVjZShmdW5jdGlvbiAoYSwgYikge1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gYShiLmFwcGx5KHVuZGVmaW5lZCwgYXJndW1lbnRzKSk7XG4gICAgfTtcbiAgfSk7XG59IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuaW1wb3J0IGNvbXBvc2UgZnJvbSAnLi9jb21wb3NlJztcblxuLyoqXG4gKiBDcmVhdGVzIGEgc3RvcmUgZW5oYW5jZXIgdGhhdCBhcHBsaWVzIG1pZGRsZXdhcmUgdG8gdGhlIGRpc3BhdGNoIG1ldGhvZFxuICogb2YgdGhlIFJlZHV4IHN0b3JlLiBUaGlzIGlzIGhhbmR5IGZvciBhIHZhcmlldHkgb2YgdGFza3MsIHN1Y2ggYXMgZXhwcmVzc2luZ1xuICogYXN5bmNocm9ub3VzIGFjdGlvbnMgaW4gYSBjb25jaXNlIG1hbm5lciwgb3IgbG9nZ2luZyBldmVyeSBhY3Rpb24gcGF5bG9hZC5cbiAqXG4gKiBTZWUgYHJlZHV4LXRodW5rYCBwYWNrYWdlIGFzIGFuIGV4YW1wbGUgb2YgdGhlIFJlZHV4IG1pZGRsZXdhcmUuXG4gKlxuICogQmVjYXVzZSBtaWRkbGV3YXJlIGlzIHBvdGVudGlhbGx5IGFzeW5jaHJvbm91cywgdGhpcyBzaG91bGQgYmUgdGhlIGZpcnN0XG4gKiBzdG9yZSBlbmhhbmNlciBpbiB0aGUgY29tcG9zaXRpb24gY2hhaW4uXG4gKlxuICogTm90ZSB0aGF0IGVhY2ggbWlkZGxld2FyZSB3aWxsIGJlIGdpdmVuIHRoZSBgZGlzcGF0Y2hgIGFuZCBgZ2V0U3RhdGVgIGZ1bmN0aW9uc1xuICogYXMgbmFtZWQgYXJndW1lbnRzLlxuICpcbiAqIEBwYXJhbSB7Li4uRnVuY3Rpb259IG1pZGRsZXdhcmVzIFRoZSBtaWRkbGV3YXJlIGNoYWluIHRvIGJlIGFwcGxpZWQuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgc3RvcmUgZW5oYW5jZXIgYXBwbHlpbmcgdGhlIG1pZGRsZXdhcmUuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGFwcGx5TWlkZGxld2FyZSgpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIG1pZGRsZXdhcmVzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgbWlkZGxld2FyZXNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKGNyZWF0ZVN0b3JlKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChyZWR1Y2VyLCBwcmVsb2FkZWRTdGF0ZSwgZW5oYW5jZXIpIHtcbiAgICAgIHZhciBzdG9yZSA9IGNyZWF0ZVN0b3JlKHJlZHVjZXIsIHByZWxvYWRlZFN0YXRlLCBlbmhhbmNlcik7XG4gICAgICB2YXIgX2Rpc3BhdGNoID0gc3RvcmUuZGlzcGF0Y2g7XG4gICAgICB2YXIgY2hhaW4gPSBbXTtcblxuICAgICAgdmFyIG1pZGRsZXdhcmVBUEkgPSB7XG4gICAgICAgIGdldFN0YXRlOiBzdG9yZS5nZXRTdGF0ZSxcbiAgICAgICAgZGlzcGF0Y2g6IGZ1bmN0aW9uIGRpc3BhdGNoKGFjdGlvbikge1xuICAgICAgICAgIHJldHVybiBfZGlzcGF0Y2goYWN0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIGNoYWluID0gbWlkZGxld2FyZXMubWFwKGZ1bmN0aW9uIChtaWRkbGV3YXJlKSB7XG4gICAgICAgIHJldHVybiBtaWRkbGV3YXJlKG1pZGRsZXdhcmVBUEkpO1xuICAgICAgfSk7XG4gICAgICBfZGlzcGF0Y2ggPSBjb21wb3NlLmFwcGx5KHVuZGVmaW5lZCwgY2hhaW4pKHN0b3JlLmRpc3BhdGNoKTtcblxuICAgICAgcmV0dXJuIF9leHRlbmRzKHt9LCBzdG9yZSwge1xuICAgICAgICBkaXNwYXRjaDogX2Rpc3BhdGNoXG4gICAgICB9KTtcbiAgICB9O1xuICB9O1xufSIsIi8qIGdsb2JhbCB3aW5kb3cgKi9cbmltcG9ydCBwb255ZmlsbCBmcm9tICcuL3BvbnlmaWxsLmpzJztcblxudmFyIHJvb3Q7XG5cbmlmICh0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgcm9vdCA9IHNlbGY7XG59IGVsc2UgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gIHJvb3QgPSB3aW5kb3c7XG59IGVsc2UgaWYgKHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnKSB7XG4gIHJvb3QgPSBnbG9iYWw7XG59IGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnKSB7XG4gIHJvb3QgPSBtb2R1bGU7XG59IGVsc2Uge1xuICByb290ID0gRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcbn1cblxudmFyIHJlc3VsdCA9IHBvbnlmaWxsKHJvb3QpO1xuZXhwb3J0IGRlZmF1bHQgcmVzdWx0O1xuIiwiaW1wb3J0ICogYXMgdHlwZXMgZnJvbSBcIi4vYWN0aW9uVHlwZXNcIjtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzZXRUZXh0KG5ld1RleHQ6IHN0cmluZyk6IGFueXtcclxuICAgIHJldHVybiAoZGlzcGF0Y2gsIGdldFN0YXRlKSA9PiB7XHJcbiAgICAgICAgZGlzcGF0Y2goe3R5cGU6IHR5cGVzLlNFVF9URVhULCB0ZXh0OiBuZXdUZXh0fSk7XHJcbiAgICB9O1xyXG59IiwiZXhwb3J0IGNvbnN0IFNFVF9URVhUID0gXCJTRVRfVEVYVFwiOyIsImltcG9ydCB7IEV4cHJlc3Npb25FZGl0b3JSZWR1eFN0YXRlIH0gZnJvbSAnLi4vLi4vdHlwZXMvRXhwcmVzc2lvbkVkaXRvclR5cGVzJztcclxuaW1wb3J0ICogYXMgdHlwZXMgZnJvbSBcIi4vYWN0aW9uVHlwZXNcIjtcclxuXHJcbmNvbnN0IGluaXRpYWxTdGF0ZTogRXhwcmVzc2lvbkVkaXRvclJlZHV4U3RhdGUgPSB7XHJcbiAgICBkaXNwbGF5VGV4dDogXCJpbml0XCJcclxufVxyXG5cclxuY29uc3QgcmVkdWNlOiBhbnkgPSAoc3RhdGU6IEV4cHJlc3Npb25FZGl0b3JSZWR1eFN0YXRlPWluaXRpYWxTdGF0ZSwgYWN0aW9uOiBhbnkpID0+IHtcclxuICAgIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcclxuICAgICAgICBjYXNlIHR5cGVzLlNFVF9URVhUOlxyXG4gICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgLi4uc3RhdGUsXHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5VGV4dDogYWN0aW9uLnRleHRcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgIHJldHVybiBzdGF0ZTtcclxuICAgIH1cclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHJlZHVjZTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRUZXh0KHN0YXRlOiBFeHByZXNzaW9uRWRpdG9yUmVkdXhTdGF0ZSk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gXCJyZXR1cm5lZFRleHRcIjsvL3N0YXRlLmRpc3BsYXlUZXh0O1xyXG59IiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgZW1wdHlPYmplY3QgPSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgT2JqZWN0LmZyZWV6ZShlbXB0eU9iamVjdCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlPYmplY3Q7IiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHN5bWJvbE9ic2VydmFibGVQb255ZmlsbChyb290KSB7XG5cdHZhciByZXN1bHQ7XG5cdHZhciBTeW1ib2wgPSByb290LlN5bWJvbDtcblxuXHRpZiAodHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdGlmIChTeW1ib2wub2JzZXJ2YWJsZSkge1xuXHRcdFx0cmVzdWx0ID0gU3ltYm9sLm9ic2VydmFibGU7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlc3VsdCA9IFN5bWJvbCgnb2JzZXJ2YWJsZScpO1xuXHRcdFx0U3ltYm9sLm9ic2VydmFibGUgPSByZXN1bHQ7XG5cdFx0fVxuXHR9IGVsc2Uge1xuXHRcdHJlc3VsdCA9ICdAQG9ic2VydmFibGUnO1xuXHR9XG5cblx0cmV0dXJuIHJlc3VsdDtcbn07XG4iLCIvKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYGdsb2JhbGAgZnJvbSBOb2RlLmpzLiAqL1xudmFyIGZyZWVHbG9iYWwgPSB0eXBlb2YgZ2xvYmFsID09ICdvYmplY3QnICYmIGdsb2JhbCAmJiBnbG9iYWwuT2JqZWN0ID09PSBPYmplY3QgJiYgZ2xvYmFsO1xuXG5leHBvcnQgZGVmYXVsdCBmcmVlR2xvYmFsO1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNSwgWWFob28hIEluYy5cbiAqIENvcHlyaWdodHMgbGljZW5zZWQgdW5kZXIgdGhlIE5ldyBCU0QgTGljZW5zZS4gU2VlIHRoZSBhY2NvbXBhbnlpbmcgTElDRU5TRSBmaWxlIGZvciB0ZXJtcy5cbiAqL1xuKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHtcbiAgICB0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgPyBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKSA6XG4gICAgdHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kID8gZGVmaW5lKGZhY3RvcnkpIDpcbiAgICAoZ2xvYmFsLmhvaXN0Tm9uUmVhY3RTdGF0aWNzID0gZmFjdG9yeSgpKTtcbn0odGhpcywgKGZ1bmN0aW9uICgpIHtcbiAgICAndXNlIHN0cmljdCc7XG4gICAgXG4gICAgdmFyIFJFQUNUX1NUQVRJQ1MgPSB7XG4gICAgICAgIGNoaWxkQ29udGV4dFR5cGVzOiB0cnVlLFxuICAgICAgICBjb250ZXh0VHlwZXM6IHRydWUsXG4gICAgICAgIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgICAgICAgZGlzcGxheU5hbWU6IHRydWUsXG4gICAgICAgIGdldERlZmF1bHRQcm9wczogdHJ1ZSxcbiAgICAgICAgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOiB0cnVlLFxuICAgICAgICBtaXhpbnM6IHRydWUsXG4gICAgICAgIHByb3BUeXBlczogdHJ1ZSxcbiAgICAgICAgdHlwZTogdHJ1ZVxuICAgIH07XG4gICAgXG4gICAgdmFyIEtOT1dOX1NUQVRJQ1MgPSB7XG4gICAgICAgIG5hbWU6IHRydWUsXG4gICAgICAgIGxlbmd0aDogdHJ1ZSxcbiAgICAgICAgcHJvdG90eXBlOiB0cnVlLFxuICAgICAgICBjYWxsZXI6IHRydWUsXG4gICAgICAgIGNhbGxlZTogdHJ1ZSxcbiAgICAgICAgYXJndW1lbnRzOiB0cnVlLFxuICAgICAgICBhcml0eTogdHJ1ZVxuICAgIH07XG4gICAgXG4gICAgdmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xuICAgIHZhciBnZXRPd25Qcm9wZXJ0eU5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM7XG4gICAgdmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG4gICAgdmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG4gICAgdmFyIGdldFByb3RvdHlwZU9mID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xuICAgIHZhciBvYmplY3RQcm90b3R5cGUgPSBnZXRQcm90b3R5cGVPZiAmJiBnZXRQcm90b3R5cGVPZihPYmplY3QpO1xuICAgIFxuICAgIHJldHVybiBmdW5jdGlvbiBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIHNvdXJjZUNvbXBvbmVudCwgYmxhY2tsaXN0KSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc291cmNlQ29tcG9uZW50ICE9PSAnc3RyaW5nJykgeyAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAob2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgICAgICAgICAgdmFyIGluaGVyaXRlZENvbXBvbmVudCA9IGdldFByb3RvdHlwZU9mKHNvdXJjZUNvbXBvbmVudCk7XG4gICAgICAgICAgICAgICAgaWYgKGluaGVyaXRlZENvbXBvbmVudCAmJiBpbmhlcml0ZWRDb21wb25lbnQgIT09IG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICAgICAgICAgICAgICBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIGluaGVyaXRlZENvbXBvbmVudCwgYmxhY2tsaXN0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgICAgICAgICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgdmFyIGtleSA9IGtleXNbaV07XG4gICAgICAgICAgICAgICAgaWYgKCFSRUFDVF9TVEFUSUNTW2tleV0gJiYgIUtOT1dOX1NUQVRJQ1Nba2V5XSAmJiAoIWJsYWNrbGlzdCB8fCAhYmxhY2tsaXN0W2tleV0pKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBkZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZUNvbXBvbmVudCwga2V5KTtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHsgLy8gQXZvaWQgZmFpbHVyZXMgZnJvbSByZWFkLW9ubHkgcHJvcGVydGllc1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbiAgICB9O1xufSkpKTtcbiIsImltcG9ydCBleHByZXNzaW9ucyBmcm9tICcuL2V4cHJlc3Npb25zL3JlZHVjZXInO1xyXG5cclxuZXhwb3J0IHtcclxuICAgIGV4cHJlc3Npb25zXHJcbn07IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcclxuXHJcbmltcG9ydCB7IEV4cHJlc3Npb25FZGl0b3JSZWR1eFN0YXRlIH0gZnJvbSBcIi4uL3R5cGVzL0V4cHJlc3Npb25FZGl0b3JUeXBlc1wiO1xyXG5pbXBvcnQgKiBhcyBleHByZXNzaW9uU2VsZWN0b3JzIGZyb20gXCIuLi9zdG9yZS9leHByZXNzaW9ucy9yZWR1Y2VyXCI7XHJcbmltcG9ydCAqIGFzIGV4cHJlc3Npb25BY3Rpb25zIGZyb20gXCIuLi9zdG9yZS9leHByZXNzaW9ucy9hY3Rpb25zXCI7XHJcblxyXG5jbGFzcyBFeHByZXNzaW9uQnV0dG9ucyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxhbnksIGFueT4ge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByb3BzOiBhbnkpe1xyXG4gICAgICAgIHN1cGVyKHByb3BzKTtcclxuICAgIH1cclxuXHJcbiAgICBcclxuICAgIG9uQWRkID0gKCk6IHZvaWQgPT4ge1xyXG4gICAgICAgIHRoaXMucHJvcHMuc2V0VGV4dChcIkFkZCBCdXR0b24gQ2xpY2tlZFwiKTtcclxuICAgIH1cclxuXHJcbiAgICBvbkNsb25lID0gKCk6IHZvaWQgPT4ge1xyXG4gICAgICAgIHRoaXMucHJvcHMuc2V0VGV4dChcIkNsb25lIEJ1dHRvbiBDbGlja2VkXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uUmVtb3ZlID0gKCk6IHZvaWQgPT4ge1xyXG4gICAgICAgIHRoaXMucHJvcHMuc2V0VGV4dChcIlJlbW92ZSBCdXR0b24gQ2xpY2tlZFwiKTtcclxuICAgIH1cclxuXHJcbiAgICByZW5kZXIoKTogSlNYLkVsZW1lbnQge1xyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwiYnV0dG9uXCIgb25DbGljaz17dGhpcy5vbkFkZH0gdmFsdWU9XCJBZGRcIi8+XHJcbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJidXR0b25cIiBvbkNsaWNrPXt0aGlzLm9uQ2xvbmV9IHZhbHVlPVwiQ2xvbmVcIi8+XHJcbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJidXR0b25cIiBvbkNsaWNrPXt0aGlzLm9uUmVtb3ZlfSB2YWx1ZT1cIlJlbW92ZVwiLz5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICApO1xyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBtYXBTdGF0ZVRvUHJvcHMoc3RhdGU6IEV4cHJlc3Npb25FZGl0b3JSZWR1eFN0YXRlKSA6IGFueSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgfTtcclxufVxyXG5cclxuY29uc3QgbWFwRGlzcGF0Y2hUb1Byb3BzOiBhbnkgPSBkaXNwYXRjaCA9PiB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHNldFRleHQ6ICh0ZXh0KSA9PiB7ZGlzcGF0Y2goZXhwcmVzc2lvbkFjdGlvbnMuc2V0VGV4dCh0ZXh0KSl9XHJcbiAgICB9O1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzKShFeHByZXNzaW9uQnV0dG9ucyk7IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcclxuXHJcbmltcG9ydCB7IEV4cHJlc3Npb25FZGl0b3JSZWR1eFN0YXRlIH0gZnJvbSBcIi4uL3R5cGVzL0V4cHJlc3Npb25FZGl0b3JUeXBlc1wiO1xyXG5pbXBvcnQgKiBhcyBleHByZXNzaW9uU2VsZWN0b3JzIGZyb20gXCIuLi9zdG9yZS9leHByZXNzaW9ucy9yZWR1Y2VyXCI7XHJcbmltcG9ydCAqIGFzIGV4cHJlc3Npb25BY3Rpb25zIGZyb20gXCIuLi9zdG9yZS9leHByZXNzaW9ucy9hY3Rpb25zXCI7XHJcblxyXG5pbnRlcmZhY2UgRXhwcmVzc2lvblZpZXdQcm9wcyB7XHJcbiAgICBkaXNwbGF5VGV4dDogc3RyaW5nO1xyXG59XHJcblxyXG5jbGFzcyBFeHByZXNzaW9uVmlldyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxFeHByZXNzaW9uVmlld1Byb3BzLCBFeHByZXNzaW9uRWRpdG9yUmVkdXhTdGF0ZT4ge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByb3BzOiBhbnkpe1xyXG4gICAgICAgIHN1cGVyKHByb3BzKTtcclxuICAgICAgICBsZXQgeyBkaXNwbGF5VGV4dCB9ID0gcHJvcHM7XHJcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcclxuICAgICAgICAgICAgZGlzcGxheVRleHQ6IGRpc3BsYXlUZXh0XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlcigpOiBKU1guRWxlbWVudCB7XHJcbiAgICAgICAgbGV0IHsgZGlzcGxheVRleHQgfSA9IHRoaXMucHJvcHM7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJSZW5kZXJlZCBWaWV3XCIpO1xyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICA8aDE+eyBkaXNwbGF5VGV4dCB9PC9oMT5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgKTtcclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gbWFwU3RhdGVUb1Byb3BzKHN0YXRlOiBFeHByZXNzaW9uRWRpdG9yUmVkdXhTdGF0ZSkgOiBhbnkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBkaXNwbGF5VGV4dDogc3RhdGUuZGlzcGxheVRleHRcclxuICAgIH07XHJcbn1cclxuXHJcbmNvbnN0IG1hcERpc3BhdGNoVG9Qcm9wczogYW55ID0gZGlzcGF0Y2ggPT4ge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBnZXRUZXh0OiAodGV4dCkgPT4ge2Rpc3BhdGNoKGV4cHJlc3Npb25TZWxlY3RvcnMuZ2V0VGV4dCh0aGlzLnN0YXRlKSl9XHJcbiAgICB9O1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzKShFeHByZXNzaW9uVmlldyk7IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tIFwicmVhY3QtcmVkdXhcIjtcclxuaW1wb3J0IHsgRXhwcmVzc2lvbkVkaXRvclJlZHV4U3RhdGUgfSBmcm9tIFwiLi4vdHlwZXMvRXhwcmVzc2lvbkVkaXRvclR5cGVzXCI7XHJcbmltcG9ydCBFeHByZXNzaW9uVmlldyBmcm9tIFwiLi4vY29tcG9uZW50cy9FeHByZXNzaW9uVmlld1wiO1xyXG5pbXBvcnQgRXhwcmVzc2lvbkJ1dHRvbnMgZnJvbSBcIi4uL2NvbXBvbmVudHMvRXhwcmVzc2lvbkJ1dHRvbnNcIjtcclxuXHJcbmltcG9ydCAqIGFzIGV4cHJlc3Npb25TZWxlY3RvcnMgZnJvbSBcIi4uL3N0b3JlL2V4cHJlc3Npb25zL3JlZHVjZXJcIjtcclxuaW1wb3J0ICogYXMgZXhwcmVzc2lvbkFjdGlvbnMgZnJvbSBcIi4uL3N0b3JlL2V4cHJlc3Npb25zL2FjdGlvbnNcIjtcclxuXHJcbmludGVyZmFjZSBFeHByZXNzaW9uRWRpdG9yUHJvcHMge1xyXG4gICAgZGlzcGxheVRleHQ6IHN0cmluZztcclxufVxyXG5cclxuY2xhc3MgRXhwcmVzc2lvbkVkaXRvciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxhbnksIEV4cHJlc3Npb25FZGl0b3JSZWR1eFN0YXRlPiB7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHJvcHM6IGFueSl7XHJcbiAgICAgICAgc3VwZXIocHJvcHMpO1xyXG5cclxuICAgICAgICBsZXQgeyBpbml0aWFsVGV4dCB9ID0gcHJvcHM7XHJcblxyXG4gICAgICAgIGlmIChpbml0aWFsVGV4dCkge1xyXG4gICAgICAgICAgICB0aGlzLnByb3BzLmRpc3BhdGNoKGV4cHJlc3Npb25BY3Rpb25zLnNldFRleHQoaW5pdGlhbFRleHQpKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnByb3BzLmRpc3BhdGNoKGV4cHJlc3Npb25BY3Rpb25zLnNldFRleHQoXCJObyBUZXh0IEdpdmVuXCIpKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVyKCk6IEpTWC5FbGVtZW50IHtcclxuICAgICAgICBsZXQgeyBpbml0aWFsVGV4dCB9ID0gdGhpcy5wcm9wcztcclxuXHJcbiAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVhZGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGgyIHN0eWxlPXt7IGNvbG9yOiAnI0ZGRicgfX0+UmVhY3QgRXhwcmVzc2lvbiBFZGl0b3I8L2gyPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRlbnRcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8RXhwcmVzc2lvbkJ1dHRvbnMgLz5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImV4cHItZWRpdFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8RXhwcmVzc2lvblZpZXcgLz5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICApO1xyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBtYXBTdGF0ZVRvUHJvcHMoc3RhdGU6IEV4cHJlc3Npb25FZGl0b3JSZWR1eFN0YXRlKSA6IGFueSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgfTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMpKEV4cHJlc3Npb25FZGl0b3IpOyIsIiFmdW5jdGlvbihlLHQpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlP3QoZXhwb3J0cyk6XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShbXCJleHBvcnRzXCJdLHQpOnQoZS5yZWR1eExvZ2dlcj1lLnJlZHV4TG9nZ2VyfHx7fSl9KHRoaXMsZnVuY3Rpb24oZSl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gdChlLHQpe2Uuc3VwZXJfPXQsZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSl9ZnVuY3Rpb24gcihlLHQpe09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwia2luZFwiLHt2YWx1ZTplLGVudW1lcmFibGU6ITB9KSx0JiZ0Lmxlbmd0aCYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJwYXRoXCIse3ZhbHVlOnQsZW51bWVyYWJsZTohMH0pfWZ1bmN0aW9uIG4oZSx0LHIpe24uc3VwZXJfLmNhbGwodGhpcyxcIkVcIixlKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImxoc1wiLHt2YWx1ZTp0LGVudW1lcmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcInJoc1wiLHt2YWx1ZTpyLGVudW1lcmFibGU6ITB9KX1mdW5jdGlvbiBvKGUsdCl7by5zdXBlcl8uY2FsbCh0aGlzLFwiTlwiLGUpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwicmhzXCIse3ZhbHVlOnQsZW51bWVyYWJsZTohMH0pfWZ1bmN0aW9uIGkoZSx0KXtpLnN1cGVyXy5jYWxsKHRoaXMsXCJEXCIsZSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJsaHNcIix7dmFsdWU6dCxlbnVtZXJhYmxlOiEwfSl9ZnVuY3Rpb24gYShlLHQscil7YS5zdXBlcl8uY2FsbCh0aGlzLFwiQVwiLGUpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiaW5kZXhcIix7dmFsdWU6dCxlbnVtZXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJpdGVtXCIse3ZhbHVlOnIsZW51bWVyYWJsZTohMH0pfWZ1bmN0aW9uIGYoZSx0LHIpe3ZhciBuPWUuc2xpY2UoKHJ8fHQpKzF8fGUubGVuZ3RoKTtyZXR1cm4gZS5sZW5ndGg9dDwwP2UubGVuZ3RoK3Q6dCxlLnB1c2guYXBwbHkoZSxuKSxlfWZ1bmN0aW9uIHUoZSl7dmFyIHQ9XCJ1bmRlZmluZWRcIj09dHlwZW9mIGU/XCJ1bmRlZmluZWRcIjpOKGUpO3JldHVyblwib2JqZWN0XCIhPT10P3Q6ZT09PU1hdGg/XCJtYXRoXCI6bnVsbD09PWU/XCJudWxsXCI6QXJyYXkuaXNBcnJheShlKT9cImFycmF5XCI6XCJbb2JqZWN0IERhdGVdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSk/XCJkYXRlXCI6XCJmdW5jdGlvblwiPT10eXBlb2YgZS50b1N0cmluZyYmL15cXC8uKlxcLy8udGVzdChlLnRvU3RyaW5nKCkpP1wicmVnZXhwXCI6XCJvYmplY3RcIn1mdW5jdGlvbiBsKGUsdCxyLGMscyxkLHApe3M9c3x8W10scD1wfHxbXTt2YXIgZz1zLnNsaWNlKDApO2lmKFwidW5kZWZpbmVkXCIhPXR5cGVvZiBkKXtpZihjKXtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBjJiZjKGcsZCkpcmV0dXJuO2lmKFwib2JqZWN0XCI9PT0oXCJ1bmRlZmluZWRcIj09dHlwZW9mIGM/XCJ1bmRlZmluZWRcIjpOKGMpKSl7aWYoYy5wcmVmaWx0ZXImJmMucHJlZmlsdGVyKGcsZCkpcmV0dXJuO2lmKGMubm9ybWFsaXplKXt2YXIgaD1jLm5vcm1hbGl6ZShnLGQsZSx0KTtoJiYoZT1oWzBdLHQ9aFsxXSl9fX1nLnB1c2goZCl9XCJyZWdleHBcIj09PXUoZSkmJlwicmVnZXhwXCI9PT11KHQpJiYoZT1lLnRvU3RyaW5nKCksdD10LnRvU3RyaW5nKCkpO3ZhciB5PVwidW5kZWZpbmVkXCI9PXR5cGVvZiBlP1widW5kZWZpbmVkXCI6TihlKSx2PVwidW5kZWZpbmVkXCI9PXR5cGVvZiB0P1widW5kZWZpbmVkXCI6Tih0KSxiPVwidW5kZWZpbmVkXCIhPT15fHxwJiZwW3AubGVuZ3RoLTFdLmxocyYmcFtwLmxlbmd0aC0xXS5saHMuaGFzT3duUHJvcGVydHkoZCksbT1cInVuZGVmaW5lZFwiIT09dnx8cCYmcFtwLmxlbmd0aC0xXS5yaHMmJnBbcC5sZW5ndGgtMV0ucmhzLmhhc093blByb3BlcnR5KGQpO2lmKCFiJiZtKXIobmV3IG8oZyx0KSk7ZWxzZSBpZighbSYmYilyKG5ldyBpKGcsZSkpO2Vsc2UgaWYodShlKSE9PXUodCkpcihuZXcgbihnLGUsdCkpO2Vsc2UgaWYoXCJkYXRlXCI9PT11KGUpJiZlLXQhPT0wKXIobmV3IG4oZyxlLHQpKTtlbHNlIGlmKFwib2JqZWN0XCI9PT15JiZudWxsIT09ZSYmbnVsbCE9PXQpaWYocC5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIHQubGhzPT09ZX0pLmxlbmd0aCllIT09dCYmcihuZXcgbihnLGUsdCkpO2Vsc2V7aWYocC5wdXNoKHtsaHM6ZSxyaHM6dH0pLEFycmF5LmlzQXJyYXkoZSkpe3ZhciB3O2UubGVuZ3RoO2Zvcih3PTA7dzxlLmxlbmd0aDt3Kyspdz49dC5sZW5ndGg/cihuZXcgYShnLHcsbmV3IGkodm9pZCAwLGVbd10pKSk6bChlW3ddLHRbd10scixjLGcsdyxwKTtmb3IoO3c8dC5sZW5ndGg7KXIobmV3IGEoZyx3LG5ldyBvKHZvaWQgMCx0W3crK10pKSl9ZWxzZXt2YXIgeD1PYmplY3Qua2V5cyhlKSxTPU9iamVjdC5rZXlzKHQpO3guZm9yRWFjaChmdW5jdGlvbihuLG8pe3ZhciBpPVMuaW5kZXhPZihuKTtpPj0wPyhsKGVbbl0sdFtuXSxyLGMsZyxuLHApLFM9ZihTLGkpKTpsKGVbbl0sdm9pZCAwLHIsYyxnLG4scCl9KSxTLmZvckVhY2goZnVuY3Rpb24oZSl7bCh2b2lkIDAsdFtlXSxyLGMsZyxlLHApfSl9cC5sZW5ndGg9cC5sZW5ndGgtMX1lbHNlIGUhPT10JiYoXCJudW1iZXJcIj09PXkmJmlzTmFOKGUpJiZpc05hTih0KXx8cihuZXcgbihnLGUsdCkpKX1mdW5jdGlvbiBjKGUsdCxyLG4pe3JldHVybiBuPW58fFtdLGwoZSx0LGZ1bmN0aW9uKGUpe2UmJm4ucHVzaChlKX0sciksbi5sZW5ndGg/bjp2b2lkIDB9ZnVuY3Rpb24gcyhlLHQscil7aWYoci5wYXRoJiZyLnBhdGgubGVuZ3RoKXt2YXIgbixvPWVbdF0saT1yLnBhdGgubGVuZ3RoLTE7Zm9yKG49MDtuPGk7bisrKW89b1tyLnBhdGhbbl1dO3N3aXRjaChyLmtpbmQpe2Nhc2VcIkFcIjpzKG9bci5wYXRoW25dXSxyLmluZGV4LHIuaXRlbSk7YnJlYWs7Y2FzZVwiRFwiOmRlbGV0ZSBvW3IucGF0aFtuXV07YnJlYWs7Y2FzZVwiRVwiOmNhc2VcIk5cIjpvW3IucGF0aFtuXV09ci5yaHN9fWVsc2Ugc3dpdGNoKHIua2luZCl7Y2FzZVwiQVwiOnMoZVt0XSxyLmluZGV4LHIuaXRlbSk7YnJlYWs7Y2FzZVwiRFwiOmU9ZihlLHQpO2JyZWFrO2Nhc2VcIkVcIjpjYXNlXCJOXCI6ZVt0XT1yLnJoc31yZXR1cm4gZX1mdW5jdGlvbiBkKGUsdCxyKXtpZihlJiZ0JiZyJiZyLmtpbmQpe2Zvcih2YXIgbj1lLG89LTEsaT1yLnBhdGg/ci5wYXRoLmxlbmd0aC0xOjA7KytvPGk7KVwidW5kZWZpbmVkXCI9PXR5cGVvZiBuW3IucGF0aFtvXV0mJihuW3IucGF0aFtvXV09XCJudW1iZXJcIj09dHlwZW9mIHIucGF0aFtvXT9bXTp7fSksbj1uW3IucGF0aFtvXV07c3dpdGNoKHIua2luZCl7Y2FzZVwiQVwiOnMoci5wYXRoP25bci5wYXRoW29dXTpuLHIuaW5kZXgsci5pdGVtKTticmVhaztjYXNlXCJEXCI6ZGVsZXRlIG5bci5wYXRoW29dXTticmVhaztjYXNlXCJFXCI6Y2FzZVwiTlwiOm5bci5wYXRoW29dXT1yLnJoc319fWZ1bmN0aW9uIHAoZSx0LHIpe2lmKHIucGF0aCYmci5wYXRoLmxlbmd0aCl7dmFyIG4sbz1lW3RdLGk9ci5wYXRoLmxlbmd0aC0xO2ZvcihuPTA7bjxpO24rKylvPW9bci5wYXRoW25dXTtzd2l0Y2goci5raW5kKXtjYXNlXCJBXCI6cChvW3IucGF0aFtuXV0sci5pbmRleCxyLml0ZW0pO2JyZWFrO2Nhc2VcIkRcIjpvW3IucGF0aFtuXV09ci5saHM7YnJlYWs7Y2FzZVwiRVwiOm9bci5wYXRoW25dXT1yLmxoczticmVhaztjYXNlXCJOXCI6ZGVsZXRlIG9bci5wYXRoW25dXX19ZWxzZSBzd2l0Y2goci5raW5kKXtjYXNlXCJBXCI6cChlW3RdLHIuaW5kZXgsci5pdGVtKTticmVhaztjYXNlXCJEXCI6ZVt0XT1yLmxoczticmVhaztjYXNlXCJFXCI6ZVt0XT1yLmxoczticmVhaztjYXNlXCJOXCI6ZT1mKGUsdCl9cmV0dXJuIGV9ZnVuY3Rpb24gZyhlLHQscil7aWYoZSYmdCYmciYmci5raW5kKXt2YXIgbixvLGk9ZTtmb3Iobz1yLnBhdGgubGVuZ3RoLTEsbj0wO248bztuKyspXCJ1bmRlZmluZWRcIj09dHlwZW9mIGlbci5wYXRoW25dXSYmKGlbci5wYXRoW25dXT17fSksaT1pW3IucGF0aFtuXV07c3dpdGNoKHIua2luZCl7Y2FzZVwiQVwiOnAoaVtyLnBhdGhbbl1dLHIuaW5kZXgsci5pdGVtKTticmVhaztjYXNlXCJEXCI6aVtyLnBhdGhbbl1dPXIubGhzO2JyZWFrO2Nhc2VcIkVcIjppW3IucGF0aFtuXV09ci5saHM7YnJlYWs7Y2FzZVwiTlwiOmRlbGV0ZSBpW3IucGF0aFtuXV19fX1mdW5jdGlvbiBoKGUsdCxyKXtpZihlJiZ0KXt2YXIgbj1mdW5jdGlvbihuKXtyJiYhcihlLHQsbil8fGQoZSx0LG4pfTtsKGUsdCxuKX19ZnVuY3Rpb24geShlKXtyZXR1cm5cImNvbG9yOiBcIitGW2VdLmNvbG9yK1wiOyBmb250LXdlaWdodDogYm9sZFwifWZ1bmN0aW9uIHYoZSl7dmFyIHQ9ZS5raW5kLHI9ZS5wYXRoLG49ZS5saHMsbz1lLnJocyxpPWUuaW5kZXgsYT1lLml0ZW07c3dpdGNoKHQpe2Nhc2VcIkVcIjpyZXR1cm5bci5qb2luKFwiLlwiKSxuLFwi4oaSXCIsb107Y2FzZVwiTlwiOnJldHVybltyLmpvaW4oXCIuXCIpLG9dO2Nhc2VcIkRcIjpyZXR1cm5bci5qb2luKFwiLlwiKV07Y2FzZVwiQVwiOnJldHVybltyLmpvaW4oXCIuXCIpK1wiW1wiK2krXCJdXCIsYV07ZGVmYXVsdDpyZXR1cm5bXX19ZnVuY3Rpb24gYihlLHQscixuKXt2YXIgbz1jKGUsdCk7dHJ5e24/ci5ncm91cENvbGxhcHNlZChcImRpZmZcIik6ci5ncm91cChcImRpZmZcIil9Y2F0Y2goZSl7ci5sb2coXCJkaWZmXCIpfW8/by5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciB0PWUua2luZCxuPXYoZSk7ci5sb2cuYXBwbHkocixbXCIlYyBcIitGW3RdLnRleHQseSh0KV0uY29uY2F0KFAobikpKX0pOnIubG9nKFwi4oCU4oCUIG5vIGRpZmYg4oCU4oCUXCIpO3RyeXtyLmdyb3VwRW5kKCl9Y2F0Y2goZSl7ci5sb2coXCLigJTigJQgZGlmZiBlbmQg4oCU4oCUIFwiKX19ZnVuY3Rpb24gbShlLHQscixuKXtzd2l0Y2goXCJ1bmRlZmluZWRcIj09dHlwZW9mIGU/XCJ1bmRlZmluZWRcIjpOKGUpKXtjYXNlXCJvYmplY3RcIjpyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiBlW25dP2Vbbl0uYXBwbHkoZSxQKHIpKTplW25dO2Nhc2VcImZ1bmN0aW9uXCI6cmV0dXJuIGUodCk7ZGVmYXVsdDpyZXR1cm4gZX19ZnVuY3Rpb24gdyhlKXt2YXIgdD1lLnRpbWVzdGFtcCxyPWUuZHVyYXRpb247cmV0dXJuIGZ1bmN0aW9uKGUsbixvKXt2YXIgaT1bXCJhY3Rpb25cIl07cmV0dXJuIGkucHVzaChcIiVjXCIrU3RyaW5nKGUudHlwZSkpLHQmJmkucHVzaChcIiVjQCBcIituKSxyJiZpLnB1c2goXCIlYyhpbiBcIitvLnRvRml4ZWQoMikrXCIgbXMpXCIpLGkuam9pbihcIiBcIil9fWZ1bmN0aW9uIHgoZSx0KXt2YXIgcj10LmxvZ2dlcixuPXQuYWN0aW9uVHJhbnNmb3JtZXIsbz10LnRpdGxlRm9ybWF0dGVyLGk9dm9pZCAwPT09bz93KHQpOm8sYT10LmNvbGxhcHNlZCxmPXQuY29sb3JzLHU9dC5sZXZlbCxsPXQuZGlmZixjPVwidW5kZWZpbmVkXCI9PXR5cGVvZiB0LnRpdGxlRm9ybWF0dGVyO2UuZm9yRWFjaChmdW5jdGlvbihvLHMpe3ZhciBkPW8uc3RhcnRlZCxwPW8uc3RhcnRlZFRpbWUsZz1vLmFjdGlvbixoPW8ucHJldlN0YXRlLHk9by5lcnJvcix2PW8udG9vayx3PW8ubmV4dFN0YXRlLHg9ZVtzKzFdO3gmJih3PXgucHJldlN0YXRlLHY9eC5zdGFydGVkLWQpO3ZhciBTPW4oZyksaz1cImZ1bmN0aW9uXCI9PXR5cGVvZiBhP2EoZnVuY3Rpb24oKXtyZXR1cm4gd30sZyxvKTphLGo9RChwKSxFPWYudGl0bGU/XCJjb2xvcjogXCIrZi50aXRsZShTKStcIjtcIjpcIlwiLEE9W1wiY29sb3I6IGdyYXk7IGZvbnQtd2VpZ2h0OiBsaWdodGVyO1wiXTtBLnB1c2goRSksdC50aW1lc3RhbXAmJkEucHVzaChcImNvbG9yOiBncmF5OyBmb250LXdlaWdodDogbGlnaHRlcjtcIiksdC5kdXJhdGlvbiYmQS5wdXNoKFwiY29sb3I6IGdyYXk7IGZvbnQtd2VpZ2h0OiBsaWdodGVyO1wiKTt2YXIgTz1pKFMsaix2KTt0cnl7az9mLnRpdGxlJiZjP3IuZ3JvdXBDb2xsYXBzZWQuYXBwbHkocixbXCIlYyBcIitPXS5jb25jYXQoQSkpOnIuZ3JvdXBDb2xsYXBzZWQoTyk6Zi50aXRsZSYmYz9yLmdyb3VwLmFwcGx5KHIsW1wiJWMgXCIrT10uY29uY2F0KEEpKTpyLmdyb3VwKE8pfWNhdGNoKGUpe3IubG9nKE8pfXZhciBOPW0odSxTLFtoXSxcInByZXZTdGF0ZVwiKSxQPW0odSxTLFtTXSxcImFjdGlvblwiKSxDPW0odSxTLFt5LGhdLFwiZXJyb3JcIiksRj1tKHUsUyxbd10sXCJuZXh0U3RhdGVcIik7aWYoTilpZihmLnByZXZTdGF0ZSl7dmFyIEw9XCJjb2xvcjogXCIrZi5wcmV2U3RhdGUoaCkrXCI7IGZvbnQtd2VpZ2h0OiBib2xkXCI7cltOXShcIiVjIHByZXYgc3RhdGVcIixMLGgpfWVsc2UgcltOXShcInByZXYgc3RhdGVcIixoKTtpZihQKWlmKGYuYWN0aW9uKXt2YXIgVD1cImNvbG9yOiBcIitmLmFjdGlvbihTKStcIjsgZm9udC13ZWlnaHQ6IGJvbGRcIjtyW1BdKFwiJWMgYWN0aW9uICAgIFwiLFQsUyl9ZWxzZSByW1BdKFwiYWN0aW9uICAgIFwiLFMpO2lmKHkmJkMpaWYoZi5lcnJvcil7dmFyIE09XCJjb2xvcjogXCIrZi5lcnJvcih5LGgpK1wiOyBmb250LXdlaWdodDogYm9sZDtcIjtyW0NdKFwiJWMgZXJyb3IgICAgIFwiLE0seSl9ZWxzZSByW0NdKFwiZXJyb3IgICAgIFwiLHkpO2lmKEYpaWYoZi5uZXh0U3RhdGUpe3ZhciBfPVwiY29sb3I6IFwiK2YubmV4dFN0YXRlKHcpK1wiOyBmb250LXdlaWdodDogYm9sZFwiO3JbRl0oXCIlYyBuZXh0IHN0YXRlXCIsXyx3KX1lbHNlIHJbRl0oXCJuZXh0IHN0YXRlXCIsdyk7bCYmYihoLHcscixrKTt0cnl7ci5ncm91cEVuZCgpfWNhdGNoKGUpe3IubG9nKFwi4oCU4oCUIGxvZyBlbmQg4oCU4oCUXCIpfX0pfWZ1bmN0aW9uIFMoKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD1PYmplY3QuYXNzaWduKHt9LEwsZSkscj10LmxvZ2dlcixuPXQuc3RhdGVUcmFuc2Zvcm1lcixvPXQuZXJyb3JUcmFuc2Zvcm1lcixpPXQucHJlZGljYXRlLGE9dC5sb2dFcnJvcnMsZj10LmRpZmZQcmVkaWNhdGU7aWYoXCJ1bmRlZmluZWRcIj09dHlwZW9mIHIpcmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gZSh0KX19fTtpZihlLmdldFN0YXRlJiZlLmRpc3BhdGNoKXJldHVybiBjb25zb2xlLmVycm9yKFwiW3JlZHV4LWxvZ2dlcl0gcmVkdXgtbG9nZ2VyIG5vdCBpbnN0YWxsZWQuIE1ha2Ugc3VyZSB0byBwYXNzIGxvZ2dlciBpbnN0YW5jZSBhcyBtaWRkbGV3YXJlOlxcbi8vIExvZ2dlciB3aXRoIGRlZmF1bHQgb3B0aW9uc1xcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gJ3JlZHV4LWxvZ2dlcidcXG5jb25zdCBzdG9yZSA9IGNyZWF0ZVN0b3JlKFxcbiAgcmVkdWNlcixcXG4gIGFwcGx5TWlkZGxld2FyZShsb2dnZXIpXFxuKVxcbi8vIE9yIHlvdSBjYW4gY3JlYXRlIHlvdXIgb3duIGxvZ2dlciB3aXRoIGN1c3RvbSBvcHRpb25zIGh0dHA6Ly9iaXQubHkvcmVkdXgtbG9nZ2VyLW9wdGlvbnNcXG5pbXBvcnQgY3JlYXRlTG9nZ2VyIGZyb20gJ3JlZHV4LWxvZ2dlcidcXG5jb25zdCBsb2dnZXIgPSBjcmVhdGVMb2dnZXIoe1xcbiAgLy8gLi4ub3B0aW9uc1xcbn0pO1xcbmNvbnN0IHN0b3JlID0gY3JlYXRlU3RvcmUoXFxuICByZWR1Y2VyLFxcbiAgYXBwbHlNaWRkbGV3YXJlKGxvZ2dlcilcXG4pXFxuXCIpLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gZSh0KX19fTt2YXIgdT1bXTtyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIHI9ZS5nZXRTdGF0ZTtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKGwpe2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGkmJiFpKHIsbCkpcmV0dXJuIGUobCk7dmFyIGM9e307dS5wdXNoKGMpLGMuc3RhcnRlZD1PLm5vdygpLGMuc3RhcnRlZFRpbWU9bmV3IERhdGUsYy5wcmV2U3RhdGU9bihyKCkpLGMuYWN0aW9uPWw7dmFyIHM9dm9pZCAwO2lmKGEpdHJ5e3M9ZShsKX1jYXRjaChlKXtjLmVycm9yPW8oZSl9ZWxzZSBzPWUobCk7Yy50b29rPU8ubm93KCktYy5zdGFydGVkLGMubmV4dFN0YXRlPW4ocigpKTt2YXIgZD10LmRpZmYmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGY/ZihyLGwpOnQuZGlmZjtpZih4KHUsT2JqZWN0LmFzc2lnbih7fSx0LHtkaWZmOmR9KSksdS5sZW5ndGg9MCxjLmVycm9yKXRocm93IGMuZXJyb3I7cmV0dXJuIHN9fX19dmFyIGssaixFPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG5ldyBBcnJheSh0KzEpLmpvaW4oZSl9LEE9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gRShcIjBcIix0LWUudG9TdHJpbmcoKS5sZW5ndGgpK2V9LEQ9ZnVuY3Rpb24oZSl7cmV0dXJuIEEoZS5nZXRIb3VycygpLDIpK1wiOlwiK0EoZS5nZXRNaW51dGVzKCksMikrXCI6XCIrQShlLmdldFNlY29uZHMoKSwyKStcIi5cIitBKGUuZ2V0TWlsbGlzZWNvbmRzKCksMyl9LE89XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHBlcmZvcm1hbmNlJiZudWxsIT09cGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdz9wZXJmb3JtYW5jZTpEYXRlLE49XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZX06ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmZS5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmZSE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgZX0sUD1mdW5jdGlvbihlKXtpZihBcnJheS5pc0FycmF5KGUpKXtmb3IodmFyIHQ9MCxyPUFycmF5KGUubGVuZ3RoKTt0PGUubGVuZ3RoO3QrKylyW3RdPWVbdF07cmV0dXJuIHJ9cmV0dXJuIEFycmF5LmZyb20oZSl9LEM9W107az1cIm9iamVjdFwiPT09KFwidW5kZWZpbmVkXCI9PXR5cGVvZiBnbG9iYWw/XCJ1bmRlZmluZWRcIjpOKGdsb2JhbCkpJiZnbG9iYWw/Z2xvYmFsOlwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3c/d2luZG93Ont9LGo9ay5EZWVwRGlmZixqJiZDLnB1c2goZnVuY3Rpb24oKXtcInVuZGVmaW5lZFwiIT10eXBlb2YgaiYmay5EZWVwRGlmZj09PWMmJihrLkRlZXBEaWZmPWosaj12b2lkIDApfSksdChuLHIpLHQobyxyKSx0KGksciksdChhLHIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGMse2RpZmY6e3ZhbHVlOmMsZW51bWVyYWJsZTohMH0sb2JzZXJ2YWJsZURpZmY6e3ZhbHVlOmwsZW51bWVyYWJsZTohMH0sYXBwbHlEaWZmOnt2YWx1ZTpoLGVudW1lcmFibGU6ITB9LGFwcGx5Q2hhbmdlOnt2YWx1ZTpkLGVudW1lcmFibGU6ITB9LHJldmVydENoYW5nZTp7dmFsdWU6ZyxlbnVtZXJhYmxlOiEwfSxpc0NvbmZsaWN0Ont2YWx1ZTpmdW5jdGlvbigpe3JldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiBqfSxlbnVtZXJhYmxlOiEwfSxub0NvbmZsaWN0Ont2YWx1ZTpmdW5jdGlvbigpe3JldHVybiBDJiYoQy5mb3JFYWNoKGZ1bmN0aW9uKGUpe2UoKX0pLEM9bnVsbCksY30sZW51bWVyYWJsZTohMH19KTt2YXIgRj17RTp7Y29sb3I6XCIjMjE5NkYzXCIsdGV4dDpcIkNIQU5HRUQ6XCJ9LE46e2NvbG9yOlwiIzRDQUY1MFwiLHRleHQ6XCJBRERFRDpcIn0sRDp7Y29sb3I6XCIjRjQ0MzM2XCIsdGV4dDpcIkRFTEVURUQ6XCJ9LEE6e2NvbG9yOlwiIzIxOTZGM1wiLHRleHQ6XCJBUlJBWTpcIn19LEw9e2xldmVsOlwibG9nXCIsbG9nZ2VyOmNvbnNvbGUsbG9nRXJyb3JzOiEwLGNvbGxhcHNlZDp2b2lkIDAscHJlZGljYXRlOnZvaWQgMCxkdXJhdGlvbjohMSx0aW1lc3RhbXA6ITAsc3RhdGVUcmFuc2Zvcm1lcjpmdW5jdGlvbihlKXtyZXR1cm4gZX0sYWN0aW9uVHJhbnNmb3JtZXI6ZnVuY3Rpb24oZSl7cmV0dXJuIGV9LGVycm9yVHJhbnNmb3JtZXI6ZnVuY3Rpb24oZSl7cmV0dXJuIGV9LGNvbG9yczp7dGl0bGU6ZnVuY3Rpb24oKXtyZXR1cm5cImluaGVyaXRcIn0scHJldlN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuXCIjOUU5RTlFXCJ9LGFjdGlvbjpmdW5jdGlvbigpe3JldHVyblwiIzAzQTlGNFwifSxuZXh0U3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm5cIiM0Q0FGNTBcIn0sZXJyb3I6ZnVuY3Rpb24oKXtyZXR1cm5cIiNGMjA0MDRcIn19LGRpZmY6ITEsZGlmZlByZWRpY2F0ZTp2b2lkIDAsdHJhbnNmb3JtZXI6dm9pZCAwfSxUPWZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9ZS5kaXNwYXRjaCxyPWUuZ2V0U3RhdGU7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgdHx8XCJmdW5jdGlvblwiPT10eXBlb2Ygcj9TKCkoe2Rpc3BhdGNoOnQsZ2V0U3RhdGU6cn0pOnZvaWQgY29uc29sZS5lcnJvcihcIlxcbltyZWR1eC1sb2dnZXIgdjNdIEJSRUFLSU5HIENIQU5HRVxcbltyZWR1eC1sb2dnZXIgdjNdIFNpbmNlIDMuMC4wIHJlZHV4LWxvZ2dlciBleHBvcnRzIGJ5IGRlZmF1bHQgbG9nZ2VyIHdpdGggZGVmYXVsdCBzZXR0aW5ncy5cXG5bcmVkdXgtbG9nZ2VyIHYzXSBDaGFuZ2VcXG5bcmVkdXgtbG9nZ2VyIHYzXSBpbXBvcnQgY3JlYXRlTG9nZ2VyIGZyb20gJ3JlZHV4LWxvZ2dlcidcXG5bcmVkdXgtbG9nZ2VyIHYzXSB0b1xcbltyZWR1eC1sb2dnZXIgdjNdIGltcG9ydCB7IGNyZWF0ZUxvZ2dlciB9IGZyb20gJ3JlZHV4LWxvZ2dlcidcXG5cIil9O2UuZGVmYXVsdHM9TCxlLmNyZWF0ZUxvZ2dlcj1TLGUubG9nZ2VyPVQsZS5kZWZhdWx0PVQsT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSl9KTtcbiIsImZ1bmN0aW9uIGNyZWF0ZVRodW5rTWlkZGxld2FyZShleHRyYUFyZ3VtZW50KSB7XG4gIHJldHVybiBmdW5jdGlvbiAoX3JlZikge1xuICAgIHZhciBkaXNwYXRjaCA9IF9yZWYuZGlzcGF0Y2gsXG4gICAgICAgIGdldFN0YXRlID0gX3JlZi5nZXRTdGF0ZTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKG5leHQpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiAoYWN0aW9uKSB7XG4gICAgICAgIGlmICh0eXBlb2YgYWN0aW9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgcmV0dXJuIGFjdGlvbihkaXNwYXRjaCwgZ2V0U3RhdGUsIGV4dHJhQXJndW1lbnQpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG5leHQoYWN0aW9uKTtcbiAgICAgIH07XG4gICAgfTtcbiAgfTtcbn1cblxudmFyIHRodW5rID0gY3JlYXRlVGh1bmtNaWRkbGV3YXJlKCk7XG50aHVuay53aXRoRXh0cmFBcmd1bWVudCA9IGNyZWF0ZVRodW5rTWlkZGxld2FyZTtcblxuZXhwb3J0IGRlZmF1bHQgdGh1bms7IiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvcmlnaW5hbE1vZHVsZSkge1xuXHRpZiAoIW9yaWdpbmFsTW9kdWxlLndlYnBhY2tQb2x5ZmlsbCkge1xuXHRcdHZhciBtb2R1bGUgPSBPYmplY3QuY3JlYXRlKG9yaWdpbmFsTW9kdWxlKTtcblx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJleHBvcnRzXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWVcblx0XHR9KTtcblx0XHRtb2R1bGUud2VicGFja1BvbHlmaWxsID0gMTtcblx0fVxuXHRyZXR1cm4gbW9kdWxlO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBlbXB0eUZ1bmN0aW9uID0gcmVxdWlyZSgnZmJqcy9saWIvZW1wdHlGdW5jdGlvbicpO1xudmFyIGludmFyaWFudCA9IHJlcXVpcmUoJ2ZianMvbGliL2ludmFyaWFudCcpO1xudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGludmFyaWFudChcbiAgICAgIGZhbHNlLFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW1cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcyA9IGVtcHR5RnVuY3Rpb247XG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7Kn0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY2hlY2suXG4gKiBAcmV0dXJuIHtib29sZWFufSBXaGV0aGVyIG9yIG5vdCB0aGUgb2JqZWN0IGlzIGEgRE9NIG5vZGUuXG4gKi9cbmZ1bmN0aW9uIGlzTm9kZShvYmplY3QpIHtcbiAgdmFyIGRvYyA9IG9iamVjdCA/IG9iamVjdC5vd25lckRvY3VtZW50IHx8IG9iamVjdCA6IGRvY3VtZW50O1xuICB2YXIgZGVmYXVsdFZpZXcgPSBkb2MuZGVmYXVsdFZpZXcgfHwgd2luZG93O1xuICByZXR1cm4gISEob2JqZWN0ICYmICh0eXBlb2YgZGVmYXVsdFZpZXcuTm9kZSA9PT0gJ2Z1bmN0aW9uJyA/IG9iamVjdCBpbnN0YW5jZW9mIGRlZmF1bHRWaWV3Lk5vZGUgOiB0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0JyAmJiB0eXBlb2Ygb2JqZWN0Lm5vZGVUeXBlID09PSAnbnVtYmVyJyAmJiB0eXBlb2Ygb2JqZWN0Lm5vZGVOYW1lID09PSAnc3RyaW5nJykpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzTm9kZTsiLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xuXG52YXIgaXNOb2RlID0gcmVxdWlyZSgnLi9pc05vZGUnKTtcblxuLyoqXG4gKiBAcGFyYW0geyp9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGNoZWNrLlxuICogQHJldHVybiB7Ym9vbGVhbn0gV2hldGhlciBvciBub3QgdGhlIG9iamVjdCBpcyBhIERPTSB0ZXh0IG5vZGUuXG4gKi9cbmZ1bmN0aW9uIGlzVGV4dE5vZGUob2JqZWN0KSB7XG4gIHJldHVybiBpc05vZGUob2JqZWN0KSAmJiBvYmplY3Qubm9kZVR5cGUgPT0gMztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc1RleHROb2RlOyIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG52YXIgaXNUZXh0Tm9kZSA9IHJlcXVpcmUoJy4vaXNUZXh0Tm9kZScpO1xuXG4vKmVzbGludC1kaXNhYmxlIG5vLWJpdHdpc2UgKi9cblxuLyoqXG4gKiBDaGVja3MgaWYgYSBnaXZlbiBET00gbm9kZSBjb250YWlucyBvciBpcyBhbm90aGVyIERPTSBub2RlLlxuICovXG5mdW5jdGlvbiBjb250YWluc05vZGUob3V0ZXJOb2RlLCBpbm5lck5vZGUpIHtcbiAgaWYgKCFvdXRlck5vZGUgfHwgIWlubmVyTm9kZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSBlbHNlIGlmIChvdXRlck5vZGUgPT09IGlubmVyTm9kZSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2UgaWYgKGlzVGV4dE5vZGUob3V0ZXJOb2RlKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSBlbHNlIGlmIChpc1RleHROb2RlKGlubmVyTm9kZSkpIHtcbiAgICByZXR1cm4gY29udGFpbnNOb2RlKG91dGVyTm9kZSwgaW5uZXJOb2RlLnBhcmVudE5vZGUpO1xuICB9IGVsc2UgaWYgKCdjb250YWlucycgaW4gb3V0ZXJOb2RlKSB7XG4gICAgcmV0dXJuIG91dGVyTm9kZS5jb250YWlucyhpbm5lck5vZGUpO1xuICB9IGVsc2UgaWYgKG91dGVyTm9kZS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbikge1xuICAgIHJldHVybiAhIShvdXRlck5vZGUuY29tcGFyZURvY3VtZW50UG9zaXRpb24oaW5uZXJOb2RlKSAmIDE2KTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb250YWluc05vZGU7IiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAdHlwZWNoZWNrc1xuICogXG4gKi9cblxuLyplc2xpbnQtZGlzYWJsZSBuby1zZWxmLWNvbXBhcmUgKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIGlubGluZWQgT2JqZWN0LmlzIHBvbHlmaWxsIHRvIGF2b2lkIHJlcXVpcmluZyBjb25zdW1lcnMgc2hpcCB0aGVpciBvd25cbiAqIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL09iamVjdC9pc1xuICovXG5mdW5jdGlvbiBpcyh4LCB5KSB7XG4gIC8vIFNhbWVWYWx1ZSBhbGdvcml0aG1cbiAgaWYgKHggPT09IHkpIHtcbiAgICAvLyBTdGVwcyAxLTUsIDctMTBcbiAgICAvLyBTdGVwcyA2LmItNi5lOiArMCAhPSAtMFxuICAgIC8vIEFkZGVkIHRoZSBub256ZXJvIHkgY2hlY2sgdG8gbWFrZSBGbG93IGhhcHB5LCBidXQgaXQgaXMgcmVkdW5kYW50XG4gICAgcmV0dXJuIHggIT09IDAgfHwgeSAhPT0gMCB8fCAxIC8geCA9PT0gMSAvIHk7XG4gIH0gZWxzZSB7XG4gICAgLy8gU3RlcCA2LmE6IE5hTiA9PSBOYU5cbiAgICByZXR1cm4geCAhPT0geCAmJiB5ICE9PSB5O1xuICB9XG59XG5cbi8qKlxuICogUGVyZm9ybXMgZXF1YWxpdHkgYnkgaXRlcmF0aW5nIHRocm91Z2gga2V5cyBvbiBhbiBvYmplY3QgYW5kIHJldHVybmluZyBmYWxzZVxuICogd2hlbiBhbnkga2V5IGhhcyB2YWx1ZXMgd2hpY2ggYXJlIG5vdCBzdHJpY3RseSBlcXVhbCBiZXR3ZWVuIHRoZSBhcmd1bWVudHMuXG4gKiBSZXR1cm5zIHRydWUgd2hlbiB0aGUgdmFsdWVzIG9mIGFsbCBrZXlzIGFyZSBzdHJpY3RseSBlcXVhbC5cbiAqL1xuZnVuY3Rpb24gc2hhbGxvd0VxdWFsKG9iakEsIG9iakIpIHtcbiAgaWYgKGlzKG9iakEsIG9iakIpKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBpZiAodHlwZW9mIG9iakEgIT09ICdvYmplY3QnIHx8IG9iakEgPT09IG51bGwgfHwgdHlwZW9mIG9iakIgIT09ICdvYmplY3QnIHx8IG9iakIgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIga2V5c0EgPSBPYmplY3Qua2V5cyhvYmpBKTtcbiAgdmFyIGtleXNCID0gT2JqZWN0LmtleXMob2JqQik7XG5cbiAgaWYgKGtleXNBLmxlbmd0aCAhPT0ga2V5c0IubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgLy8gVGVzdCBmb3IgQSdzIGtleXMgZGlmZmVyZW50IGZyb20gQi5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzQS5sZW5ndGg7IGkrKykge1xuICAgIGlmICghaGFzT3duUHJvcGVydHkuY2FsbChvYmpCLCBrZXlzQVtpXSkgfHwgIWlzKG9iakFba2V5c0FbaV1dLCBvYmpCW2tleXNBW2ldXSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaGFsbG93RXF1YWw7IiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKi9cblxuLyogZXNsaW50LWRpc2FibGUgZmItd3d3L3R5cGVvZi11bmRlZmluZWQgKi9cblxuLyoqXG4gKiBTYW1lIGFzIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgYnV0IHdyYXBzIGluIGEgdHJ5LWNhdGNoIGJsb2NrLiBJbiBJRSBpdCBpc1xuICogbm90IHNhZmUgdG8gY2FsbCBkb2N1bWVudC5hY3RpdmVFbGVtZW50IGlmIHRoZXJlIGlzIG5vdGhpbmcgZm9jdXNlZC5cbiAqXG4gKiBUaGUgYWN0aXZlRWxlbWVudCB3aWxsIGJlIG51bGwgb25seSBpZiB0aGUgZG9jdW1lbnQgb3IgZG9jdW1lbnQgYm9keSBpcyBub3RcbiAqIHlldCBkZWZpbmVkLlxuICpcbiAqIEBwYXJhbSB7P0RPTURvY3VtZW50fSBkb2MgRGVmYXVsdHMgdG8gY3VycmVudCBkb2N1bWVudC5cbiAqIEByZXR1cm4gez9ET01FbGVtZW50fVxuICovXG5mdW5jdGlvbiBnZXRBY3RpdmVFbGVtZW50KGRvYykgLyo/RE9NRWxlbWVudCove1xuICBkb2MgPSBkb2MgfHwgKHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcgPyBkb2N1bWVudCA6IHVuZGVmaW5lZCk7XG4gIGlmICh0eXBlb2YgZG9jID09PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHRyeSB7XG4gICAgcmV0dXJuIGRvYy5hY3RpdmVFbGVtZW50IHx8IGRvYy5ib2R5O1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGRvYy5ib2R5O1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0QWN0aXZlRWxlbWVudDsiLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBjYW5Vc2VET00gPSAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xuXG4vKipcbiAqIFNpbXBsZSwgbGlnaHR3ZWlnaHQgbW9kdWxlIGFzc2lzdGluZyB3aXRoIHRoZSBkZXRlY3Rpb24gYW5kIGNvbnRleHQgb2ZcbiAqIFdvcmtlci4gSGVscHMgYXZvaWQgY2lyY3VsYXIgZGVwZW5kZW5jaWVzIGFuZCBhbGxvd3MgY29kZSB0byByZWFzb24gYWJvdXRcbiAqIHdoZXRoZXIgb3Igbm90IHRoZXkgYXJlIGluIGEgV29ya2VyLCBldmVuIGlmIHRoZXkgbmV2ZXIgaW5jbHVkZSB0aGUgbWFpblxuICogYFJlYWN0V29ya2VyYCBkZXBlbmRlbmN5LlxuICovXG52YXIgRXhlY3V0aW9uRW52aXJvbm1lbnQgPSB7XG5cbiAgY2FuVXNlRE9NOiBjYW5Vc2VET00sXG5cbiAgY2FuVXNlV29ya2VyczogdHlwZW9mIFdvcmtlciAhPT0gJ3VuZGVmaW5lZCcsXG5cbiAgY2FuVXNlRXZlbnRMaXN0ZW5lcnM6IGNhblVzZURPTSAmJiAhISh3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciB8fCB3aW5kb3cuYXR0YWNoRXZlbnQpLFxuXG4gIGNhblVzZVZpZXdwb3J0OiBjYW5Vc2VET00gJiYgISF3aW5kb3cuc2NyZWVuLFxuXG4gIGlzSW5Xb3JrZXI6ICFjYW5Vc2VET00gLy8gRm9yIG5vdywgdGhpcyBpcyB0cnVlIC0gbWlnaHQgY2hhbmdlIGluIHRoZSBmdXR1cmUuXG5cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRXhlY3V0aW9uRW52aXJvbm1lbnQ7IiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi40LjBcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwiZmJqcy9saWIvaW52YXJpYW50XCIpLGNhPXJlcXVpcmUoXCJyZWFjdFwiKSxtPXJlcXVpcmUoXCJmYmpzL2xpYi9FeGVjdXRpb25FbnZpcm9ubWVudFwiKSxwPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLHY9cmVxdWlyZShcImZianMvbGliL2VtcHR5RnVuY3Rpb25cIiksZGE9cmVxdWlyZShcImZianMvbGliL2dldEFjdGl2ZUVsZW1lbnRcIiksZWE9cmVxdWlyZShcImZianMvbGliL3NoYWxsb3dFcXVhbFwiKSxmYT1yZXF1aXJlKFwiZmJqcy9saWIvY29udGFpbnNOb2RlXCIpLGhhPXJlcXVpcmUoXCJmYmpzL2xpYi9lbXB0eU9iamVjdFwiKTtcbmZ1bmN0aW9uIEEoYSl7Zm9yKHZhciBiPWFyZ3VtZW50cy5sZW5ndGgtMSxjPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxkPTA7ZDxiO2QrKyljKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tkKzFdKTthYSghMSxcIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCAlcyBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuIFwiLGMpfWNhP3ZvaWQgMDpBKFwiMjI3XCIpO1xuZnVuY3Rpb24gaWEoYSxiLGMsZCxlLGYsZyxoLGspe3RoaXMuX2hhc0NhdWdodEVycm9yPSExO3RoaXMuX2NhdWdodEVycm9yPW51bGw7dmFyIG49QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsbil9Y2F0Y2gocil7dGhpcy5fY2F1Z2h0RXJyb3I9cix0aGlzLl9oYXNDYXVnaHRFcnJvcj0hMH19XG52YXIgQj17X2NhdWdodEVycm9yOm51bGwsX2hhc0NhdWdodEVycm9yOiExLF9yZXRocm93RXJyb3I6bnVsbCxfaGFzUmV0aHJvd0Vycm9yOiExLGludm9rZUd1YXJkZWRDYWxsYmFjazpmdW5jdGlvbihhLGIsYyxkLGUsZixnLGgsayl7aWEuYXBwbHkoQixhcmd1bWVudHMpfSxpbnZva2VHdWFyZGVkQ2FsbGJhY2tBbmRDYXRjaEZpcnN0RXJyb3I6ZnVuY3Rpb24oYSxiLGMsZCxlLGYsZyxoLGspe0IuaW52b2tlR3VhcmRlZENhbGxiYWNrLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihCLmhhc0NhdWdodEVycm9yKCkpe3ZhciBuPUIuY2xlYXJDYXVnaHRFcnJvcigpO0IuX2hhc1JldGhyb3dFcnJvcnx8KEIuX2hhc1JldGhyb3dFcnJvcj0hMCxCLl9yZXRocm93RXJyb3I9bil9fSxyZXRocm93Q2F1Z2h0RXJyb3I6ZnVuY3Rpb24oKXtyZXR1cm4ga2EuYXBwbHkoQixhcmd1bWVudHMpfSxoYXNDYXVnaHRFcnJvcjpmdW5jdGlvbigpe3JldHVybiBCLl9oYXNDYXVnaHRFcnJvcn0sY2xlYXJDYXVnaHRFcnJvcjpmdW5jdGlvbigpe2lmKEIuX2hhc0NhdWdodEVycm9yKXt2YXIgYT1cbkIuX2NhdWdodEVycm9yO0IuX2NhdWdodEVycm9yPW51bGw7Qi5faGFzQ2F1Z2h0RXJyb3I9ITE7cmV0dXJuIGF9QShcIjE5OFwiKX19O2Z1bmN0aW9uIGthKCl7aWYoQi5faGFzUmV0aHJvd0Vycm9yKXt2YXIgYT1CLl9yZXRocm93RXJyb3I7Qi5fcmV0aHJvd0Vycm9yPW51bGw7Qi5faGFzUmV0aHJvd0Vycm9yPSExO3Rocm93IGE7fX12YXIgbGE9bnVsbCxtYT17fTtcbmZ1bmN0aW9uIG5hKCl7aWYobGEpZm9yKHZhciBhIGluIG1hKXt2YXIgYj1tYVthXSxjPWxhLmluZGV4T2YoYSk7LTE8Yz92b2lkIDA6QShcIjk2XCIsYSk7aWYoIW9hW2NdKXtiLmV4dHJhY3RFdmVudHM/dm9pZCAwOkEoXCI5N1wiLGEpO29hW2NdPWI7Yz1iLmV2ZW50VHlwZXM7Zm9yKHZhciBkIGluIGMpe3ZhciBlPXZvaWQgMDt2YXIgZj1jW2RdLGc9YixoPWQ7cGEuaGFzT3duUHJvcGVydHkoaCk/QShcIjk5XCIsaCk6dm9pZCAwO3BhW2hdPWY7dmFyIGs9Zi5waGFzZWRSZWdpc3RyYXRpb25OYW1lcztpZihrKXtmb3IoZSBpbiBrKWsuaGFzT3duUHJvcGVydHkoZSkmJnFhKGtbZV0sZyxoKTtlPSEwfWVsc2UgZi5yZWdpc3RyYXRpb25OYW1lPyhxYShmLnJlZ2lzdHJhdGlvbk5hbWUsZyxoKSxlPSEwKTplPSExO2U/dm9pZCAwOkEoXCI5OFwiLGQsYSl9fX19XG5mdW5jdGlvbiBxYShhLGIsYyl7cmFbYV0/QShcIjEwMFwiLGEpOnZvaWQgMDtyYVthXT1iO3NhW2FdPWIuZXZlbnRUeXBlc1tjXS5kZXBlbmRlbmNpZXN9dmFyIG9hPVtdLHBhPXt9LHJhPXt9LHNhPXt9O2Z1bmN0aW9uIHRhKGEpe2xhP0EoXCIxMDFcIik6dm9pZCAwO2xhPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGEpO25hKCl9ZnVuY3Rpb24gdWEoYSl7dmFyIGI9ITEsYztmb3IoYyBpbiBhKWlmKGEuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPWFbY107bWEuaGFzT3duUHJvcGVydHkoYykmJm1hW2NdPT09ZHx8KG1hW2NdP0EoXCIxMDJcIixjKTp2b2lkIDAsbWFbY109ZCxiPSEwKX1iJiZuYSgpfVxudmFyIHZhPXtwbHVnaW5zOm9hLGV2ZW50TmFtZURpc3BhdGNoQ29uZmlnczpwYSxyZWdpc3RyYXRpb25OYW1lTW9kdWxlczpyYSxyZWdpc3RyYXRpb25OYW1lRGVwZW5kZW5jaWVzOnNhLHBvc3NpYmxlUmVnaXN0cmF0aW9uTmFtZXM6bnVsbCxpbmplY3RFdmVudFBsdWdpbk9yZGVyOnRhLGluamVjdEV2ZW50UGx1Z2luc0J5TmFtZTp1YX0sd2E9bnVsbCx4YT1udWxsLHlhPW51bGw7ZnVuY3Rpb24gemEoYSxiLGMsZCl7Yj1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD15YShkKTtCLmludm9rZUd1YXJkZWRDYWxsYmFja0FuZENhdGNoRmlyc3RFcnJvcihiLGMsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfVxuZnVuY3Rpb24gQWEoYSxiKXtudWxsPT1iP0EoXCIzMFwiKTp2b2lkIDA7aWYobnVsbD09YSlyZXR1cm4gYjtpZihBcnJheS5pc0FycmF5KGEpKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiBhLnB1c2guYXBwbHkoYSxiKSxhO2EucHVzaChiKTtyZXR1cm4gYX1yZXR1cm4gQXJyYXkuaXNBcnJheShiKT9bYV0uY29uY2F0KGIpOlthLGJdfWZ1bmN0aW9uIEJhKGEsYixjKXtBcnJheS5pc0FycmF5KGEpP2EuZm9yRWFjaChiLGMpOmEmJmIuY2FsbChjLGEpfXZhciBDYT1udWxsO1xuZnVuY3Rpb24gRGEoYSxiKXtpZihhKXt2YXIgYz1hLl9kaXNwYXRjaExpc3RlbmVycyxkPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO2lmKEFycmF5LmlzQXJyYXkoYykpZm9yKHZhciBlPTA7ZTxjLmxlbmd0aCYmIWEuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtlKyspemEoYSxiLGNbZV0sZFtlXSk7ZWxzZSBjJiZ6YShhLGIsYyxkKTthLl9kaXNwYXRjaExpc3RlbmVycz1udWxsO2EuX2Rpc3BhdGNoSW5zdGFuY2VzPW51bGw7YS5pc1BlcnNpc3RlbnQoKXx8YS5jb25zdHJ1Y3Rvci5yZWxlYXNlKGEpfX1mdW5jdGlvbiBFYShhKXtyZXR1cm4gRGEoYSwhMCl9ZnVuY3Rpb24gRmEoYSl7cmV0dXJuIERhKGEsITEpfXZhciBHYT17aW5qZWN0RXZlbnRQbHVnaW5PcmRlcjp0YSxpbmplY3RFdmVudFBsdWdpbnNCeU5hbWU6dWF9O1xuZnVuY3Rpb24gSGEoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZighYylyZXR1cm4gbnVsbDt2YXIgZD13YShjKTtpZighZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtjJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz9BKFwiMjMxXCIsYix0eXBlb2YgYyk6dm9pZCAwO1xucmV0dXJuIGN9ZnVuY3Rpb24gSWEoYSxiKXtudWxsIT09YSYmKENhPUFhKENhLGEpKTthPUNhO0NhPW51bGw7YSYmKGI/QmEoYSxFYSk6QmEoYSxGYSksQ2E/QShcIjk1XCIpOnZvaWQgMCxCLnJldGhyb3dDYXVnaHRFcnJvcigpKX1mdW5jdGlvbiBKYShhLGIsYyxkKXtmb3IodmFyIGU9bnVsbCxmPTA7ZjxvYS5sZW5ndGg7ZisrKXt2YXIgZz1vYVtmXTtnJiYoZz1nLmV4dHJhY3RFdmVudHMoYSxiLGMsZCkpJiYoZT1BYShlLGcpKX1JYShlLCExKX12YXIgS2E9e2luamVjdGlvbjpHYSxnZXRMaXN0ZW5lcjpIYSxydW5FdmVudHNJbkJhdGNoOklhLHJ1bkV4dHJhY3RlZEV2ZW50c0luQmF0Y2g6SmF9LExhPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLEM9XCJfX3JlYWN0SW50ZXJuYWxJbnN0YW5jZSRcIitMYSxNYT1cIl9fcmVhY3RFdmVudEhhbmRsZXJzJFwiK0xhO1xuZnVuY3Rpb24gTmEoYSl7aWYoYVtDXSlyZXR1cm4gYVtDXTtmb3IoOyFhW0NdOylpZihhLnBhcmVudE5vZGUpYT1hLnBhcmVudE5vZGU7ZWxzZSByZXR1cm4gbnVsbDthPWFbQ107cmV0dXJuIDU9PT1hLnRhZ3x8Nj09PWEudGFnP2E6bnVsbH1mdW5jdGlvbiBPYShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7QShcIjMzXCIpfWZ1bmN0aW9uIFBhKGEpe3JldHVybiBhW01hXXx8bnVsbH12YXIgUWE9e3ByZWNhY2hlRmliZXJOb2RlOmZ1bmN0aW9uKGEsYil7YltDXT1hfSxnZXRDbG9zZXN0SW5zdGFuY2VGcm9tTm9kZTpOYSxnZXRJbnN0YW5jZUZyb21Ob2RlOmZ1bmN0aW9uKGEpe2E9YVtDXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWc/bnVsbDphfSxnZXROb2RlRnJvbUluc3RhbmNlOk9hLGdldEZpYmVyQ3VycmVudFByb3BzRnJvbU5vZGU6UGEsdXBkYXRlRmliZXJQcm9wczpmdW5jdGlvbihhLGIpe2FbTWFdPWJ9fTtcbmZ1bmN0aW9uIEYoYSl7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1mdW5jdGlvbiBSYShhLGIsYyl7Zm9yKHZhciBkPVtdO2E7KWQucHVzaChhKSxhPUYoYSk7Zm9yKGE9ZC5sZW5ndGg7MDxhLS07KWIoZFthXSxcImNhcHR1cmVkXCIsYyk7Zm9yKGE9MDthPGQubGVuZ3RoO2ErKyliKGRbYV0sXCJidWJibGVkXCIsYyl9ZnVuY3Rpb24gU2EoYSxiLGMpe2lmKGI9SGEoYSxjLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzW2JdKSljLl9kaXNwYXRjaExpc3RlbmVycz1BYShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz1BYShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKX1mdW5jdGlvbiBUYShhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzJiZSYShhLl90YXJnZXRJbnN0LFNhLGEpfVxuZnVuY3Rpb24gVWEoYSl7aWYoYSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyl7dmFyIGI9YS5fdGFyZ2V0SW5zdDtiPWI/RihiKTpudWxsO1JhKGIsU2EsYSl9fWZ1bmN0aW9uIFZhKGEsYixjKXthJiZjJiZjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJihiPUhhKGEsYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lKSkmJihjLl9kaXNwYXRjaExpc3RlbmVycz1BYShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz1BYShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKSl9ZnVuY3Rpb24gWGEoYSl7YSYmYS5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiZWYShhLl90YXJnZXRJbnN0LG51bGwsYSl9ZnVuY3Rpb24gWWEoYSl7QmEoYSxUYSl9XG5mdW5jdGlvbiBaYShhLGIsYyxkKXtpZihjJiZkKWE6e3ZhciBlPWM7Zm9yKHZhciBmPWQsZz0wLGg9ZTtoO2g9RihoKSlnKys7aD0wO2Zvcih2YXIgaz1mO2s7az1GKGspKWgrKztmb3IoOzA8Zy1oOyllPUYoZSksZy0tO2Zvcig7MDxoLWc7KWY9RihmKSxoLS07Zm9yKDtnLS07KXtpZihlPT09Znx8ZT09PWYuYWx0ZXJuYXRlKWJyZWFrIGE7ZT1GKGUpO2Y9RihmKX1lPW51bGx9ZWxzZSBlPW51bGw7Zj1lO2ZvcihlPVtdO2MmJmMhPT1mOyl7Zz1jLmFsdGVybmF0ZTtpZihudWxsIT09ZyYmZz09PWYpYnJlYWs7ZS5wdXNoKGMpO2M9RihjKX1mb3IoYz1bXTtkJiZkIT09Zjspe2c9ZC5hbHRlcm5hdGU7aWYobnVsbCE9PWcmJmc9PT1mKWJyZWFrO2MucHVzaChkKTtkPUYoZCl9Zm9yKGQ9MDtkPGUubGVuZ3RoO2QrKylWYShlW2RdLFwiYnViYmxlZFwiLGEpO2ZvcihhPWMubGVuZ3RoOzA8YS0tOylWYShjW2FdLFwiY2FwdHVyZWRcIixiKX1cbnZhciAkYT17YWNjdW11bGF0ZVR3b1BoYXNlRGlzcGF0Y2hlczpZYSxhY2N1bXVsYXRlVHdvUGhhc2VEaXNwYXRjaGVzU2tpcFRhcmdldDpmdW5jdGlvbihhKXtCYShhLFVhKX0sYWNjdW11bGF0ZUVudGVyTGVhdmVEaXNwYXRjaGVzOlphLGFjY3VtdWxhdGVEaXJlY3REaXNwYXRjaGVzOmZ1bmN0aW9uKGEpe0JhKGEsWGEpfX07ZnVuY3Rpb24gYWIoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtjW1wibXNcIithXT1cIk1TXCIrYjtjW1wiT1wiK2FdPVwib1wiK2IudG9Mb3dlckNhc2UoKTtyZXR1cm4gY31cbnZhciBiYj17YW5pbWF0aW9uZW5kOmFiKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOmFiKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6YWIoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6YWIoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxjYj17fSxkYj17fTttLmNhblVzZURPTSYmKGRiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIGJiLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIGJiLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIGJiLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIGJiLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7XG5mdW5jdGlvbiBlYihhKXtpZihjYlthXSlyZXR1cm4gY2JbYV07aWYoIWJiW2FdKXJldHVybiBhO3ZhciBiPWJiW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIGRiKXJldHVybiBjYlthXT1iW2NdO3JldHVybiBhfXZhciBmYj1lYihcImFuaW1hdGlvbmVuZFwiKSxnYj1lYihcImFuaW1hdGlvbml0ZXJhdGlvblwiKSxoYj1lYihcImFuaW1hdGlvbnN0YXJ0XCIpLGliPWViKFwidHJhbnNpdGlvbmVuZFwiKSxqYj1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksa2I9bnVsbDtcbmZ1bmN0aW9uIGxiKCl7IWtiJiZtLmNhblVzZURPTSYmKGtiPVwidGV4dENvbnRlbnRcImluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudD9cInRleHRDb250ZW50XCI6XCJpbm5lclRleHRcIik7cmV0dXJuIGtifXZhciBHPXtfcm9vdDpudWxsLF9zdGFydFRleHQ6bnVsbCxfZmFsbGJhY2tUZXh0Om51bGx9O2Z1bmN0aW9uIG1iKCl7aWYoRy5fZmFsbGJhY2tUZXh0KXJldHVybiBHLl9mYWxsYmFja1RleHQ7dmFyIGEsYj1HLl9zdGFydFRleHQsYz1iLmxlbmd0aCxkLGU9bmIoKSxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO0cuX2ZhbGxiYWNrVGV4dD1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApO3JldHVybiBHLl9mYWxsYmFja1RleHR9ZnVuY3Rpb24gbmIoKXtyZXR1cm5cInZhbHVlXCJpbiBHLl9yb290P0cuX3Jvb3QudmFsdWU6Ry5fcm9vdFtsYigpXX1cbnZhciBvYj1cImRpc3BhdGNoQ29uZmlnIF90YXJnZXRJbnN0IG5hdGl2ZUV2ZW50IGlzRGVmYXVsdFByZXZlbnRlZCBpc1Byb3BhZ2F0aW9uU3RvcHBlZCBfZGlzcGF0Y2hMaXN0ZW5lcnMgX2Rpc3BhdGNoSW5zdGFuY2VzXCIuc3BsaXQoXCIgXCIpLHBiPXt0eXBlOm51bGwsdGFyZ2V0Om51bGwsY3VycmVudFRhcmdldDp2LnRoYXRSZXR1cm5zTnVsbCxldmVudFBoYXNlOm51bGwsYnViYmxlczpudWxsLGNhbmNlbGFibGU6bnVsbCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOm51bGwsaXNUcnVzdGVkOm51bGx9O1xuZnVuY3Rpb24gSChhLGIsYyxkKXt0aGlzLmRpc3BhdGNoQ29uZmlnPWE7dGhpcy5fdGFyZ2V0SW5zdD1iO3RoaXMubmF0aXZlRXZlbnQ9YzthPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlO2Zvcih2YXIgZSBpbiBhKWEuaGFzT3duUHJvcGVydHkoZSkmJigoYj1hW2VdKT90aGlzW2VdPWIoYyk6XCJ0YXJnZXRcIj09PWU/dGhpcy50YXJnZXQ9ZDp0aGlzW2VdPWNbZV0pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1jLmRlZmF1bHRQcmV2ZW50ZWQ/Yy5kZWZhdWx0UHJldmVudGVkOiExPT09Yy5yZXR1cm5WYWx1ZSk/di50aGF0UmV0dXJuc1RydWU6di50aGF0UmV0dXJuc0ZhbHNlO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9di50aGF0UmV0dXJuc0ZhbHNlO3JldHVybiB0aGlzfVxucChILnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPXYudGhhdFJldHVybnNUcnVlKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXYudGhhdFJldHVybnNUcnVlKX0scGVyc2lzdDpmdW5jdGlvbigpe3RoaXMuaXNQZXJzaXN0ZW50PXYudGhhdFJldHVybnNUcnVlfSxpc1BlcnNpc3RlbnQ6di50aGF0UmV0dXJuc0ZhbHNlLFxuZGVzdHJ1Y3RvcjpmdW5jdGlvbigpe3ZhciBhPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlLGI7Zm9yKGIgaW4gYSl0aGlzW2JdPW51bGw7Zm9yKGE9MDthPG9iLmxlbmd0aDthKyspdGhpc1tvYlthXV09bnVsbH19KTtILkludGVyZmFjZT1wYjtILmV4dGVuZD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7fWZ1bmN0aW9uIGMoKXtyZXR1cm4gZC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGQ9dGhpcztiLnByb3RvdHlwZT1kLnByb3RvdHlwZTt2YXIgZT1uZXcgYjtwKGUsYy5wcm90b3R5cGUpO2MucHJvdG90eXBlPWU7Yy5wcm90b3R5cGUuY29uc3RydWN0b3I9YztjLkludGVyZmFjZT1wKHt9LGQuSW50ZXJmYWNlLGEpO2MuZXh0ZW5kPWQuZXh0ZW5kO3FiKGMpO3JldHVybiBjfTtxYihIKTtcbmZ1bmN0aW9uIHJiKGEsYixjLGQpe2lmKHRoaXMuZXZlbnRQb29sLmxlbmd0aCl7dmFyIGU9dGhpcy5ldmVudFBvb2wucG9wKCk7dGhpcy5jYWxsKGUsYSxiLGMsZCk7cmV0dXJuIGV9cmV0dXJuIG5ldyB0aGlzKGEsYixjLGQpfWZ1bmN0aW9uIHNiKGEpe2EgaW5zdGFuY2VvZiB0aGlzP3ZvaWQgMDpBKFwiMjIzXCIpO2EuZGVzdHJ1Y3RvcigpOzEwPnRoaXMuZXZlbnRQb29sLmxlbmd0aCYmdGhpcy5ldmVudFBvb2wucHVzaChhKX1mdW5jdGlvbiBxYihhKXthLmV2ZW50UG9vbD1bXTthLmdldFBvb2xlZD1yYjthLnJlbGVhc2U9c2J9dmFyIHRiPUguZXh0ZW5kKHtkYXRhOm51bGx9KSx1Yj1ILmV4dGVuZCh7ZGF0YTpudWxsfSksdmI9WzksMTMsMjcsMzJdLHdiPW0uY2FuVXNlRE9NJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyx4Yj1udWxsO20uY2FuVXNlRE9NJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJih4Yj1kb2N1bWVudC5kb2N1bWVudE1vZGUpO1xudmFyIHliPW0uY2FuVXNlRE9NJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYheGIsemI9bS5jYW5Vc2VET00mJighd2J8fHhiJiY4PHhiJiYxMT49eGIpLEFiPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLEJiPXtiZWZvcmVJbnB1dDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkJlZm9yZUlucHV0XCIsY2FwdHVyZWQ6XCJvbkJlZm9yZUlucHV0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdfSxjb21wb3NpdGlvbkVuZDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uRW5kXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uRW5kQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uZW5kIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblN0YXJ0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxuY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25VcGRhdGU6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblVwZGF0ZVwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvblVwZGF0ZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnVwZGF0ZSBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX19LENiPSExO1xuZnVuY3Rpb24gRGIoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT12Yi5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiYmx1clwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIEViKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIEZiPSExO2Z1bmN0aW9uIEdiKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBFYihiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7Q2I9ITA7cmV0dXJuIEFiO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PUFiJiZDYj9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBIYihhLGIpe2lmKEZiKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCF3YiYmRGIoYSxiKT8oYT1tYigpLEcuX3Jvb3Q9bnVsbCxHLl9zdGFydFRleHQ9bnVsbCxHLl9mYWxsYmFja1RleHQ9bnVsbCxGYj0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwicGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwia2V5cHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gemI/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgSWI9e2V2ZW50VHlwZXM6QmIsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT12b2lkIDA7dmFyIGY9dm9pZCAwO2lmKHdiKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOmU9QmIuY29tcG9zaXRpb25TdGFydDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmU9QmIuY29tcG9zaXRpb25FbmQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjplPUJiLmNvbXBvc2l0aW9uVXBkYXRlO2JyZWFrIGJ9ZT12b2lkIDB9ZWxzZSBGYj9EYihhLGMpJiYoZT1CYi5jb21wb3NpdGlvbkVuZCk6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihlPUJiLmNvbXBvc2l0aW9uU3RhcnQpO2U/KHpiJiYoRmJ8fGUhPT1CYi5jb21wb3NpdGlvblN0YXJ0P2U9PT1CYi5jb21wb3NpdGlvbkVuZCYmRmImJihmPW1iKCkpOihHLl9yb290PWQsRy5fc3RhcnRUZXh0PW5iKCksRmI9ITApKSxlPXRiLmdldFBvb2xlZChlLGIsYyxkKSxmP2UuZGF0YT1cbmY6KGY9RWIoYyksbnVsbCE9PWYmJihlLmRhdGE9ZikpLFlhKGUpLGY9ZSk6Zj1udWxsOyhhPXliP0diKGEsYyk6SGIoYSxjKSk/KGI9dWIuZ2V0UG9vbGVkKEJiLmJlZm9yZUlucHV0LGIsYyxkKSxiLmRhdGE9YSxZYShiKSk6Yj1udWxsO3JldHVybiBudWxsPT09Zj9iOm51bGw9PT1iP2Y6W2YsYl19fSxKYj1udWxsLEtiPXtpbmplY3RGaWJlckNvbnRyb2xsZWRIb3N0Q29tcG9uZW50OmZ1bmN0aW9uKGEpe0piPWF9fSxMYj1udWxsLE1iPW51bGw7ZnVuY3Rpb24gTmIoYSl7aWYoYT14YShhKSl7SmImJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBKYi5yZXN0b3JlQ29udHJvbGxlZFN0YXRlP3ZvaWQgMDpBKFwiMTk0XCIpO3ZhciBiPXdhKGEuc3RhdGVOb2RlKTtKYi5yZXN0b3JlQ29udHJvbGxlZFN0YXRlKGEuc3RhdGVOb2RlLGEudHlwZSxiKX19ZnVuY3Rpb24gT2IoYSl7TGI/TWI/TWIucHVzaChhKTpNYj1bYV06TGI9YX1cbmZ1bmN0aW9uIFBiKCl7cmV0dXJuIG51bGwhPT1MYnx8bnVsbCE9PU1ifWZ1bmN0aW9uIFFiKCl7aWYoTGIpe3ZhciBhPUxiLGI9TWI7TWI9TGI9bnVsbDtOYihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspTmIoYlthXSl9fXZhciBSYj17aW5qZWN0aW9uOktiLGVucXVldWVTdGF0ZVJlc3RvcmU6T2IsbmVlZHNTdGF0ZVJlc3RvcmU6UGIscmVzdG9yZVN0YXRlSWZOZWVkZWQ6UWJ9O2Z1bmN0aW9uIFNiKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gVGIoYSxiLGMpe3JldHVybiBhKGIsYyl9ZnVuY3Rpb24gVWIoKXt9dmFyIFZiPSExO2Z1bmN0aW9uIFdiKGEsYil7aWYoVmIpcmV0dXJuIGEoYik7VmI9ITA7dHJ5e3JldHVybiBTYihhLGIpfWZpbmFsbHl7VmI9ITEsUGIoKSYmKFViKCksUWIoKSl9fVxudmFyIFhiPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIFliKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhWGJbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfWZ1bmN0aW9uIFpiKGEpe2E9YS50YXJnZXR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9XG5mdW5jdGlvbiAkYihhLGIpe2lmKCFtLmNhblVzZURPTXx8YiYmIShcImFkZEV2ZW50TGlzdGVuZXJcImluIGRvY3VtZW50KSlyZXR1cm4hMTthPVwib25cIithO2I9YSBpbiBkb2N1bWVudDtifHwoYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGIuc2V0QXR0cmlidXRlKGEsXCJyZXR1cm47XCIpLGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGJbYV0pO3JldHVybiBifWZ1bmN0aW9uIGFjKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiBiYyhhKXt2YXIgYj1hYyhhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24gY2MoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPWJjKGEpKX1mdW5jdGlvbiBkYyhhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9YWMoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1cbnZhciBlYz1jYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRC5SZWFjdEN1cnJlbnRPd25lcixJPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsZmM9ST9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxnYz1JP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsaGM9ST9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsaWM9ST9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsamM9ST9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsbWM9ST9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksbmM9ST9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxvYz1JP1N5bWJvbC5mb3IoXCJyZWFjdC5hc3luY19tb2RlXCIpOjYwMTExLHBjPUk/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHFjPUk/U3ltYm9sLmZvcihcInJlYWN0LnRpbWVvdXRcIik6XG42MDExMyxyYz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gc2MoYSl7aWYobnVsbD09PWF8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPXJjJiZhW3JjXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfVxuZnVuY3Rpb24gdGMoYSl7dmFyIGI9YS50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXJldHVybiBiLmRpc3BsYXlOYW1lfHxiLm5hbWU7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBiKXJldHVybiBiO3N3aXRjaChiKXtjYXNlIG9jOnJldHVyblwiQXN5bmNNb2RlXCI7Y2FzZSBuYzpyZXR1cm5cIkNvbnRleHQuQ29uc3VtZXJcIjtjYXNlIGhjOnJldHVyblwiUmVhY3RGcmFnbWVudFwiO2Nhc2UgZ2M6cmV0dXJuXCJSZWFjdFBvcnRhbFwiO2Nhc2UgamM6cmV0dXJuXCJQcm9maWxlcihcIithLnBlbmRpbmdQcm9wcy5pZCtcIilcIjtjYXNlIG1jOnJldHVyblwiQ29udGV4dC5Qcm92aWRlclwiO2Nhc2UgaWM6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBxYzpyZXR1cm5cIlRpbWVvdXRcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXN3aXRjaChiLiQkdHlwZW9mKXtjYXNlIHBjOnJldHVybiBhPWIucmVuZGVyLmRpc3BsYXlOYW1lfHxiLnJlbmRlci5uYW1lfHxcIlwiLFwiXCIhPT1hP1wiRm9yd2FyZFJlZihcIitcbmErXCIpXCI6XCJGb3J3YXJkUmVmXCJ9cmV0dXJuIG51bGx9ZnVuY3Rpb24gdmMoYSl7dmFyIGI9XCJcIjtkb3thOnN3aXRjaChhLnRhZyl7Y2FzZSAwOmNhc2UgMTpjYXNlIDI6Y2FzZSA1OnZhciBjPWEuX2RlYnVnT3duZXIsZD1hLl9kZWJ1Z1NvdXJjZTt2YXIgZT10YyhhKTt2YXIgZj1udWxsO2MmJihmPXRjKGMpKTtjPWQ7ZT1cIlxcbiAgICBpbiBcIisoZXx8XCJVbmtub3duXCIpKyhjP1wiIChhdCBcIitjLmZpbGVOYW1lLnJlcGxhY2UoL14uKltcXFxcXFwvXS8sXCJcIikrXCI6XCIrYy5saW5lTnVtYmVyK1wiKVwiOmY/XCIgKGNyZWF0ZWQgYnkgXCIrZitcIilcIjpcIlwiKTticmVhayBhO2RlZmF1bHQ6ZT1cIlwifWIrPWU7YT1hLnJldHVybn13aGlsZShhKTtyZXR1cm4gYn1cbnZhciB3Yz0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8seGM9e30seWM9e307ZnVuY3Rpb24gemMoYSl7aWYoeWMuaGFzT3duUHJvcGVydHkoYSkpcmV0dXJuITA7aWYoeGMuaGFzT3duUHJvcGVydHkoYSkpcmV0dXJuITE7aWYod2MudGVzdChhKSlyZXR1cm4geWNbYV09ITA7eGNbYV09ITA7cmV0dXJuITF9XG5mdW5jdGlvbiBBYyhhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBCYyhhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxBYyhhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfVxuZnVuY3Rpb24gSihhLGIsYyxkLGUpe3RoaXMuYWNjZXB0c0Jvb2xlYW5zPTI9PT1ifHwzPT09Ynx8ND09PWI7dGhpcy5hdHRyaWJ1dGVOYW1lPWQ7dGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZTt0aGlzLm11c3RVc2VQcm9wZXJ0eT1jO3RoaXMucHJvcGVydHlOYW1lPWE7dGhpcy50eXBlPWJ9dmFyIEs9e307XCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtLW2FdPW5ldyBKKGEsMCwhMSxhLG51bGwpfSk7XG5bW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07S1tiXT1uZXcgSihiLDEsITEsYVsxXSxudWxsKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0tbYV09bmV3IEooYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO1tcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7S1thXT1uZXcgSihhLDIsITEsYSxudWxsKX0pO1xuXCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtLW2FdPW5ldyBKKGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtbXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7S1thXT1uZXcgSihhLDMsITAsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7W1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtLW2FdPW5ldyBKKGEsNCwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtcbltcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtLW2FdPW5ldyBKKGEsNiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0tbYV09bmV3IEooYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO3ZhciBDYz0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIERjKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKENjLFxuRGMpO0tbYl09bmV3IEooYiwxLCExLGEsbnVsbCl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpocmVmIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKENjLERjKTtLW2JdPW5ldyBKKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKENjLERjKTtLW2JdPW5ldyBKKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIpfSk7Sy50YWJJbmRleD1uZXcgSihcInRhYkluZGV4XCIsMSwhMSxcInRhYmluZGV4XCIsbnVsbCk7XG5mdW5jdGlvbiBFYyhhLGIsYyxkKXt2YXIgZT1LLmhhc093blByb3BlcnR5KGIpP0tbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChCYyhiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/emMoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbmZ1bmN0aW9uIEZjKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBwKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1mdW5jdGlvbiBHYyhhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz1IYyhudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIEljKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmRWMoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIEpjKGEsYil7SWMoYSxiKTt2YXIgYz1IYyhiLnZhbHVlKTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1iLnR5cGUpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP0tjKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJktjKGEsYi50eXBlLEhjKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gTGMoYSxiKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpXCJcIj09PWEudmFsdWUmJihhLnZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSksYS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2I9YS5uYW1lO1wiXCIhPT1iJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9IWEuZGVmYXVsdENoZWNrZWQ7YS5kZWZhdWx0Q2hlY2tlZD0hYS5kZWZhdWx0Q2hlY2tlZDtcIlwiIT09YiYmKGEubmFtZT1iKX1mdW5jdGlvbiBLYyhhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fGEub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50IT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9XG5mdW5jdGlvbiBIYyhhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19dmFyIE1jPXtjaGFuZ2U6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25DaGFuZ2VcIixjYXB0dXJlZDpcIm9uQ2hhbmdlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNoYW5nZSBjbGljayBmb2N1cyBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19O2Z1bmN0aW9uIE5jKGEsYixjKXthPUguZ2V0UG9vbGVkKE1jLmNoYW5nZSxhLGIsYyk7YS50eXBlPVwiY2hhbmdlXCI7T2IoYyk7WWEoYSk7cmV0dXJuIGF9dmFyIE9jPW51bGwsUGM9bnVsbDtmdW5jdGlvbiBRYyhhKXtJYShhLCExKX1mdW5jdGlvbiBSYyhhKXt2YXIgYj1PYShhKTtpZihkYyhiKSlyZXR1cm4gYX1cbmZ1bmN0aW9uIFNjKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIFRjPSExO20uY2FuVXNlRE9NJiYoVGM9JGIoXCJpbnB1dFwiKSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKSk7ZnVuY3Rpb24gVWMoKXtPYyYmKE9jLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLFZjKSxQYz1PYz1udWxsKX1mdW5jdGlvbiBWYyhhKXtcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmUmMoUGMpJiYoYT1OYyhQYyxhLFpiKGEpKSxXYihRYyxhKSl9ZnVuY3Rpb24gV2MoYSxiLGMpe1wiZm9jdXNcIj09PWE/KFVjKCksT2M9YixQYz1jLE9jLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLFZjKSk6XCJibHVyXCI9PT1hJiZVYygpfWZ1bmN0aW9uIFhjKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIFJjKFBjKX1cbmZ1bmN0aW9uIFljKGEsYil7aWYoXCJjbGlja1wiPT09YSlyZXR1cm4gUmMoYil9ZnVuY3Rpb24gWmMoYSxiKXtpZihcImlucHV0XCI9PT1hfHxcImNoYW5nZVwiPT09YSlyZXR1cm4gUmMoYil9XG52YXIgJGM9e2V2ZW50VHlwZXM6TWMsX2lzSW5wdXRFdmVudFN1cHBvcnRlZDpUYyxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWI/T2EoYik6d2luZG93LGY9dm9pZCAwLGc9dm9pZCAwLGg9ZS5ub2RlTmFtZSYmZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1wic2VsZWN0XCI9PT1ofHxcImlucHV0XCI9PT1oJiZcImZpbGVcIj09PWUudHlwZT9mPVNjOlliKGUpP1RjP2Y9WmM6KGY9WGMsZz1XYyk6KGg9ZS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWgudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWUudHlwZXx8XCJyYWRpb1wiPT09ZS50eXBlKSYmKGY9WWMpO2lmKGYmJihmPWYoYSxiKSkpcmV0dXJuIE5jKGYsYyxkKTtnJiZnKGEsZSxiKTtcImJsdXJcIj09PWEmJm51bGwhPWImJihhPWIuX3dyYXBwZXJTdGF0ZXx8ZS5fd3JhcHBlclN0YXRlKSYmYS5jb250cm9sbGVkJiZcIm51bWJlclwiPT09ZS50eXBlJiZLYyhlLFwibnVtYmVyXCIsZS52YWx1ZSl9fSxhZD1ILmV4dGVuZCh7dmlldzpudWxsLFxuZGV0YWlsOm51bGx9KSxiZD17QWx0OlwiYWx0S2V5XCIsQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gY2QoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1iZFthXSk/ISFiW2FdOiExfWZ1bmN0aW9uIGRkKCl7cmV0dXJuIGNkfVxudmFyIGVkPWFkLmV4dGVuZCh7c2NyZWVuWDpudWxsLHNjcmVlblk6bnVsbCxjbGllbnRYOm51bGwsY2xpZW50WTpudWxsLHBhZ2VYOm51bGwscGFnZVk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpkZCxidXR0b246bnVsbCxidXR0b25zOm51bGwscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gYS5yZWxhdGVkVGFyZ2V0fHwoYS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50KX19KSxmZD1lZC5leHRlbmQoe3BvaW50ZXJJZDpudWxsLHdpZHRoOm51bGwsaGVpZ2h0Om51bGwscHJlc3N1cmU6bnVsbCx0aWx0WDpudWxsLHRpbHRZOm51bGwscG9pbnRlclR5cGU6bnVsbCxpc1ByaW1hcnk6bnVsbH0pLGdkPXttb3VzZUVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUVudGVyXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LFxubW91c2VMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxwb2ludGVyRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJFbnRlclwiLGRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX0scG9pbnRlckxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyTGVhdmVcIixkZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19fSxoZD17ZXZlbnRUeXBlczpnZCxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hLGY9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGUmJihjLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpfHwhZiYmIWUpcmV0dXJuIG51bGw7ZT1kLndpbmRvdz09PWQ/ZDooZT1kLm93bmVyRG9jdW1lbnQpP2UuZGVmYXVsdFZpZXd8fFxuZS5wYXJlbnRXaW5kb3c6d2luZG93O2Y/KGY9YixiPShiPWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQpP05hKGIpOm51bGwpOmY9bnVsbDtpZihmPT09YilyZXR1cm4gbnVsbDt2YXIgZz12b2lkIDAsaD12b2lkIDAsaz12b2lkIDAsbj12b2lkIDA7aWYoXCJtb3VzZW91dFwiPT09YXx8XCJtb3VzZW92ZXJcIj09PWEpZz1lZCxoPWdkLm1vdXNlTGVhdmUsaz1nZC5tb3VzZUVudGVyLG49XCJtb3VzZVwiO2Vsc2UgaWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKWc9ZmQsaD1nZC5wb2ludGVyTGVhdmUsaz1nZC5wb2ludGVyRW50ZXIsbj1cInBvaW50ZXJcIjthPW51bGw9PWY/ZTpPYShmKTtlPW51bGw9PWI/ZTpPYShiKTtoPWcuZ2V0UG9vbGVkKGgsZixjLGQpO2gudHlwZT1uK1wibGVhdmVcIjtoLnRhcmdldD1hO2gucmVsYXRlZFRhcmdldD1lO2M9Zy5nZXRQb29sZWQoayxiLGMsZCk7Yy50eXBlPW4rXCJlbnRlclwiO2MudGFyZ2V0PWU7Yy5yZWxhdGVkVGFyZ2V0PWE7WmEoaCxcbmMsZixiKTtyZXR1cm5baCxjXX19O2Z1bmN0aW9uIGlkKGEpe3ZhciBiPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiLnJldHVybjspYj1iLnJldHVybjtlbHNle2lmKDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDE7Zm9yKDtiLnJldHVybjspaWYoYj1iLnJldHVybiwwIT09KGIuZWZmZWN0VGFnJjIpKXJldHVybiAxfXJldHVybiAzPT09Yi50YWc/MjozfWZ1bmN0aW9uIGpkKGEpezIhPT1pZChhKT9BKFwiMTg4XCIpOnZvaWQgMH1cbmZ1bmN0aW9uIGtkKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXJldHVybiBiPWlkKGEpLDM9PT1iP0EoXCIxODhcIik6dm9pZCAwLDE9PT1iP251bGw6YTtmb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm4sZj1lP2UuYWx0ZXJuYXRlOm51bGw7aWYoIWV8fCFmKWJyZWFrO2lmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IodmFyIGc9ZS5jaGlsZDtnOyl7aWYoZz09PWMpcmV0dXJuIGpkKGUpLGE7aWYoZz09PWQpcmV0dXJuIGpkKGUpLGI7Zz1nLnNpYmxpbmd9QShcIjE4OFwiKX1pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtnPSExO2Zvcih2YXIgaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31nP1xudm9pZCAwOkEoXCIxODlcIil9fWMuYWx0ZXJuYXRlIT09ZD9BKFwiMTkwXCIpOnZvaWQgMH0zIT09Yy50YWc/QShcIjE4OFwiKTp2b2lkIDA7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBsZChhKXthPWtkKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gbWQoYSl7YT1rZChhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkJiY0IT09Yi50YWcpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfXZhciBuZD1ILmV4dGVuZCh7YW5pbWF0aW9uTmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksb2Q9SC5leHRlbmQoe2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxwZD1hZC5leHRlbmQoe3JlbGF0ZWRUYXJnZXQ6bnVsbH0pO1xuZnVuY3Rpb24gcWQoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9XG52YXIgcmQ9e0VzYzpcIkVzY2FwZVwiLFNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LHNkPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLFxuMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifSx0ZD1hZC5leHRlbmQoe2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9cmRbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9cWQoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP3NkW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sbG9jYXRpb246bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwscmVwZWF0Om51bGwsbG9jYWxlOm51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpkZCxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9xZChhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9xZChhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLHVkPWVkLmV4dGVuZCh7ZGF0YVRyYW5zZmVyOm51bGx9KSx2ZD1hZC5leHRlbmQoe3RvdWNoZXM6bnVsbCx0YXJnZXRUb3VjaGVzOm51bGwsY2hhbmdlZFRvdWNoZXM6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpkZH0pLHdkPUguZXh0ZW5kKHtwcm9wZXJ0eU5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLHhkPWVkLmV4dGVuZCh7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluXG5hPy1hLndoZWVsRGVsdGFYOjB9LGRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjpudWxsLGRlbHRhTW9kZTpudWxsfSkseWQ9W1tcImFib3J0XCIsXCJhYm9ydFwiXSxbZmIsXCJhbmltYXRpb25FbmRcIl0sW2diLFwiYW5pbWF0aW9uSXRlcmF0aW9uXCJdLFtoYixcImFuaW1hdGlvblN0YXJ0XCJdLFtcImNhbnBsYXlcIixcImNhblBsYXlcIl0sW1wiY2FucGxheXRocm91Z2hcIixcImNhblBsYXlUaHJvdWdoXCJdLFtcImRyYWdcIixcImRyYWdcIl0sW1wiZHJhZ2VudGVyXCIsXCJkcmFnRW50ZXJcIl0sW1wiZHJhZ2V4aXRcIixcImRyYWdFeGl0XCJdLFtcImRyYWdsZWF2ZVwiLFwiZHJhZ0xlYXZlXCJdLFtcImRyYWdvdmVyXCIsXCJkcmFnT3ZlclwiXSxbXCJkdXJhdGlvbmNoYW5nZVwiLFwiZHVyYXRpb25DaGFuZ2VcIl0sW1wiZW1wdGllZFwiLFwiZW1wdGllZFwiXSxbXCJlbmNyeXB0ZWRcIixcImVuY3J5cHRlZFwiXSxcbltcImVuZGVkXCIsXCJlbmRlZFwiXSxbXCJlcnJvclwiLFwiZXJyb3JcIl0sW1wiZ290cG9pbnRlcmNhcHR1cmVcIixcImdvdFBvaW50ZXJDYXB0dXJlXCJdLFtcImxvYWRcIixcImxvYWRcIl0sW1wibG9hZGVkZGF0YVwiLFwibG9hZGVkRGF0YVwiXSxbXCJsb2FkZWRtZXRhZGF0YVwiLFwibG9hZGVkTWV0YWRhdGFcIl0sW1wibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIl0sW1wibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIl0sW1wibW91c2Vtb3ZlXCIsXCJtb3VzZU1vdmVcIl0sW1wibW91c2VvdXRcIixcIm1vdXNlT3V0XCJdLFtcIm1vdXNlb3ZlclwiLFwibW91c2VPdmVyXCJdLFtcInBsYXlpbmdcIixcInBsYXlpbmdcIl0sW1wicG9pbnRlcm1vdmVcIixcInBvaW50ZXJNb3ZlXCJdLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJPdXRcIl0sW1wicG9pbnRlcm92ZXJcIixcInBvaW50ZXJPdmVyXCJdLFtcInByb2dyZXNzXCIsXCJwcm9ncmVzc1wiXSxbXCJzY3JvbGxcIixcInNjcm9sbFwiXSxbXCJzZWVraW5nXCIsXCJzZWVraW5nXCJdLFtcInN0YWxsZWRcIixcInN0YWxsZWRcIl0sXG5bXCJzdXNwZW5kXCIsXCJzdXNwZW5kXCJdLFtcInRpbWV1cGRhdGVcIixcInRpbWVVcGRhdGVcIl0sW1widG9nZ2xlXCIsXCJ0b2dnbGVcIl0sW1widG91Y2htb3ZlXCIsXCJ0b3VjaE1vdmVcIl0sW2liLFwidHJhbnNpdGlvbkVuZFwiXSxbXCJ3YWl0aW5nXCIsXCJ3YWl0aW5nXCJdLFtcIndoZWVsXCIsXCJ3aGVlbFwiXV0semQ9e30sQWQ9e307ZnVuY3Rpb24gQmQoYSxiKXt2YXIgYz1hWzBdO2E9YVsxXTt2YXIgZD1cIm9uXCIrKGFbMF0udG9VcHBlckNhc2UoKSthLnNsaWNlKDEpKTtiPXtwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpkLGNhcHR1cmVkOmQrXCJDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbY10saXNJbnRlcmFjdGl2ZTpifTt6ZFthXT1iO0FkW2NdPWJ9XG5bW1wiYmx1clwiLFwiYmx1clwiXSxbXCJjYW5jZWxcIixcImNhbmNlbFwiXSxbXCJjbGlja1wiLFwiY2xpY2tcIl0sW1wiY2xvc2VcIixcImNsb3NlXCJdLFtcImNvbnRleHRtZW51XCIsXCJjb250ZXh0TWVudVwiXSxbXCJjb3B5XCIsXCJjb3B5XCJdLFtcImN1dFwiLFwiY3V0XCJdLFtcImRibGNsaWNrXCIsXCJkb3VibGVDbGlja1wiXSxbXCJkcmFnZW5kXCIsXCJkcmFnRW5kXCJdLFtcImRyYWdzdGFydFwiLFwiZHJhZ1N0YXJ0XCJdLFtcImRyb3BcIixcImRyb3BcIl0sW1wiZm9jdXNcIixcImZvY3VzXCJdLFtcImlucHV0XCIsXCJpbnB1dFwiXSxbXCJpbnZhbGlkXCIsXCJpbnZhbGlkXCJdLFtcImtleWRvd25cIixcImtleURvd25cIl0sW1wia2V5cHJlc3NcIixcImtleVByZXNzXCJdLFtcImtleXVwXCIsXCJrZXlVcFwiXSxbXCJtb3VzZWRvd25cIixcIm1vdXNlRG93blwiXSxbXCJtb3VzZXVwXCIsXCJtb3VzZVVwXCJdLFtcInBhc3RlXCIsXCJwYXN0ZVwiXSxbXCJwYXVzZVwiLFwicGF1c2VcIl0sW1wicGxheVwiLFwicGxheVwiXSxbXCJwb2ludGVyY2FuY2VsXCIsXCJwb2ludGVyQ2FuY2VsXCJdLFtcInBvaW50ZXJkb3duXCIsXCJwb2ludGVyRG93blwiXSxcbltcInBvaW50ZXJ1cFwiLFwicG9pbnRlclVwXCJdLFtcInJhdGVjaGFuZ2VcIixcInJhdGVDaGFuZ2VcIl0sW1wicmVzZXRcIixcInJlc2V0XCJdLFtcInNlZWtlZFwiLFwic2Vla2VkXCJdLFtcInN1Ym1pdFwiLFwic3VibWl0XCJdLFtcInRvdWNoY2FuY2VsXCIsXCJ0b3VjaENhbmNlbFwiXSxbXCJ0b3VjaGVuZFwiLFwidG91Y2hFbmRcIl0sW1widG91Y2hzdGFydFwiLFwidG91Y2hTdGFydFwiXSxbXCJ2b2x1bWVjaGFuZ2VcIixcInZvbHVtZUNoYW5nZVwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXtCZChhLCEwKX0pO3lkLmZvckVhY2goZnVuY3Rpb24oYSl7QmQoYSwhMSl9KTtcbnZhciBDZD17ZXZlbnRUeXBlczp6ZCxpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGU6ZnVuY3Rpb24oYSl7YT1BZFthXTtyZXR1cm4gdm9pZCAwIT09YSYmITA9PT1hLmlzSW50ZXJhY3RpdmV9LGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9QWRbYV07aWYoIWUpcmV0dXJuIG51bGw7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1xZChjKSlyZXR1cm4gbnVsbDtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOmE9dGQ7YnJlYWs7Y2FzZSBcImJsdXJcIjpjYXNlIFwiZm9jdXNcIjphPXBkO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilyZXR1cm4gbnVsbDtjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmE9ZWQ7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6YT1cbnVkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOmE9dmQ7YnJlYWs7Y2FzZSBmYjpjYXNlIGdiOmNhc2UgaGI6YT1uZDticmVhaztjYXNlIGliOmE9d2Q7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOmE9YWQ7YnJlYWs7Y2FzZSBcIndoZWVsXCI6YT14ZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjphPW9kO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmE9ZmQ7YnJlYWs7ZGVmYXVsdDphPUh9Yj1hLmdldFBvb2xlZChlLGIsYyxkKTtZYShiKTtyZXR1cm4gYn19LERkPUNkLmlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZSxcbkVkPVtdO2Z1bmN0aW9uIEZkKGEpe3ZhciBiPWEudGFyZ2V0SW5zdDtkb3tpZighYil7YS5hbmNlc3RvcnMucHVzaChiKTticmVha312YXIgYztmb3IoYz1iO2MucmV0dXJuOyljPWMucmV0dXJuO2M9MyE9PWMudGFnP251bGw6Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZighYylicmVhazthLmFuY2VzdG9ycy5wdXNoKGIpO2I9TmEoYyl9d2hpbGUoYik7Zm9yKGM9MDtjPGEuYW5jZXN0b3JzLmxlbmd0aDtjKyspYj1hLmFuY2VzdG9yc1tjXSxKYShhLnRvcExldmVsVHlwZSxiLGEubmF0aXZlRXZlbnQsWmIoYS5uYXRpdmVFdmVudCkpfXZhciBHZD0hMDtmdW5jdGlvbiBJZChhKXtHZD0hIWF9ZnVuY3Rpb24gTChhLGIpe2lmKCFiKXJldHVybiBudWxsO3ZhciBjPShEZChhKT9KZDpLZCkuYmluZChudWxsLGEpO2IuYWRkRXZlbnRMaXN0ZW5lcihhLGMsITEpfVxuZnVuY3Rpb24gTGQoYSxiKXtpZighYilyZXR1cm4gbnVsbDt2YXIgYz0oRGQoYSk/SmQ6S2QpLmJpbmQobnVsbCxhKTtiLmFkZEV2ZW50TGlzdGVuZXIoYSxjLCEwKX1mdW5jdGlvbiBKZChhLGIpe1RiKEtkLGEsYil9ZnVuY3Rpb24gS2QoYSxiKXtpZihHZCl7dmFyIGM9WmIoYik7Yz1OYShjKTtudWxsPT09Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBjLnRhZ3x8Mj09PWlkKGMpfHwoYz1udWxsKTtpZihFZC5sZW5ndGgpe3ZhciBkPUVkLnBvcCgpO2QudG9wTGV2ZWxUeXBlPWE7ZC5uYXRpdmVFdmVudD1iO2QudGFyZ2V0SW5zdD1jO2E9ZH1lbHNlIGE9e3RvcExldmVsVHlwZTphLG5hdGl2ZUV2ZW50OmIsdGFyZ2V0SW5zdDpjLGFuY2VzdG9yczpbXX07dHJ5e1diKEZkLGEpfWZpbmFsbHl7YS50b3BMZXZlbFR5cGU9bnVsbCxhLm5hdGl2ZUV2ZW50PW51bGwsYS50YXJnZXRJbnN0PW51bGwsYS5hbmNlc3RvcnMubGVuZ3RoPTAsMTA+RWQubGVuZ3RoJiZFZC5wdXNoKGEpfX19XG52YXIgTWQ9e2dldCBfZW5hYmxlZCgpe3JldHVybiBHZH0sc2V0RW5hYmxlZDpJZCxpc0VuYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gR2R9LHRyYXBCdWJibGVkRXZlbnQ6TCx0cmFwQ2FwdHVyZWRFdmVudDpMZCxkaXNwYXRjaEV2ZW50OktkfSxOZD17fSxPZD0wLFBkPVwiX3JlYWN0TGlzdGVuZXJzSURcIisoXCJcIitNYXRoLnJhbmRvbSgpKS5zbGljZSgyKTtmdW5jdGlvbiBRZChhKXtPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYSxQZCl8fChhW1BkXT1PZCsrLE5kW2FbUGRdXT17fSk7cmV0dXJuIE5kW2FbUGRdXX1mdW5jdGlvbiBSZChhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBTZChhLGIpe3ZhciBjPVJkKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPVJkKGMpfX1mdW5jdGlvbiBUZChhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiZcInRleHRcIj09PWEudHlwZXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9XG52YXIgVWQ9bS5jYW5Vc2VET00mJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxWZD17c2VsZWN0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uU2VsZWN0XCIsY2FwdHVyZWQ6XCJvblNlbGVjdENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb250ZXh0bWVudSBmb2N1cyBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19LFdkPW51bGwsWGQ9bnVsbCxZZD1udWxsLFpkPSExO1xuZnVuY3Rpb24gJGQoYSxiKXtpZihaZHx8bnVsbD09V2R8fFdkIT09ZGEoKSlyZXR1cm4gbnVsbDt2YXIgYz1XZDtcInNlbGVjdGlvblN0YXJ0XCJpbiBjJiZUZChjKT9jPXtzdGFydDpjLnNlbGVjdGlvblN0YXJ0LGVuZDpjLnNlbGVjdGlvbkVuZH06d2luZG93LmdldFNlbGVjdGlvbj8oYz13aW5kb3cuZ2V0U2VsZWN0aW9uKCksYz17YW5jaG9yTm9kZTpjLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmMuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpjLmZvY3VzTm9kZSxmb2N1c09mZnNldDpjLmZvY3VzT2Zmc2V0fSk6Yz12b2lkIDA7cmV0dXJuIFlkJiZlYShZZCxjKT9udWxsOihZZD1jLGE9SC5nZXRQb29sZWQoVmQuc2VsZWN0LFhkLGEsYiksYS50eXBlPVwic2VsZWN0XCIsYS50YXJnZXQ9V2QsWWEoYSksYSl9XG52YXIgYWU9e2V2ZW50VHlwZXM6VmQsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1kLndpbmRvdz09PWQ/ZC5kb2N1bWVudDo5PT09ZC5ub2RlVHlwZT9kOmQub3duZXJEb2N1bWVudCxmO2lmKCEoZj0hZSkpe2E6e2U9UWQoZSk7Zj1zYS5vblNlbGVjdDtmb3IodmFyIGc9MDtnPGYubGVuZ3RoO2crKyl7dmFyIGg9ZltnXTtpZighZS5oYXNPd25Qcm9wZXJ0eShoKXx8IWVbaF0pe2U9ITE7YnJlYWsgYX19ZT0hMH1mPSFlfWlmKGYpcmV0dXJuIG51bGw7ZT1iP09hKGIpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzXCI6aWYoWWIoZSl8fFwidHJ1ZVwiPT09ZS5jb250ZW50RWRpdGFibGUpV2Q9ZSxYZD1iLFlkPW51bGw7YnJlYWs7Y2FzZSBcImJsdXJcIjpZZD1YZD1XZD1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjpaZD0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOnJldHVybiBaZD0hMSwkZChjLGQpO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihVZClicmVhaztcbmNhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6cmV0dXJuICRkKGMsZCl9cmV0dXJuIG51bGx9fTtHYS5pbmplY3RFdmVudFBsdWdpbk9yZGVyKFwiUmVzcG9uZGVyRXZlbnRQbHVnaW4gU2ltcGxlRXZlbnRQbHVnaW4gVGFwRXZlbnRQbHVnaW4gRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIENoYW5nZUV2ZW50UGx1Z2luIFNlbGVjdEV2ZW50UGx1Z2luIEJlZm9yZUlucHV0RXZlbnRQbHVnaW5cIi5zcGxpdChcIiBcIikpO3dhPVFhLmdldEZpYmVyQ3VycmVudFByb3BzRnJvbU5vZGU7eGE9UWEuZ2V0SW5zdGFuY2VGcm9tTm9kZTt5YT1RYS5nZXROb2RlRnJvbUluc3RhbmNlO0dhLmluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSh7U2ltcGxlRXZlbnRQbHVnaW46Q2QsRW50ZXJMZWF2ZUV2ZW50UGx1Z2luOmhkLENoYW5nZUV2ZW50UGx1Z2luOiRjLFNlbGVjdEV2ZW50UGx1Z2luOmFlLEJlZm9yZUlucHV0RXZlbnRQbHVnaW46SWJ9KTt2YXIgYmU9dm9pZCAwO1xuYmU9XCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdz9mdW5jdGlvbigpe3JldHVybiBwZXJmb3JtYW5jZS5ub3coKX06ZnVuY3Rpb24oKXtyZXR1cm4gRGF0ZS5ub3coKX07dmFyIGNlPXZvaWQgMCxkZT12b2lkIDA7XG5pZihtLmNhblVzZURPTSl7dmFyIGVlPVtdLGZlPTAsZ2U9e30saGU9LTEsaWU9ITEsamU9ITEsa2U9MCxsZT0zMyxtZT0zMyxuZT17ZGlkVGltZW91dDohMSx0aW1lUmVtYWluaW5nOmZ1bmN0aW9uKCl7dmFyIGE9a2UtYmUoKTtyZXR1cm4gMDxhP2E6MH19LG9lPWZ1bmN0aW9uKGEsYil7aWYoZ2VbYl0pdHJ5e2EobmUpfWZpbmFsbHl7ZGVsZXRlIGdlW2JdfX0scGU9XCJfX3JlYWN0SWRsZUNhbGxiYWNrJFwiK01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLGZ1bmN0aW9uKGEpe2lmKGEuc291cmNlPT09d2luZG93JiZhLmRhdGE9PT1wZSYmKGllPSExLDAhPT1lZS5sZW5ndGgpKXtpZigwIT09ZWUubGVuZ3RoJiYoYT1iZSgpLCEoLTE9PT1oZXx8aGU+YSkpKXtoZT0tMTtuZS5kaWRUaW1lb3V0PSEwO2Zvcih2YXIgYj0wLGM9ZWUubGVuZ3RoO2I8YztiKyspe3ZhciBkPWVlW2JdLGU9ZC50aW1lb3V0VGltZTstMSE9PVxuZSYmZTw9YT9vZShkLnNjaGVkdWxlZENhbGxiYWNrLGQuY2FsbGJhY2tJZCk6LTEhPT1lJiYoLTE9PT1oZXx8ZTxoZSkmJihoZT1lKX19Zm9yKGE9YmUoKTswPGtlLWEmJjA8ZWUubGVuZ3RoOylhPWVlLnNoaWZ0KCksbmUuZGlkVGltZW91dD0hMSxvZShhLnNjaGVkdWxlZENhbGxiYWNrLGEuY2FsbGJhY2tJZCksYT1iZSgpOzA8ZWUubGVuZ3RoJiYhamUmJihqZT0hMCxyZXF1ZXN0QW5pbWF0aW9uRnJhbWUocWUpKX19LCExKTt2YXIgcWU9ZnVuY3Rpb24oYSl7amU9ITE7dmFyIGI9YS1rZSttZTtiPG1lJiZsZTxtZT8oOD5iJiYoYj04KSxtZT1iPGxlP2xlOmIpOmxlPWI7a2U9YSttZTtpZXx8KGllPSEwLHdpbmRvdy5wb3N0TWVzc2FnZShwZSxcIipcIikpfTtjZT1mdW5jdGlvbihhLGIpe3ZhciBjPS0xO251bGwhPWImJlwibnVtYmVyXCI9PT10eXBlb2YgYi50aW1lb3V0JiYoYz1iZSgpK2IudGltZW91dCk7aWYoLTE9PT1oZXx8LTEhPT1jJiZjPGhlKWhlPWM7ZmUrKztiPWZlO2VlLnB1c2goe3NjaGVkdWxlZENhbGxiYWNrOmEsXG5jYWxsYmFja0lkOmIsdGltZW91dFRpbWU6Y30pO2dlW2JdPSEwO2plfHwoamU9ITAscmVxdWVzdEFuaW1hdGlvbkZyYW1lKHFlKSk7cmV0dXJuIGJ9O2RlPWZ1bmN0aW9uKGEpe2RlbGV0ZSBnZVthXX19ZWxzZXt2YXIgcmU9MCxzZT17fTtjZT1mdW5jdGlvbihhKXt2YXIgYj1yZSsrLGM9c2V0VGltZW91dChmdW5jdGlvbigpe2Eoe3RpbWVSZW1haW5pbmc6ZnVuY3Rpb24oKXtyZXR1cm4gSW5maW5pdHl9LGRpZFRpbWVvdXQ6ITF9KX0pO3NlW2JdPWM7cmV0dXJuIGJ9O2RlPWZ1bmN0aW9uKGEpe3ZhciBiPXNlW2FdO2RlbGV0ZSBzZVthXTtjbGVhclRpbWVvdXQoYil9fWZ1bmN0aW9uIHRlKGEpe3ZhciBiPVwiXCI7Y2EuQ2hpbGRyZW4uZm9yRWFjaChhLGZ1bmN0aW9uKGEpe251bGw9PWF8fFwic3RyaW5nXCIhPT10eXBlb2YgYSYmXCJudW1iZXJcIiE9PXR5cGVvZiBhfHwoYis9YSl9KTtyZXR1cm4gYn1cbmZ1bmN0aW9uIHVlKGEsYil7YT1wKHtjaGlsZHJlbjp2b2lkIDB9LGIpO2lmKGI9dGUoYi5jaGlsZHJlbikpYS5jaGlsZHJlbj1iO3JldHVybiBhfWZ1bmN0aW9uIHZlKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIitjO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiB3ZShhLGIpe3ZhciBjPWIudmFsdWU7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6bnVsbCE9Yz9jOmIuZGVmYXVsdFZhbHVlLHdhc011bHRpcGxlOiEhYi5tdWx0aXBsZX19ZnVuY3Rpb24geGUoYSxiKXtudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP0EoXCI5MVwiKTp2b2lkIDA7cmV0dXJuIHAoe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24geWUoYSxiKXt2YXIgYz1iLnZhbHVlO251bGw9PWMmJihjPWIuZGVmYXVsdFZhbHVlLGI9Yi5jaGlsZHJlbixudWxsIT1iJiYobnVsbCE9Yz9BKFwiOTJcIik6dm9pZCAwLEFycmF5LmlzQXJyYXkoYikmJigxPj1iLmxlbmd0aD92b2lkIDA6QShcIjkzXCIpLGI9YlswXSksYz1cIlwiK2IpLG51bGw9PWMmJihjPVwiXCIpKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpcIlwiK2N9fVxuZnVuY3Rpb24gemUoYSxiKXt2YXIgYz1iLnZhbHVlO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9Yi5kZWZhdWx0VmFsdWUmJihhLmRlZmF1bHRWYWx1ZT1iLmRlZmF1bHRWYWx1ZSl9ZnVuY3Rpb24gQWUoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmKGEudmFsdWU9Yil9dmFyIEJlPXtodG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLG1hdGhtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifTtcbmZ1bmN0aW9uIENlKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gRGUoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP0NlKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIEVlPXZvaWQgMCxGZT1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1CZS5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtFZT1FZXx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtFZS5pbm5lckhUTUw9XCI8c3ZnPlwiK2IrXCI8L3N2Zz5cIjtmb3IoYj1FZS5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBHZShhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxudmFyIEhlPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxmbG9vZE9wYWNpdHk6ITAsXG5zdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LEllPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhIZSkuZm9yRWFjaChmdW5jdGlvbihhKXtJZS5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO0hlW2JdPUhlW2FdfSl9KTtcbmZ1bmN0aW9uIEplKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKTt2YXIgZT1jO3ZhciBmPWJbY107ZT1udWxsPT1mfHxcImJvb2xlYW5cIj09PXR5cGVvZiBmfHxcIlwiPT09Zj9cIlwiOmR8fFwibnVtYmVyXCIhPT10eXBlb2YgZnx8MD09PWZ8fEhlLmhhc093blByb3BlcnR5KGUpJiZIZVtlXT8oXCJcIitmKS50cmltKCk6ZitcInB4XCI7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciBLZT1wKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gTGUoYSxiLGMpe2ImJihLZVthXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/QShcIjEzN1wiLGEsYygpKTp2b2lkIDApLG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJihudWxsIT1iLmNoaWxkcmVuP0EoXCI2MFwiKTp2b2lkIDAsXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTD92b2lkIDA6QShcIjYxXCIpKSxudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGU/QShcIjYyXCIsYygpKTp2b2lkIDApfVxuZnVuY3Rpb24gTWUoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fXZhciBOZT12LnRoYXRSZXR1cm5zKFwiXCIpO1xuZnVuY3Rpb24gT2UoYSxiKXthPTk9PT1hLm5vZGVUeXBlfHwxMT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7dmFyIGM9UWQoYSk7Yj1zYVtiXTtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl7dmFyIGU9YltkXTtpZighYy5oYXNPd25Qcm9wZXJ0eShlKXx8IWNbZV0pe3N3aXRjaChlKXtjYXNlIFwic2Nyb2xsXCI6TGQoXCJzY3JvbGxcIixhKTticmVhaztjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOkxkKFwiZm9jdXNcIixhKTtMZChcImJsdXJcIixhKTtjLmJsdXI9ITA7Yy5mb2N1cz0hMDticmVhaztjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsb3NlXCI6JGIoZSwhMCkmJkxkKGUsYSk7YnJlYWs7Y2FzZSBcImludmFsaWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInJlc2V0XCI6YnJlYWs7ZGVmYXVsdDotMT09PWpiLmluZGV4T2YoZSkmJkwoZSxhKX1jW2VdPSEwfX19XG5mdW5jdGlvbiBQZShhLGIsYyxkKXtjPTk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50O2Q9PT1CZS5odG1sJiYoZD1DZShhKSk7ZD09PUJlLmh0bWw/XCJzY3JpcHRcIj09PWE/KGE9Yy5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGEuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsYT1hLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCkpOmE9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzP2MuY3JlYXRlRWxlbWVudChhLHtpczpiLmlzfSk6Yy5jcmVhdGVFbGVtZW50KGEpOmE9Yy5jcmVhdGVFbGVtZW50TlMoZCxhKTtyZXR1cm4gYX1mdW5jdGlvbiBRZShhLGIpe3JldHVybig5PT09Yi5ub2RlVHlwZT9iOmIub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoYSl9XG5mdW5jdGlvbiBSZShhLGIsYyxkKXt2YXIgZT1NZShiLGMpO3N3aXRjaChiKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOkwoXCJsb2FkXCIsYSk7dmFyIGY9YzticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZj0wO2Y8amIubGVuZ3RoO2YrKylMKGpiW2ZdLGEpO2Y9YzticmVhaztjYXNlIFwic291cmNlXCI6TChcImVycm9yXCIsYSk7Zj1jO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkwoXCJlcnJvclwiLGEpO0woXCJsb2FkXCIsYSk7Zj1jO2JyZWFrO2Nhc2UgXCJmb3JtXCI6TChcInJlc2V0XCIsYSk7TChcInN1Ym1pdFwiLGEpO2Y9YzticmVhaztjYXNlIFwiZGV0YWlsc1wiOkwoXCJ0b2dnbGVcIixhKTtmPWM7YnJlYWs7Y2FzZSBcImlucHV0XCI6R2MoYSxjKTtmPUZjKGEsYyk7TChcImludmFsaWRcIixhKTtPZShkLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmY9dWUoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6d2UoYSxjKTtmPXAoe30sYyx7dmFsdWU6dm9pZCAwfSk7XG5MKFwiaW52YWxpZFwiLGEpO09lKGQsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjp5ZShhLGMpO2Y9eGUoYSxjKTtMKFwiaW52YWxpZFwiLGEpO09lKGQsXCJvbkNoYW5nZVwiKTticmVhaztkZWZhdWx0OmY9Y31MZShiLGYsTmUpO3ZhciBnPWYsaDtmb3IoaCBpbiBnKWlmKGcuaGFzT3duUHJvcGVydHkoaCkpe3ZhciBrPWdbaF07XCJzdHlsZVwiPT09aD9KZShhLGssTmUpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWg/KGs9az9rLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmRmUoYSxrKSk6XCJjaGlsZHJlblwiPT09aD9cInN0cmluZ1wiPT09dHlwZW9mIGs/KFwidGV4dGFyZWFcIiE9PWJ8fFwiXCIhPT1rKSYmR2UoYSxrKTpcIm51bWJlclwiPT09dHlwZW9mIGsmJkdlKGEsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09aCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWgmJlwiYXV0b0ZvY3VzXCIhPT1oJiYocmEuaGFzT3duUHJvcGVydHkoaCk/bnVsbCE9ayYmT2UoZCxcbmgpOm51bGwhPWsmJkVjKGEsaCxrLGUpKX1zd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6Y2MoYSk7TGMoYSxjKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpjYyhhKTtBZShhLGMpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1jLnZhbHVlJiZhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsYy52YWx1ZSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEubXVsdGlwbGU9ISFjLm11bHRpcGxlO2I9Yy52YWx1ZTtudWxsIT1iP3ZlKGEsISFjLm11bHRpcGxlLGIsITEpOm51bGwhPWMuZGVmYXVsdFZhbHVlJiZ2ZShhLCEhYy5tdWx0aXBsZSxjLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiYoYS5vbmNsaWNrPXYpfX1cbmZ1bmN0aW9uIFNlKGEsYixjLGQsZSl7dmFyIGY9bnVsbDtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6Yz1GYyhhLGMpO2Q9RmMoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpjPXVlKGEsYyk7ZD11ZShhLGQpO2Y9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmM9cCh7fSxjLHt2YWx1ZTp2b2lkIDB9KTtkPXAoe30sZCx7dmFsdWU6dm9pZCAwfSk7Zj1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpjPXhlKGEsYyk7ZD14ZShhLGQpO2Y9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoYS5vbmNsaWNrPXYpfUxlKGIsZCxOZSk7Yj1hPXZvaWQgMDt2YXIgZz1udWxsO2ZvcihhIGluIGMpaWYoIWQuaGFzT3duUHJvcGVydHkoYSkmJmMuaGFzT3duUHJvcGVydHkoYSkmJm51bGwhPWNbYV0paWYoXCJzdHlsZVwiPT09YSl7dmFyIGg9Y1thXTtmb3IoYiBpbiBoKWguaGFzT3duUHJvcGVydHkoYikmJihnfHxcbihnPXt9KSxnW2JdPVwiXCIpfWVsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1hJiZcImNoaWxkcmVuXCIhPT1hJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09YSYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWEmJlwiYXV0b0ZvY3VzXCIhPT1hJiYocmEuaGFzT3duUHJvcGVydHkoYSk/Znx8KGY9W10pOihmPWZ8fFtdKS5wdXNoKGEsbnVsbCkpO2ZvcihhIGluIGQpe3ZhciBrPWRbYV07aD1udWxsIT1jP2NbYV06dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkoYSkmJmshPT1oJiYobnVsbCE9a3x8bnVsbCE9aCkpaWYoXCJzdHlsZVwiPT09YSlpZihoKXtmb3IoYiBpbiBoKSFoLmhhc093blByb3BlcnR5KGIpfHxrJiZrLmhhc093blByb3BlcnR5KGIpfHwoZ3x8KGc9e30pLGdbYl09XCJcIik7Zm9yKGIgaW4gaylrLmhhc093blByb3BlcnR5KGIpJiZoW2JdIT09a1tiXSYmKGd8fChnPXt9KSxnW2JdPWtbYl0pfWVsc2UgZ3x8KGZ8fChmPVtdKSxmLnB1c2goYSxnKSksXG5nPWs7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWE/KGs9az9rLl9faHRtbDp2b2lkIDAsaD1oP2guX19odG1sOnZvaWQgMCxudWxsIT1rJiZoIT09ayYmKGY9Znx8W10pLnB1c2goYSxcIlwiK2spKTpcImNoaWxkcmVuXCI9PT1hP2g9PT1rfHxcInN0cmluZ1wiIT09dHlwZW9mIGsmJlwibnVtYmVyXCIhPT10eXBlb2Yga3x8KGY9Znx8W10pLnB1c2goYSxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1hJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09YSYmKHJhLmhhc093blByb3BlcnR5KGEpPyhudWxsIT1rJiZPZShlLGEpLGZ8fGg9PT1rfHwoZj1bXSkpOihmPWZ8fFtdKS5wdXNoKGEsaykpfWcmJihmPWZ8fFtdKS5wdXNoKFwic3R5bGVcIixnKTtyZXR1cm4gZn1cbmZ1bmN0aW9uIFRlKGEsYixjLGQsZSl7XCJpbnB1dFwiPT09YyYmXCJyYWRpb1wiPT09ZS50eXBlJiZudWxsIT1lLm5hbWUmJkljKGEsZSk7TWUoYyxkKTtkPU1lKGMsZSk7Zm9yKHZhciBmPTA7ZjxiLmxlbmd0aDtmKz0yKXt2YXIgZz1iW2ZdLGg9YltmKzFdO1wic3R5bGVcIj09PWc/SmUoYSxoLE5lKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP0ZlKGEsaCk6XCJjaGlsZHJlblwiPT09Zz9HZShhLGgpOkVjKGEsZyxoLGQpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpKYyhhLGUpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOnplKGEsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU9dm9pZCAwLGI9YS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWUubXVsdGlwbGUsYz1lLnZhbHVlLG51bGwhPWM/dmUoYSwhIWUubXVsdGlwbGUsYywhMSk6YiE9PSEhZS5tdWx0aXBsZSYmKG51bGwhPWUuZGVmYXVsdFZhbHVlP1xudmUoYSwhIWUubXVsdGlwbGUsZS5kZWZhdWx0VmFsdWUsITApOnZlKGEsISFlLm11bHRpcGxlLGUubXVsdGlwbGU/W106XCJcIiwhMSkpfX1cbmZ1bmN0aW9uIFVlKGEsYixjLGQsZSl7c3dpdGNoKGIpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6TChcImxvYWRcIixhKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZD0wO2Q8amIubGVuZ3RoO2QrKylMKGpiW2RdLGEpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpMKFwiZXJyb3JcIixhKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpMKFwiZXJyb3JcIixhKTtMKFwibG9hZFwiLGEpO2JyZWFrO2Nhc2UgXCJmb3JtXCI6TChcInJlc2V0XCIsYSk7TChcInN1Ym1pdFwiLGEpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6TChcInRvZ2dsZVwiLGEpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkdjKGEsYyk7TChcImludmFsaWRcIixhKTtPZShlLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOndlKGEsYyk7TChcImludmFsaWRcIixhKTtPZShlLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6eWUoYSxjKSxMKFwiaW52YWxpZFwiLGEpLE9lKGUsXCJvbkNoYW5nZVwiKX1MZShiLFxuYyxOZSk7ZD1udWxsO2Zvcih2YXIgZiBpbiBjKWlmKGMuaGFzT3duUHJvcGVydHkoZikpe3ZhciBnPWNbZl07XCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGc/YS50ZXh0Q29udGVudCE9PWcmJihkPVtcImNoaWxkcmVuXCIsZ10pOlwibnVtYmVyXCI9PT10eXBlb2YgZyYmYS50ZXh0Q29udGVudCE9PVwiXCIrZyYmKGQ9W1wiY2hpbGRyZW5cIixcIlwiK2ddKTpyYS5oYXNPd25Qcm9wZXJ0eShmKSYmbnVsbCE9ZyYmT2UoZSxmKX1zd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6Y2MoYSk7TGMoYSxjKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpjYyhhKTtBZShhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5vbkNsaWNrJiYoYS5vbmNsaWNrPXYpfXJldHVybiBkfWZ1bmN0aW9uIFZlKGEsYil7cmV0dXJuIGEubm9kZVZhbHVlIT09Yn1cbnZhciBXZT17Y3JlYXRlRWxlbWVudDpQZSxjcmVhdGVUZXh0Tm9kZTpRZSxzZXRJbml0aWFsUHJvcGVydGllczpSZSxkaWZmUHJvcGVydGllczpTZSx1cGRhdGVQcm9wZXJ0aWVzOlRlLGRpZmZIeWRyYXRlZFByb3BlcnRpZXM6VWUsZGlmZkh5ZHJhdGVkVGV4dDpWZSx3YXJuRm9yVW5tYXRjaGVkVGV4dDpmdW5jdGlvbigpe30sd2FybkZvckRlbGV0ZWRIeWRyYXRhYmxlRWxlbWVudDpmdW5jdGlvbigpe30sd2FybkZvckRlbGV0ZWRIeWRyYXRhYmxlVGV4dDpmdW5jdGlvbigpe30sd2FybkZvckluc2VydGVkSHlkcmF0ZWRFbGVtZW50OmZ1bmN0aW9uKCl7fSx3YXJuRm9ySW5zZXJ0ZWRIeWRyYXRlZFRleHQ6ZnVuY3Rpb24oKXt9LHJlc3RvcmVDb250cm9sbGVkU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpKYyhhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO1xuYz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1QYShkKTtlP3ZvaWQgMDpBKFwiOTBcIik7ZGMoZCk7SmMoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOnplKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZ2ZShhLCEhYy5tdWx0aXBsZSxiLCExKX19fSxYZT1udWxsLFllPW51bGw7ZnVuY3Rpb24gWmUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpyZXR1cm4hIWIuYXV0b0ZvY3VzfXJldHVybiExfVxuZnVuY3Rpb24gJGUoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJzdHJpbmdcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgYWY9YmUsYmY9Y2UsY2Y9ZGU7ZnVuY3Rpb24gZGYoYSl7Zm9yKGE9YS5uZXh0U2libGluZzthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlZihhKXtmb3IoYT1hLmZpcnN0Q2hpbGQ7YSYmMSE9PWEubm9kZVR5cGUmJjMhPT1hLm5vZGVUeXBlOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9bmV3IFNldDt2YXIgZmY9W10sZ2Y9LTE7ZnVuY3Rpb24gaGYoYSl7cmV0dXJue2N1cnJlbnQ6YX19XG5mdW5jdGlvbiBNKGEpezA+Z2Z8fChhLmN1cnJlbnQ9ZmZbZ2ZdLGZmW2dmXT1udWxsLGdmLS0pfWZ1bmN0aW9uIE4oYSxiKXtnZisrO2ZmW2dmXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIGpmPWhmKGhhKSxPPWhmKCExKSxrZj1oYTtmdW5jdGlvbiBsZihhKXtyZXR1cm4gbWYoYSk/a2Y6amYuY3VycmVudH1cbmZ1bmN0aW9uIG5mKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gaGE7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gbWYoYSl7cmV0dXJuIDI9PT1hLnRhZyYmbnVsbCE9YS50eXBlLmNoaWxkQ29udGV4dFR5cGVzfWZ1bmN0aW9uIG9mKGEpe21mKGEpJiYoTShPLGEpLE0oamYsYSkpfWZ1bmN0aW9uIHBmKGEpe00oTyxhKTtNKGpmLGEpfVxuZnVuY3Rpb24gcWYoYSxiLGMpe2pmLmN1cnJlbnQhPT1oYT9BKFwiMTY4XCIpOnZvaWQgMDtOKGpmLGIsYSk7TihPLGMsYSl9ZnVuY3Rpb24gcmYoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZSxkPWEudHlwZS5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGI7Yz1jLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBjKWUgaW4gZD92b2lkIDA6QShcIjEwOFwiLHRjKGEpfHxcIlVua25vd25cIixlKTtyZXR1cm4gcCh7fSxiLGMpfWZ1bmN0aW9uIHNmKGEpe2lmKCFtZihhKSlyZXR1cm4hMTt2YXIgYj1hLnN0YXRlTm9kZTtiPWImJmIuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fGhhO2tmPWpmLmN1cnJlbnQ7TihqZixiLGEpO04oTyxPLmN1cnJlbnQsYSk7cmV0dXJuITB9XG5mdW5jdGlvbiB0ZihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2M/dm9pZCAwOkEoXCIxNjlcIik7aWYoYil7dmFyIGQ9cmYoYSxrZik7Yy5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1kO00oTyxhKTtNKGpmLGEpO04oamYsZCxhKX1lbHNlIE0oTyxhKTtOKE8sYixhKX1cbmZ1bmN0aW9uIHVmKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuZWZmZWN0VGFnPTA7dGhpcy5sYXN0RWZmZWN0PXRoaXMuZmlyc3RFZmZlY3Q9dGhpcy5uZXh0RWZmZWN0PW51bGw7dGhpcy5leHBpcmF0aW9uVGltZT0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9XG5mdW5jdGlvbiB2ZihhLGIsYyl7dmFyIGQ9YS5hbHRlcm5hdGU7bnVsbD09PWQ/KGQ9bmV3IHVmKGEudGFnLGIsYS5rZXksYS5tb2RlKSxkLnR5cGU9YS50eXBlLGQuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGQuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9ZCk6KGQucGVuZGluZ1Byb3BzPWIsZC5lZmZlY3RUYWc9MCxkLm5leHRFZmZlY3Q9bnVsbCxkLmZpcnN0RWZmZWN0PW51bGwsZC5sYXN0RWZmZWN0PW51bGwpO2QuZXhwaXJhdGlvblRpbWU9YztkLmNoaWxkPWEuY2hpbGQ7ZC5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztkLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2QudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtkLnNpYmxpbmc9YS5zaWJsaW5nO2QuaW5kZXg9YS5pbmRleDtkLnJlZj1hLnJlZjtyZXR1cm4gZH1cbmZ1bmN0aW9uIHdmKGEsYixjKXt2YXIgZD1hLnR5cGUsZT1hLmtleTthPWEucHJvcHM7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpdmFyIGY9ZC5wcm90b3R5cGUmJmQucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ/MjowO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkKWY9NTtlbHNlIHN3aXRjaChkKXtjYXNlIGhjOnJldHVybiB4ZihhLmNoaWxkcmVuLGIsYyxlKTtjYXNlIG9jOmY9MTE7Ynw9MzticmVhaztjYXNlIGljOmY9MTE7Ynw9MjticmVhaztjYXNlIGpjOnJldHVybiBkPW5ldyB1ZigxNSxhLGUsYnw0KSxkLnR5cGU9amMsZC5leHBpcmF0aW9uVGltZT1jLGQ7Y2FzZSBxYzpmPTE2O2J8PTI7YnJlYWs7ZGVmYXVsdDphOntzd2l0Y2goXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZD9kLiQkdHlwZW9mOm51bGwpe2Nhc2UgbWM6Zj0xMzticmVhayBhO2Nhc2UgbmM6Zj0xMjticmVhayBhO2Nhc2UgcGM6Zj0xNDticmVhayBhO2RlZmF1bHQ6QShcIjEzMFwiLG51bGw9PWQ/XG5kOnR5cGVvZiBkLFwiXCIpfWY9dm9pZCAwfX1iPW5ldyB1ZihmLGEsZSxiKTtiLnR5cGU9ZDtiLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGJ9ZnVuY3Rpb24geGYoYSxiLGMsZCl7YT1uZXcgdWYoMTAsYSxkLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1mdW5jdGlvbiB5ZihhLGIsYyl7YT1uZXcgdWYoNixhLG51bGwsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIHpmKGEsYixjKXtiPW5ldyB1Zig0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5leHBpcmF0aW9uVGltZT1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1cbmZ1bmN0aW9uIEFmKGEsYixjKXtiPW5ldyB1ZigzLG51bGwsbnVsbCxiPzM6MCk7YT17Y3VycmVudDpiLGNvbnRhaW5lckluZm86YSxwZW5kaW5nQ2hpbGRyZW46bnVsbCxlYXJsaWVzdFBlbmRpbmdUaW1lOjAsbGF0ZXN0UGVuZGluZ1RpbWU6MCxlYXJsaWVzdFN1c3BlbmRlZFRpbWU6MCxsYXRlc3RTdXNwZW5kZWRUaW1lOjAsbGF0ZXN0UGluZ2VkVGltZTowLHBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZTowLGZpbmlzaGVkV29yazpudWxsLGNvbnRleHQ6bnVsbCxwZW5kaW5nQ29udGV4dDpudWxsLGh5ZHJhdGU6YyxyZW1haW5pbmdFeHBpcmF0aW9uVGltZTowLGZpcnN0QmF0Y2g6bnVsbCxuZXh0U2NoZWR1bGVkUm9vdDpudWxsfTtyZXR1cm4gYi5zdGF0ZU5vZGU9YX12YXIgQmY9bnVsbCxDZj1udWxsO2Z1bmN0aW9uIERmKGEpe3JldHVybiBmdW5jdGlvbihiKXt0cnl7cmV0dXJuIGEoYil9Y2F0Y2goYyl7fX19XG5mdW5jdGlvbiBFZihhKXtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXylyZXR1cm4hMTt2YXIgYj1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoYi5pc0Rpc2FibGVkfHwhYi5zdXBwb3J0c0ZpYmVyKXJldHVybiEwO3RyeXt2YXIgYz1iLmluamVjdChhKTtCZj1EZihmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyUm9vdChjLGEpfSk7Q2Y9RGYoZnVuY3Rpb24oYSl7cmV0dXJuIGIub25Db21taXRGaWJlclVubW91bnQoYyxhKX0pfWNhdGNoKGQpe31yZXR1cm4hMH1mdW5jdGlvbiBGZihhKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgQmYmJkJmKGEpfWZ1bmN0aW9uIEdmKGEpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiBDZiYmQ2YoYSl9dmFyIEhmPSExO1xuZnVuY3Rpb24gSWYoYSl7cmV0dXJue2V4cGlyYXRpb25UaW1lOjAsYmFzZVN0YXRlOmEsZmlyc3RVcGRhdGU6bnVsbCxsYXN0VXBkYXRlOm51bGwsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gSmYoYSl7cmV0dXJue2V4cGlyYXRpb25UaW1lOmEuZXhwaXJhdGlvblRpbWUsYmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0VXBkYXRlOmEuZmlyc3RVcGRhdGUsbGFzdFVwZGF0ZTphLmxhc3RVcGRhdGUsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19XG5mdW5jdGlvbiBLZihhKXtyZXR1cm57ZXhwaXJhdGlvblRpbWU6YSx0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGwsbmV4dEVmZmVjdDpudWxsfX1mdW5jdGlvbiBMZihhLGIsYyl7bnVsbD09PWEubGFzdFVwZGF0ZT9hLmZpcnN0VXBkYXRlPWEubGFzdFVwZGF0ZT1iOihhLmxhc3RVcGRhdGUubmV4dD1iLGEubGFzdFVwZGF0ZT1iKTtpZigwPT09YS5leHBpcmF0aW9uVGltZXx8YS5leHBpcmF0aW9uVGltZT5jKWEuZXhwaXJhdGlvblRpbWU9Y31cbmZ1bmN0aW9uIE1mKGEsYixjKXt2YXIgZD1hLmFsdGVybmF0ZTtpZihudWxsPT09ZCl7dmFyIGU9YS51cGRhdGVRdWV1ZTt2YXIgZj1udWxsO251bGw9PT1lJiYoZT1hLnVwZGF0ZVF1ZXVlPUlmKGEubWVtb2l6ZWRTdGF0ZSkpfWVsc2UgZT1hLnVwZGF0ZVF1ZXVlLGY9ZC51cGRhdGVRdWV1ZSxudWxsPT09ZT9udWxsPT09Zj8oZT1hLnVwZGF0ZVF1ZXVlPUlmKGEubWVtb2l6ZWRTdGF0ZSksZj1kLnVwZGF0ZVF1ZXVlPUlmKGQubWVtb2l6ZWRTdGF0ZSkpOmU9YS51cGRhdGVRdWV1ZT1KZihmKTpudWxsPT09ZiYmKGY9ZC51cGRhdGVRdWV1ZT1KZihlKSk7bnVsbD09PWZ8fGU9PT1mP0xmKGUsYixjKTpudWxsPT09ZS5sYXN0VXBkYXRlfHxudWxsPT09Zi5sYXN0VXBkYXRlPyhMZihlLGIsYyksTGYoZixiLGMpKTooTGYoZSxiLGMpLGYubGFzdFVwZGF0ZT1iKX1cbmZ1bmN0aW9uIE5mKGEsYixjKXt2YXIgZD1hLnVwZGF0ZVF1ZXVlO2Q9bnVsbD09PWQ/YS51cGRhdGVRdWV1ZT1JZihhLm1lbW9pemVkU3RhdGUpOk9mKGEsZCk7bnVsbD09PWQubGFzdENhcHR1cmVkVXBkYXRlP2QuZmlyc3RDYXB0dXJlZFVwZGF0ZT1kLmxhc3RDYXB0dXJlZFVwZGF0ZT1iOihkLmxhc3RDYXB0dXJlZFVwZGF0ZS5uZXh0PWIsZC5sYXN0Q2FwdHVyZWRVcGRhdGU9Yik7aWYoMD09PWQuZXhwaXJhdGlvblRpbWV8fGQuZXhwaXJhdGlvblRpbWU+YylkLmV4cGlyYXRpb25UaW1lPWN9ZnVuY3Rpb24gT2YoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYj09PWMudXBkYXRlUXVldWUmJihiPWEudXBkYXRlUXVldWU9SmYoYikpO3JldHVybiBifVxuZnVuY3Rpb24gUGYoYSxiLGMsZCxlLGYpe3N3aXRjaChjLnRhZyl7Y2FzZSAxOnJldHVybiBhPWMucGF5bG9hZCxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmNhbGwoZixkLGUpOmE7Y2FzZSAzOmEuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi0xMDI1fDY0O2Nhc2UgMDphPWMucGF5bG9hZDtlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChmLGQsZSk6YTtpZihudWxsPT09ZXx8dm9pZCAwPT09ZSlicmVhaztyZXR1cm4gcCh7fSxkLGUpO2Nhc2UgMjpIZj0hMH1yZXR1cm4gZH1cbmZ1bmN0aW9uIFFmKGEsYixjLGQsZSl7SGY9ITE7aWYoISgwPT09Yi5leHBpcmF0aW9uVGltZXx8Yi5leHBpcmF0aW9uVGltZT5lKSl7Yj1PZihhLGIpO2Zvcih2YXIgZj1iLmJhc2VTdGF0ZSxnPW51bGwsaD0wLGs9Yi5maXJzdFVwZGF0ZSxuPWY7bnVsbCE9PWs7KXt2YXIgcj1rLmV4cGlyYXRpb25UaW1lO2lmKHI+ZSl7aWYobnVsbD09PWcmJihnPWssZj1uKSwwPT09aHx8aD5yKWg9cn1lbHNlIG49UGYoYSxiLGssbixjLGQpLG51bGwhPT1rLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PTMyLGsubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RFZmZlY3Q/Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9azooYi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9ayxiLmxhc3RFZmZlY3Q9aykpO2s9ay5uZXh0fXI9bnVsbDtmb3Ioaz1iLmZpcnN0Q2FwdHVyZWRVcGRhdGU7bnVsbCE9PWs7KXt2YXIgdz1rLmV4cGlyYXRpb25UaW1lO2lmKHc+ZSl7aWYobnVsbD09PXImJihyPWssbnVsbD09PVxuZyYmKGY9bikpLDA9PT1ofHxoPncpaD13fWVsc2Ugbj1QZihhLGIsayxuLGMsZCksbnVsbCE9PWsuY2FsbGJhY2smJihhLmVmZmVjdFRhZ3w9MzIsay5uZXh0RWZmZWN0PW51bGwsbnVsbD09PWIubGFzdENhcHR1cmVkRWZmZWN0P2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1rOihiLmxhc3RDYXB0dXJlZEVmZmVjdC5uZXh0RWZmZWN0PWssYi5sYXN0Q2FwdHVyZWRFZmZlY3Q9aykpO2s9ay5uZXh0fW51bGw9PT1nJiYoYi5sYXN0VXBkYXRlPW51bGwpO251bGw9PT1yP2IubGFzdENhcHR1cmVkVXBkYXRlPW51bGw6YS5lZmZlY3RUYWd8PTMyO251bGw9PT1nJiZudWxsPT09ciYmKGY9bik7Yi5iYXNlU3RhdGU9ZjtiLmZpcnN0VXBkYXRlPWc7Yi5maXJzdENhcHR1cmVkVXBkYXRlPXI7Yi5leHBpcmF0aW9uVGltZT1oO2EubWVtb2l6ZWRTdGF0ZT1ufX1cbmZ1bmN0aW9uIFJmKGEsYil7XCJmdW5jdGlvblwiIT09dHlwZW9mIGE/QShcIjE5MVwiLGEpOnZvaWQgMDthLmNhbGwoYil9XG5mdW5jdGlvbiBTZihhLGIsYyl7bnVsbCE9PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSYmKG51bGwhPT1iLmxhc3RVcGRhdGUmJihiLmxhc3RVcGRhdGUubmV4dD1iLmZpcnN0Q2FwdHVyZWRVcGRhdGUsYi5sYXN0VXBkYXRlPWIubGFzdENhcHR1cmVkVXBkYXRlKSxiLmZpcnN0Q2FwdHVyZWRVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGU9bnVsbCk7YT1iLmZpcnN0RWZmZWN0O2ZvcihiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1udWxsO251bGwhPT1hOyl7dmFyIGQ9YS5jYWxsYmFjaztudWxsIT09ZCYmKGEuY2FsbGJhY2s9bnVsbCxSZihkLGMpKTthPWEubmV4dEVmZmVjdH1hPWIuZmlyc3RDYXB0dXJlZEVmZmVjdDtmb3IoYi5maXJzdENhcHR1cmVkRWZmZWN0PWIubGFzdENhcHR1cmVkRWZmZWN0PW51bGw7bnVsbCE9PWE7KWI9YS5jYWxsYmFjayxudWxsIT09YiYmKGEuY2FsbGJhY2s9bnVsbCxSZihiLGMpKSxhPWEubmV4dEVmZmVjdH1cbmZ1bmN0aW9uIFRmKGEsYil7cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6dmMoYil9fXZhciBVZj1oZihudWxsKSxWZj1oZihudWxsKSxXZj1oZigwKTtmdW5jdGlvbiBYZihhKXt2YXIgYj1hLnR5cGUuX2NvbnRleHQ7TihXZixiLl9jaGFuZ2VkQml0cyxhKTtOKFZmLGIuX2N1cnJlbnRWYWx1ZSxhKTtOKFVmLGEsYSk7Yi5fY3VycmVudFZhbHVlPWEucGVuZGluZ1Byb3BzLnZhbHVlO2IuX2NoYW5nZWRCaXRzPWEuc3RhdGVOb2RlfWZ1bmN0aW9uIFlmKGEpe3ZhciBiPVdmLmN1cnJlbnQsYz1WZi5jdXJyZW50O00oVWYsYSk7TShWZixhKTtNKFdmLGEpO2E9YS50eXBlLl9jb250ZXh0O2EuX2N1cnJlbnRWYWx1ZT1jO2EuX2NoYW5nZWRCaXRzPWJ9dmFyIFpmPXt9LCRmPWhmKFpmKSxhZz1oZihaZiksYmc9aGYoWmYpO2Z1bmN0aW9uIGNnKGEpe2E9PT1aZj9BKFwiMTc0XCIpOnZvaWQgMDtyZXR1cm4gYX1cbmZ1bmN0aW9uIGRnKGEsYil7TihiZyxiLGEpO04oYWcsYSxhKTtOKCRmLFpmLGEpO3ZhciBjPWIubm9kZVR5cGU7c3dpdGNoKGMpe2Nhc2UgOTpjYXNlIDExOmI9KGI9Yi5kb2N1bWVudEVsZW1lbnQpP2IubmFtZXNwYWNlVVJJOkRlKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDpjPTg9PT1jP2IucGFyZW50Tm9kZTpiLGI9Yy5uYW1lc3BhY2VVUkl8fG51bGwsYz1jLnRhZ05hbWUsYj1EZShiLGMpfU0oJGYsYSk7TigkZixiLGEpfWZ1bmN0aW9uIGVnKGEpe00oJGYsYSk7TShhZyxhKTtNKGJnLGEpfWZ1bmN0aW9uIGZnKGEpe2FnLmN1cnJlbnQ9PT1hJiYoTSgkZixhKSxNKGFnLGEpKX1mdW5jdGlvbiBoZyhhLGIsYyl7dmFyIGQ9YS5tZW1vaXplZFN0YXRlO2I9YihjLGQpO2Q9bnVsbD09PWJ8fHZvaWQgMD09PWI/ZDpwKHt9LGQsYik7YS5tZW1vaXplZFN0YXRlPWQ7YT1hLnVwZGF0ZVF1ZXVlO251bGwhPT1hJiYwPT09YS5leHBpcmF0aW9uVGltZSYmKGEuYmFzZVN0YXRlPWQpfVxudmFyIGxnPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbEZpYmVyKT8yPT09aWQoYSk6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9aWcoKTtkPWpnKGQsYSk7dmFyIGU9S2YoZCk7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO01mKGEsZSxkKTtrZyhhLGQpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1pZygpO2Q9amcoZCxhKTt2YXIgZT1LZihkKTtlLnRhZz0xO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtNZihhLGUsZCk7a2coYSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGM9aWcoKTtjPWpnKGMsYSk7dmFyIGQ9S2YoYyk7ZC50YWc9Mjt2b2lkIDAhPT1cbmImJm51bGwhPT1iJiYoZC5jYWxsYmFjaz1iKTtNZihhLGQsYyk7a2coYSxjKX19O2Z1bmN0aW9uIG1nKGEsYixjLGQsZSxmKXt2YXIgZz1hLnN0YXRlTm9kZTthPWEudHlwZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5zaG91bGRDb21wb25lbnRVcGRhdGU/Zy5zaG91bGRDb21wb25lbnRVcGRhdGUoYyxlLGYpOmEucHJvdG90eXBlJiZhLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hZWEoYixjKXx8IWVhKGQsZSk6ITB9XG5mdW5jdGlvbiBuZyhhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmbGcuZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XG5mdW5jdGlvbiBvZyhhLGIpe3ZhciBjPWEudHlwZSxkPWEuc3RhdGVOb2RlLGU9YS5wZW5kaW5nUHJvcHMsZj1sZihhKTtkLnByb3BzPWU7ZC5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZC5yZWZzPWhhO2QuY29udGV4dD1uZihhLGYpO2Y9YS51cGRhdGVRdWV1ZTtudWxsIT09ZiYmKFFmKGEsZixlLGQsYiksZC5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO2Y9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKGhnKGEsZixlKSxkLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGQuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuY29tcG9uZW50V2lsbE1vdW50fHwoYz1kLnN0YXRlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudFdpbGxNb3VudCYmXG5kLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmQuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGMhPT1kLnN0YXRlJiZsZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGQsZC5zdGF0ZSxudWxsKSxmPWEudXBkYXRlUXVldWUsbnVsbCE9PWYmJihRZihhLGYsZSxkLGIpLGQuc3RhdGU9YS5tZW1vaXplZFN0YXRlKSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkTW91bnQmJihhLmVmZmVjdFRhZ3w9NCl9dmFyIHBnPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBxZyhhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7dmFyIGQ9dm9pZCAwO2MmJigyIT09Yy50YWc/QShcIjExMFwiKTp2b2lkIDAsZD1jLnN0YXRlTm9kZSk7ZD92b2lkIDA6QShcIjE0N1wiLGEpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcz09PWhhP2QucmVmcz17fTpkLnJlZnM7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1cInN0cmluZ1wiIT09dHlwZW9mIGE/QShcIjE0OFwiKTp2b2lkIDA7Yy5fb3duZXI/dm9pZCAwOkEoXCIyNTRcIixhKX1yZXR1cm4gYX1cbmZ1bmN0aW9uIHJnKGEsYil7XCJ0ZXh0YXJlYVwiIT09YS50eXBlJiZBKFwiMzFcIixcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIil9XG5mdW5jdGlvbiBzZyhhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmVmZmVjdFRhZz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYixjKXthPXZmKGEsYixjKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZWZmZWN0VGFnPVxuMixjKTpkO2IuZWZmZWN0VGFnPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmVmZmVjdFRhZz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9eWYoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLnR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMsZCksZC5yZWY9cWcoYSxiLGMpLGQucmV0dXJuPWEsZDtkPXdmKGMsYS5tb2RlLGQpO2QucmVmPXFnKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIG4oYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPVxuemYoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gcihhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHwxMCE9PWIudGFnKXJldHVybiBiPXhmKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiB3KGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj15ZihcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBmYzpyZXR1cm4gYz13ZihiLGEubW9kZSxjKSxjLnJlZj1xZyhhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2UgZ2M6cmV0dXJuIGI9emYoYixhLm1vZGUsYyksYi5yZXR1cm49YSxifWlmKHBnKGIpfHxzYyhiKSlyZXR1cm4gYj14ZihiLGEubW9kZSxjLG51bGwpLGIucmV0dXJuPVxuYSxiO3JnKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24gUChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBmYzpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PWhjP3IoYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTprKGEsYixjLGQpOm51bGw7Y2FzZSBnYzpyZXR1cm4gYy5rZXk9PT1lP24oYSxiLGMsZCk6bnVsbH1pZihwZyhjKXx8c2MoYykpcmV0dXJuIG51bGwhPT1lP251bGw6cihhLGIsYyxkLG51bGwpO3JnKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24ga2MoYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7XG5pZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSBmYzpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsZC50eXBlPT09aGM/cihiLGEsZC5wcm9wcy5jaGlsZHJlbixlLGQua2V5KTprKGIsYSxkLGUpO2Nhc2UgZ2M6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLG4oYixhLGQsZSl9aWYocGcoZCl8fHNjKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLHIoYixhLGQsZSxudWxsKTtyZyhiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIEhkKGUsZyxoLGspe2Zvcih2YXIgdT1udWxsLHg9bnVsbCx0PWcscT1nPTAsbj1udWxsO251bGwhPT10JiZxPGgubGVuZ3RoO3ErKyl7dC5pbmRleD5xPyhuPXQsdD1udWxsKTpuPXQuc2libGluZzt2YXIgbD1QKGUsdCxoW3FdLGspO2lmKG51bGw9PT1sKXtudWxsPT09dCYmKHQ9bik7YnJlYWt9YSYmdCYmbnVsbD09PWwuYWx0ZXJuYXRlJiZiKGUsXG50KTtnPWYobCxnLHEpO251bGw9PT14P3U9bDp4LnNpYmxpbmc9bDt4PWw7dD1ufWlmKHE9PT1oLmxlbmd0aClyZXR1cm4gYyhlLHQpLHU7aWYobnVsbD09PXQpe2Zvcig7cTxoLmxlbmd0aDtxKyspaWYodD13KGUsaFtxXSxrKSlnPWYodCxnLHEpLG51bGw9PT14P3U9dDp4LnNpYmxpbmc9dCx4PXQ7cmV0dXJuIHV9Zm9yKHQ9ZChlLHQpO3E8aC5sZW5ndGg7cSsrKWlmKG49a2ModCxlLHEsaFtxXSxrKSlhJiZudWxsIT09bi5hbHRlcm5hdGUmJnQuZGVsZXRlKG51bGw9PT1uLmtleT9xOm4ua2V5KSxnPWYobixnLHEpLG51bGw9PT14P3U9bjp4LnNpYmxpbmc9bix4PW47YSYmdC5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gdX1mdW5jdGlvbiBFKGUsZyxoLGspe3ZhciB0PXNjKGgpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB0P0EoXCIxNTBcIik6dm9pZCAwO2g9dC5jYWxsKGgpO251bGw9PWg/QShcIjE1MVwiKTp2b2lkIDA7Zm9yKHZhciB1PXQ9bnVsbCxuPWcseD1cbmc9MCx5PW51bGwsbD1oLm5leHQoKTtudWxsIT09biYmIWwuZG9uZTt4KyssbD1oLm5leHQoKSl7bi5pbmRleD54Pyh5PW4sbj1udWxsKTp5PW4uc2libGluZzt2YXIgcj1QKGUsbixsLnZhbHVlLGspO2lmKG51bGw9PT1yKXtufHwobj15KTticmVha31hJiZuJiZudWxsPT09ci5hbHRlcm5hdGUmJmIoZSxuKTtnPWYocixnLHgpO251bGw9PT11P3Q9cjp1LnNpYmxpbmc9cjt1PXI7bj15fWlmKGwuZG9uZSlyZXR1cm4gYyhlLG4pLHQ7aWYobnVsbD09PW4pe2Zvcig7IWwuZG9uZTt4KyssbD1oLm5leHQoKSlsPXcoZSxsLnZhbHVlLGspLG51bGwhPT1sJiYoZz1mKGwsZyx4KSxudWxsPT09dT90PWw6dS5zaWJsaW5nPWwsdT1sKTtyZXR1cm4gdH1mb3Iobj1kKGUsbik7IWwuZG9uZTt4KyssbD1oLm5leHQoKSlsPWtjKG4sZSx4LGwudmFsdWUsayksbnVsbCE9PWwmJihhJiZudWxsIT09bC5hbHRlcm5hdGUmJm4uZGVsZXRlKG51bGw9PT1sLmtleT94Omwua2V5KSxnPWYobCxnLHgpLG51bGw9PT1cbnU/dD1sOnUuc2libGluZz1sLHU9bCk7YSYmbi5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gdH1yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09aGMmJm51bGw9PT1mLmtleSYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihrKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIGZjOmE6e3ZhciBuPWYua2V5O2ZvcihrPWQ7bnVsbCE9PWs7KXtpZihrLmtleT09PW4paWYoMTA9PT1rLnRhZz9mLnR5cGU9PT1oYzprLnR5cGU9PT1mLnR5cGUpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYudHlwZT09PWhjP2YucHJvcHMuY2hpbGRyZW46Zi5wcm9wcyxoKTtkLnJlZj1xZyhhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPWsuc2libGluZ31mLnR5cGU9PT1oYz8oZD14ZihmLnByb3BzLmNoaWxkcmVuLFxuYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD13ZihmLGEubW9kZSxoKSxoLnJlZj1xZyhhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgZ2M6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdLGgpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD16ZihmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZixoKSxkLnJldHVybj1cbmEsYT1kKTooYyhhLGQpLGQ9eWYoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYocGcoZikpcmV0dXJuIEhkKGEsZCxmLGgpO2lmKHNjKGYpKXJldHVybiBFKGEsZCxmLGgpO2smJnJnKGEsZik7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBmKXN3aXRjaChhLnRhZyl7Y2FzZSAyOmNhc2UgMTpoPWEudHlwZSxBKFwiMTUyXCIsaC5kaXNwbGF5TmFtZXx8aC5uYW1lfHxcIkNvbXBvbmVudFwiKX1yZXR1cm4gYyhhLGQpfX12YXIgdGc9c2coITApLHVnPXNnKCExKSx2Zz1udWxsLHdnPW51bGwseGc9ITE7ZnVuY3Rpb24geWcoYSxiKXt2YXIgYz1uZXcgdWYoNSxudWxsLG51bGwsMCk7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtjLmVmZmVjdFRhZz04O251bGwhPT1hLmxhc3RFZmZlY3Q/KGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsYS5sYXN0RWZmZWN0PWMpOmEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PWN9XG5mdW5jdGlvbiB6ZyhhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBBZyhhKXtpZih4Zyl7dmFyIGI9d2c7aWYoYil7dmFyIGM9YjtpZighemcoYSxiKSl7Yj1kZihjKTtpZighYnx8IXpnKGEsYikpe2EuZWZmZWN0VGFnfD0yO3hnPSExO3ZnPWE7cmV0dXJufXlnKHZnLGMpfXZnPWE7d2c9ZWYoYil9ZWxzZSBhLmVmZmVjdFRhZ3w9Mix4Zz0hMSx2Zz1hfX1cbmZ1bmN0aW9uIEJnKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZzspYT1hLnJldHVybjt2Zz1hfWZ1bmN0aW9uIENnKGEpe2lmKGEhPT12ZylyZXR1cm4hMTtpZigheGcpcmV0dXJuIEJnKGEpLHhnPSEwLCExO3ZhciBiPWEudHlwZTtpZig1IT09YS50YWd8fFwiaGVhZFwiIT09YiYmXCJib2R5XCIhPT1iJiYhJGUoYixhLm1lbW9pemVkUHJvcHMpKWZvcihiPXdnO2I7KXlnKGEsYiksYj1kZihiKTtCZyhhKTt3Zz12Zz9kZihhLnN0YXRlTm9kZSk6bnVsbDtyZXR1cm4hMH1mdW5jdGlvbiBEZygpe3dnPXZnPW51bGw7eGc9ITF9ZnVuY3Rpb24gUShhLGIsYyl7RWcoYSxiLGMsYi5leHBpcmF0aW9uVGltZSl9ZnVuY3Rpb24gRWcoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT91ZyhiLG51bGwsYyxkKTp0ZyhiLGEuY2hpbGQsYyxkKX1cbmZ1bmN0aW9uIEZnKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZWZmZWN0VGFnfD0xMjh9ZnVuY3Rpb24gR2coYSxiLGMsZCxlKXtGZyhhLGIpO3ZhciBmPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2lmKCFjJiYhZilyZXR1cm4gZCYmdGYoYiwhMSksUihhLGIpO2M9Yi5zdGF0ZU5vZGU7ZWMuY3VycmVudD1iO3ZhciBnPWY/bnVsbDpjLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO2YmJihFZyhhLGIsbnVsbCxlKSxiLmNoaWxkPW51bGwpO0VnKGEsYixnLGUpO2IubWVtb2l6ZWRTdGF0ZT1jLnN0YXRlO2IubWVtb2l6ZWRQcm9wcz1jLnByb3BzO2QmJnRmKGIsITApO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gSGcoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9xZihhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZxZihhLGIuY29udGV4dCwhMSk7ZGcoYSxiLmNvbnRhaW5lckluZm8pfVxuZnVuY3Rpb24gSWcoYSxiLGMsZCl7dmFyIGU9YS5jaGlsZDtudWxsIT09ZSYmKGUucmV0dXJuPWEpO2Zvcig7bnVsbCE9PWU7KXtzd2l0Y2goZS50YWcpe2Nhc2UgMTI6dmFyIGY9ZS5zdGF0ZU5vZGV8MDtpZihlLnR5cGU9PT1iJiYwIT09KGYmYykpe2ZvcihmPWU7bnVsbCE9PWY7KXt2YXIgZz1mLmFsdGVybmF0ZTtpZigwPT09Zi5leHBpcmF0aW9uVGltZXx8Zi5leHBpcmF0aW9uVGltZT5kKWYuZXhwaXJhdGlvblRpbWU9ZCxudWxsIT09ZyYmKDA9PT1nLmV4cGlyYXRpb25UaW1lfHxnLmV4cGlyYXRpb25UaW1lPmQpJiYoZy5leHBpcmF0aW9uVGltZT1kKTtlbHNlIGlmKG51bGwhPT1nJiYoMD09PWcuZXhwaXJhdGlvblRpbWV8fGcuZXhwaXJhdGlvblRpbWU+ZCkpZy5leHBpcmF0aW9uVGltZT1kO2Vsc2UgYnJlYWs7Zj1mLnJldHVybn1mPW51bGx9ZWxzZSBmPWUuY2hpbGQ7YnJlYWs7Y2FzZSAxMzpmPWUudHlwZT09PWEudHlwZT9udWxsOmUuY2hpbGQ7YnJlYWs7ZGVmYXVsdDpmPVxuZS5jaGlsZH1pZihudWxsIT09ZilmLnJldHVybj1lO2Vsc2UgZm9yKGY9ZTtudWxsIT09Zjspe2lmKGY9PT1hKXtmPW51bGw7YnJlYWt9ZT1mLnNpYmxpbmc7aWYobnVsbCE9PWUpe2UucmV0dXJuPWYucmV0dXJuO2Y9ZTticmVha31mPWYucmV0dXJufWU9Zn19XG5mdW5jdGlvbiBKZyhhLGIsYyl7dmFyIGQ9Yi50eXBlLl9jb250ZXh0LGU9Yi5wZW5kaW5nUHJvcHMsZj1iLm1lbW9pemVkUHJvcHMsZz0hMDtpZihPLmN1cnJlbnQpZz0hMTtlbHNlIGlmKGY9PT1lKXJldHVybiBiLnN0YXRlTm9kZT0wLFhmKGIpLFIoYSxiKTt2YXIgaD1lLnZhbHVlO2IubWVtb2l6ZWRQcm9wcz1lO2lmKG51bGw9PT1mKWg9MTA3Mzc0MTgyMztlbHNlIGlmKGYudmFsdWU9PT1lLnZhbHVlKXtpZihmLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmZylyZXR1cm4gYi5zdGF0ZU5vZGU9MCxYZihiKSxSKGEsYik7aD0wfWVsc2V7dmFyIGs9Zi52YWx1ZTtpZihrPT09aCYmKDAhPT1rfHwxL2s9PT0xL2gpfHxrIT09ayYmaCE9PWgpe2lmKGYuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiZnKXJldHVybiBiLnN0YXRlTm9kZT0wLFhmKGIpLFIoYSxiKTtoPTB9ZWxzZSBpZihoPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhrLFxuaCk6MTA3Mzc0MTgyMyxofD0wLDA9PT1oKXtpZihmLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmZylyZXR1cm4gYi5zdGF0ZU5vZGU9MCxYZihiKSxSKGEsYil9ZWxzZSBJZyhiLGQsaCxjKX1iLnN0YXRlTm9kZT1oO1hmKGIpO1EoYSxiLGUuY2hpbGRyZW4pO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIFIoYSxiKXtudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQ/QShcIjE1M1wiKTp2b2lkIDA7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDt2YXIgYz12ZihhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz12ZihhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBLZyhhLGIsYyl7aWYoMD09PWIuZXhwaXJhdGlvblRpbWV8fGIuZXhwaXJhdGlvblRpbWU+Yyl7c3dpdGNoKGIudGFnKXtjYXNlIDM6SGcoYik7YnJlYWs7Y2FzZSAyOnNmKGIpO2JyZWFrO2Nhc2UgNDpkZyhiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTM6WGYoYil9cmV0dXJuIG51bGx9c3dpdGNoKGIudGFnKXtjYXNlIDA6bnVsbCE9PWE/QShcIjE1NVwiKTp2b2lkIDA7dmFyIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZj1sZihiKTtmPW5mKGIsZik7ZD1kKGUsZik7Yi5lZmZlY3RUYWd8PTE7XCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQucmVuZGVyJiZ2b2lkIDA9PT1kLiQkdHlwZW9mPyhmPWIudHlwZSxiLnRhZz0yLGIubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZC5zdGF0ZSYmdm9pZCAwIT09ZC5zdGF0ZT9kLnN0YXRlOm51bGwsZj1mLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBmJiZoZyhiLGYsZSksZT1zZihiKSxkLnVwZGF0ZXI9bGcsYi5zdGF0ZU5vZGU9ZCxkLl9yZWFjdEludGVybmFsRmliZXI9YixvZyhiLGMpLGE9R2coYSxiLCEwLGUsYykpOihiLnRhZz0xLFEoYSxiLGQpLGIubWVtb2l6ZWRQcm9wcz1lLGE9Yi5jaGlsZCk7cmV0dXJuIGE7Y2FzZSAxOnJldHVybiBlPWIudHlwZSxjPWIucGVuZGluZ1Byb3BzLE8uY3VycmVudHx8Yi5tZW1vaXplZFByb3BzIT09Yz8oZD1sZihiKSxkPW5mKGIsZCksZT1lKGMsZCksYi5lZmZlY3RUYWd8PTEsUShhLGIsZSksYi5tZW1vaXplZFByb3BzPWMsYT1iLmNoaWxkKTphPVIoYSxiKSxhO2Nhc2UgMjplPXNmKGIpO2lmKG51bGw9PT1hKWlmKG51bGw9PT1iLnN0YXRlTm9kZSl7dmFyIGc9Yi5wZW5kaW5nUHJvcHMsaD1iLnR5cGU7ZD1sZihiKTt2YXIgaz0yPT09Yi50YWcmJm51bGwhPWIudHlwZS5jb250ZXh0VHlwZXM7Zj1rP25mKGIsZCk6aGE7Zz1uZXcgaChnLGYpO2IubWVtb2l6ZWRTdGF0ZT1udWxsIT09XG5nLnN0YXRlJiZ2b2lkIDAhPT1nLnN0YXRlP2cuc3RhdGU6bnVsbDtnLnVwZGF0ZXI9bGc7Yi5zdGF0ZU5vZGU9ZztnLl9yZWFjdEludGVybmFsRmliZXI9YjtrJiYoaz1iLnN0YXRlTm9kZSxrLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZCxrLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO29nKGIsYyk7ZD0hMH1lbHNle2g9Yi50eXBlO2Q9Yi5zdGF0ZU5vZGU7az1iLm1lbW9pemVkUHJvcHM7Zj1iLnBlbmRpbmdQcm9wcztkLnByb3BzPWs7dmFyIG49ZC5jb250ZXh0O2c9bGYoYik7Zz1uZihiLGcpO3ZhciByPWguZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOyhoPVwiZnVuY3Rpb25cIj09PXR5cGVvZiByfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHxcbihrIT09Znx8biE9PWcpJiZuZyhiLGQsZixnKTtIZj0hMTt2YXIgdz1iLm1lbW9pemVkU3RhdGU7bj1kLnN0YXRlPXc7dmFyIFA9Yi51cGRhdGVRdWV1ZTtudWxsIT09UCYmKFFmKGIsUCxmLGQsYyksbj1iLm1lbW9pemVkU3RhdGUpO2shPT1mfHx3IT09bnx8Ty5jdXJyZW50fHxIZj8oXCJmdW5jdGlvblwiPT09dHlwZW9mIHImJihoZyhiLHIsZiksbj1iLm1lbW9pemVkU3RhdGUpLChrPUhmfHxtZyhiLGssZix3LG4sZykpPyhofHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnRXaWxsTW91bnQmJmQuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZC5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZE1vdW50JiZcbihiLmVmZmVjdFRhZ3w9NCkpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxiLm1lbW9pemVkUHJvcHM9ZixiLm1lbW9pemVkU3RhdGU9biksZC5wcm9wcz1mLGQuc3RhdGU9bixkLmNvbnRleHQ9ZyxkPWspOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxkPSExKX1lbHNlIGg9Yi50eXBlLGQ9Yi5zdGF0ZU5vZGUsZj1iLm1lbW9pemVkUHJvcHMsaz1iLnBlbmRpbmdQcm9wcyxkLnByb3BzPWYsbj1kLmNvbnRleHQsZz1sZihiKSxnPW5mKGIsZykscj1oLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcywoaD1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8XG4oZiE9PWt8fG4hPT1nKSYmbmcoYixkLGssZyksSGY9ITEsbj1iLm1lbW9pemVkU3RhdGUsdz1kLnN0YXRlPW4sUD1iLnVwZGF0ZVF1ZXVlLG51bGwhPT1QJiYoUWYoYixQLGssZCxjKSx3PWIubWVtb2l6ZWRTdGF0ZSksZiE9PWt8fG4hPT13fHxPLmN1cnJlbnR8fEhmPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgciYmKGhnKGIscixrKSx3PWIubWVtb2l6ZWRTdGF0ZSksKHI9SGZ8fG1nKGIsZixrLG4sdyxnKSk/KGh8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50V2lsbFVwZGF0ZSYmZC5jb21wb25lbnRXaWxsVXBkYXRlKGssdyxnKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZC5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShrLHcsZykpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZFVwZGF0ZSYmXG4oYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTI1NikpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5jb21wb25lbnREaWRVcGRhdGV8fGY9PT1hLm1lbW9pemVkUHJvcHMmJm49PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGY9PT1hLm1lbW9pemVkUHJvcHMmJm49PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxiLm1lbW9pemVkUHJvcHM9ayxiLm1lbW9pemVkU3RhdGU9dyksZC5wcm9wcz1rLGQuc3RhdGU9dyxkLmNvbnRleHQ9ZyxkPXIpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5jb21wb25lbnREaWRVcGRhdGV8fGY9PT1hLm1lbW9pemVkUHJvcHMmJm49PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFxuZj09PWEubWVtb2l6ZWRQcm9wcyYmbj09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGQ9ITEpO3JldHVybiBHZyhhLGIsZCxlLGMpO2Nhc2UgMzpIZyhiKTtlPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWUpaWYoZD1iLm1lbW9pemVkU3RhdGUsZD1udWxsIT09ZD9kLmVsZW1lbnQ6bnVsbCxRZihiLGUsYi5wZW5kaW5nUHJvcHMsbnVsbCxjKSxlPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50LGU9PT1kKURnKCksYT1SKGEsYik7ZWxzZXtkPWIuc3RhdGVOb2RlO2lmKGQ9KG51bGw9PT1hfHxudWxsPT09YS5jaGlsZCkmJmQuaHlkcmF0ZSl3Zz1lZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSx2Zz1iLGQ9eGc9ITA7ZD8oYi5lZmZlY3RUYWd8PTIsYi5jaGlsZD11ZyhiLG51bGwsZSxjKSk6KERnKCksUShhLGIsZSkpO2E9Yi5jaGlsZH1lbHNlIERnKCksYT1SKGEsYik7cmV0dXJuIGE7Y2FzZSA1OmE6e2NnKGJnLmN1cnJlbnQpO2U9Y2coJGYuY3VycmVudCk7ZD1EZShlLFxuYi50eXBlKTtlIT09ZCYmKE4oYWcsYixiKSxOKCRmLGQsYikpO251bGw9PT1hJiZBZyhiKTtlPWIudHlwZTtrPWIubWVtb2l6ZWRQcm9wcztkPWIucGVuZGluZ1Byb3BzO2Y9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGw7aWYoIU8uY3VycmVudCYmaz09PWQpe2lmKGs9Yi5tb2RlJjEmJiEhZC5oaWRkZW4pYi5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzO2lmKCFrfHwxMDczNzQxODIzIT09Yyl7YT1SKGEsYik7YnJlYWsgYX19az1kLmNoaWxkcmVuOyRlKGUsZCk/az1udWxsOmYmJiRlKGUsZikmJihiLmVmZmVjdFRhZ3w9MTYpO0ZnKGEsYik7MTA3Mzc0MTgyMyE9PWMmJmIubW9kZSYxJiZkLmhpZGRlbj8oYi5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzLGIubWVtb2l6ZWRQcm9wcz1kLGE9bnVsbCk6KFEoYSxiLGspLGIubWVtb2l6ZWRQcm9wcz1kLGE9Yi5jaGlsZCl9cmV0dXJuIGE7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmQWcoYiksYi5tZW1vaXplZFByb3BzPWIucGVuZGluZ1Byb3BzLFxubnVsbDtjYXNlIDE2OnJldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gZGcoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxlPWIucGVuZGluZ1Byb3BzLE8uY3VycmVudHx8Yi5tZW1vaXplZFByb3BzIT09ZT8obnVsbD09PWE/Yi5jaGlsZD10ZyhiLG51bGwsZSxjKTpRKGEsYixlKSxiLm1lbW9pemVkUHJvcHM9ZSxhPWIuY2hpbGQpOmE9UihhLGIpLGE7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUucmVuZGVyLGM9Yi5wZW5kaW5nUHJvcHMsZD1iLnJlZixPLmN1cnJlbnR8fGIubWVtb2l6ZWRQcm9wcyE9PWN8fGQhPT0obnVsbCE9PWE/YS5yZWY6bnVsbCk/KGU9ZShjLGQpLFEoYSxiLGUpLGIubWVtb2l6ZWRQcm9wcz1jLGE9Yi5jaGlsZCk6YT1SKGEsYiksYTtjYXNlIDEwOnJldHVybiBjPWIucGVuZGluZ1Byb3BzLE8uY3VycmVudHx8Yi5tZW1vaXplZFByb3BzIT09Yz8oUShhLGIsYyksYi5tZW1vaXplZFByb3BzPWMsYT1iLmNoaWxkKTphPVIoYSxiKSxhO2Nhc2UgMTE6cmV0dXJuIGM9XG5iLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixPLmN1cnJlbnR8fG51bGwhPT1jJiZiLm1lbW9pemVkUHJvcHMhPT1jPyhRKGEsYixjKSxiLm1lbW9pemVkUHJvcHM9YyxhPWIuY2hpbGQpOmE9UihhLGIpLGE7Y2FzZSAxNTpyZXR1cm4gYz1iLnBlbmRpbmdQcm9wcyxiLm1lbW9pemVkUHJvcHM9PT1jP2E9UihhLGIpOihRKGEsYixjLmNoaWxkcmVuKSxiLm1lbW9pemVkUHJvcHM9YyxhPWIuY2hpbGQpLGE7Y2FzZSAxMzpyZXR1cm4gSmcoYSxiLGMpO2Nhc2UgMTI6YTppZihkPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGs9Yi5tZW1vaXplZFByb3BzLGU9ZC5fY3VycmVudFZhbHVlLGc9ZC5fY2hhbmdlZEJpdHMsTy5jdXJyZW50fHwwIT09Z3x8ayE9PWYpe2IubWVtb2l6ZWRQcm9wcz1mO2g9Zi51bnN0YWJsZV9vYnNlcnZlZEJpdHM7aWYodm9pZCAwPT09aHx8bnVsbD09PWgpaD0xMDczNzQxODIzO2Iuc3RhdGVOb2RlPWg7aWYoMCE9PShnJmgpKUlnKGIsZCxnLGMpO2Vsc2UgaWYoaz09PWYpe2E9XG5SKGEsYik7YnJlYWsgYX1jPWYuY2hpbGRyZW47Yz1jKGUpO2IuZWZmZWN0VGFnfD0xO1EoYSxiLGMpO2E9Yi5jaGlsZH1lbHNlIGE9UihhLGIpO3JldHVybiBhO2RlZmF1bHQ6QShcIjE1NlwiKX19ZnVuY3Rpb24gTGcoYSl7YS5lZmZlY3RUYWd8PTR9dmFyIFBnPXZvaWQgMCxRZz12b2lkIDAsUmc9dm9pZCAwO1BnPWZ1bmN0aW9uKCl7fTtRZz1mdW5jdGlvbihhLGIsYyl7KGIudXBkYXRlUXVldWU9YykmJkxnKGIpfTtSZz1mdW5jdGlvbihhLGIsYyxkKXtjIT09ZCYmTGcoYil9O1xuZnVuY3Rpb24gU2coYSxiKXt2YXIgYz1iLnBlbmRpbmdQcm9wcztzd2l0Y2goYi50YWcpe2Nhc2UgMTpyZXR1cm4gbnVsbDtjYXNlIDI6cmV0dXJuIG9mKGIpLG51bGw7Y2FzZSAzOmVnKGIpO3BmKGIpO3ZhciBkPWIuc3RhdGVOb2RlO2QucGVuZGluZ0NvbnRleHQmJihkLmNvbnRleHQ9ZC5wZW5kaW5nQ29udGV4dCxkLnBlbmRpbmdDb250ZXh0PW51bGwpO2lmKG51bGw9PT1hfHxudWxsPT09YS5jaGlsZClDZyhiKSxiLmVmZmVjdFRhZyY9LTM7UGcoYik7cmV0dXJuIG51bGw7Y2FzZSA1OmZnKGIpO2Q9Y2coYmcuY3VycmVudCk7dmFyIGU9Yi50eXBlO2lmKG51bGwhPT1hJiZudWxsIT1iLnN0YXRlTm9kZSl7dmFyIGY9YS5tZW1vaXplZFByb3BzLGc9Yi5zdGF0ZU5vZGUsaD1jZygkZi5jdXJyZW50KTtnPVNlKGcsZSxmLGMsZCk7UWcoYSxiLGcsZSxmLGMsZCxoKTthLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9ZWxzZXtpZighYylyZXR1cm4gbnVsbD09PWIuc3RhdGVOb2RlP1xuQShcIjE2NlwiKTp2b2lkIDAsbnVsbDthPWNnKCRmLmN1cnJlbnQpO2lmKENnKGIpKWM9Yi5zdGF0ZU5vZGUsZT1iLnR5cGUsZj1iLm1lbW9pemVkUHJvcHMsY1tDXT1iLGNbTWFdPWYsZD1VZShjLGUsZixhLGQpLGIudXBkYXRlUXVldWU9ZCxudWxsIT09ZCYmTGcoYik7ZWxzZXthPVBlKGUsYyxkLGEpO2FbQ109YjthW01hXT1jO2E6Zm9yKGY9Yi5jaGlsZDtudWxsIT09Zjspe2lmKDU9PT1mLnRhZ3x8Nj09PWYudGFnKWEuYXBwZW5kQ2hpbGQoZi5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWYudGFnJiZudWxsIT09Zi5jaGlsZCl7Zi5jaGlsZC5yZXR1cm49ZjtmPWYuY2hpbGQ7Y29udGludWV9aWYoZj09PWIpYnJlYWs7Zm9yKDtudWxsPT09Zi5zaWJsaW5nOyl7aWYobnVsbD09PWYucmV0dXJufHxmLnJldHVybj09PWIpYnJlYWsgYTtmPWYucmV0dXJufWYuc2libGluZy5yZXR1cm49Zi5yZXR1cm47Zj1mLnNpYmxpbmd9UmUoYSxlLGMsZCk7WmUoZSxjKSYmTGcoYik7Yi5zdGF0ZU5vZGU9XG5hfW51bGwhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpfXJldHVybiBudWxsO2Nhc2UgNjppZihhJiZudWxsIT1iLnN0YXRlTm9kZSlSZyhhLGIsYS5tZW1vaXplZFByb3BzLGMpO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBjKXJldHVybiBudWxsPT09Yi5zdGF0ZU5vZGU/QShcIjE2NlwiKTp2b2lkIDAsbnVsbDtkPWNnKGJnLmN1cnJlbnQpO2NnKCRmLmN1cnJlbnQpO0NnKGIpPyhkPWIuc3RhdGVOb2RlLGM9Yi5tZW1vaXplZFByb3BzLGRbQ109YixWZShkLGMpJiZMZyhiKSk6KGQ9UWUoYyxkKSxkW0NdPWIsYi5zdGF0ZU5vZGU9ZCl9cmV0dXJuIG51bGw7Y2FzZSAxNDpyZXR1cm4gbnVsbDtjYXNlIDE2OnJldHVybiBudWxsO2Nhc2UgMTA6cmV0dXJuIG51bGw7Y2FzZSAxMTpyZXR1cm4gbnVsbDtjYXNlIDE1OnJldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gZWcoYiksUGcoYiksbnVsbDtjYXNlIDEzOnJldHVybiBZZihiKSxudWxsO2Nhc2UgMTI6cmV0dXJuIG51bGw7Y2FzZSAwOkEoXCIxNjdcIik7XG5kZWZhdWx0OkEoXCIxNTZcIil9fWZ1bmN0aW9uIFRnKGEsYil7dmFyIGM9Yi5zb3VyY2U7bnVsbD09PWIuc3RhY2smJm51bGwhPT1jJiZ2YyhjKTtudWxsIT09YyYmdGMoYyk7Yj1iLnZhbHVlO251bGwhPT1hJiYyPT09YS50YWcmJnRjKGEpO3RyeXtiJiZiLnN1cHByZXNzUmVhY3RFcnJvckxvZ2dpbmd8fGNvbnNvbGUuZXJyb3IoYil9Y2F0Y2goZCl7ZCYmZC5zdXBwcmVzc1JlYWN0RXJyb3JMb2dnaW5nfHxjb25zb2xlLmVycm9yKGQpfX1mdW5jdGlvbiBVZyhhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09YilpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYil0cnl7YihudWxsKX1jYXRjaChjKXtWZyhhLGMpfWVsc2UgYi5jdXJyZW50PW51bGx9XG5mdW5jdGlvbiBXZyhhKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgR2YmJkdmKGEpO3N3aXRjaChhLnRhZyl7Y2FzZSAyOlVnKGEpO3ZhciBiPWEuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxVbm1vdW50KXRyeXtiLnByb3BzPWEubWVtb2l6ZWRQcm9wcyxiLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSxiLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goYyl7VmcoYSxjKX1icmVhaztjYXNlIDU6VWcoYSk7YnJlYWs7Y2FzZSA0OlhnKGEpfX1mdW5jdGlvbiBZZyhhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIFpnKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKFlnKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iLnJldHVybn1BKFwiMTYwXCIpO2M9dm9pZCAwfXZhciBkPWI9dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmI9Yy5zdGF0ZU5vZGU7ZD0hMTticmVhaztjYXNlIDM6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6QShcIjE2MVwiKX1jLmVmZmVjdFRhZyYxNiYmKEdlKGIsXCJcIiksYy5lZmZlY3RUYWcmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxZZyhjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWc7KXtpZihjLmVmZmVjdFRhZyYyKWNvbnRpbnVlIGI7XG5pZihudWxsPT09Yy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWZvcih2YXIgZT1hOzspe2lmKDU9PT1lLnRhZ3x8Nj09PWUudGFnKWlmKGMpaWYoZCl7dmFyIGY9YixnPWUuc3RhdGVOb2RlLGg9Yzs4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGcsaCk6Zi5pbnNlcnRCZWZvcmUoZyxoKX1lbHNlIGIuaW5zZXJ0QmVmb3JlKGUuc3RhdGVOb2RlLGMpO2Vsc2UgZD8oZj1iLGc9ZS5zdGF0ZU5vZGUsOD09PWYubm9kZVR5cGU/Zi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShnLGYpOmYuYXBwZW5kQ2hpbGQoZykpOmIuYXBwZW5kQ2hpbGQoZS5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWUudGFnJiZudWxsIT09ZS5jaGlsZCl7ZS5jaGlsZC5yZXR1cm49ZTtlPWUuY2hpbGQ7Y29udGludWV9aWYoZT09PWEpYnJlYWs7Zm9yKDtudWxsPT09XG5lLnNpYmxpbmc7KXtpZihudWxsPT09ZS5yZXR1cm58fGUucmV0dXJuPT09YSlyZXR1cm47ZT1lLnJldHVybn1lLnNpYmxpbmcucmV0dXJuPWUucmV0dXJuO2U9ZS5zaWJsaW5nfX1cbmZ1bmN0aW9uIFhnKGEpe2Zvcih2YXIgYj1hLGM9ITEsZD12b2lkIDAsZT12b2lkIDA7Oyl7aWYoIWMpe2M9Yi5yZXR1cm47YTpmb3IoOzspe251bGw9PT1jP0EoXCIxNjBcIik6dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmQ9Yy5zdGF0ZU5vZGU7ZT0hMTticmVhayBhO2Nhc2UgMzpkPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZT0hMDticmVhayBhO2Nhc2UgNDpkPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZT0hMDticmVhayBhfWM9Yy5yZXR1cm59Yz0hMH1pZig1PT09Yi50YWd8fDY9PT1iLnRhZyl7YTpmb3IodmFyIGY9YixnPWY7OylpZihXZyhnKSxudWxsIT09Zy5jaGlsZCYmNCE9PWcudGFnKWcuY2hpbGQucmV0dXJuPWcsZz1nLmNoaWxkO2Vsc2V7aWYoZz09PWYpYnJlYWs7Zm9yKDtudWxsPT09Zy5zaWJsaW5nOyl7aWYobnVsbD09PWcucmV0dXJufHxnLnJldHVybj09PWYpYnJlYWsgYTtnPWcucmV0dXJufWcuc2libGluZy5yZXR1cm49Zy5yZXR1cm47Zz1nLnNpYmxpbmd9ZT9cbihmPWQsZz1iLnN0YXRlTm9kZSw4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZyk6Zi5yZW1vdmVDaGlsZChnKSk6ZC5yZW1vdmVDaGlsZChiLnN0YXRlTm9kZSl9ZWxzZSBpZig0PT09Yi50YWc/ZD1iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOldnKGIpLG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm47Yj1iLnJldHVybjs0PT09Yi50YWcmJihjPSExKX1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1cbmZ1bmN0aW9uICRnKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDI6YnJlYWs7Y2FzZSA1OnZhciBjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe3ZhciBkPWIubWVtb2l6ZWRQcm9wczthPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO3ZhciBlPWIudHlwZSxmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO251bGwhPT1mJiYoY1tNYV09ZCxUZShjLGYsZSxhLGQpKX1icmVhaztjYXNlIDY6bnVsbD09PWIuc3RhdGVOb2RlP0EoXCIxNjJcIik6dm9pZCAwO2Iuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iLm1lbW9pemVkUHJvcHM7YnJlYWs7Y2FzZSAzOmJyZWFrO2Nhc2UgMTU6YnJlYWs7Y2FzZSAxNjpicmVhaztkZWZhdWx0OkEoXCIxNjNcIil9fWZ1bmN0aW9uIGFoKGEsYixjKXtjPUtmKGMpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe2JoKGQpO1RnKGEsYil9O3JldHVybiBjfVxuZnVuY3Rpb24gY2goYSxiLGMpe2M9S2YoYyk7Yy50YWc9Mzt2YXIgZD1hLnN0YXRlTm9kZTtudWxsIT09ZCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7bnVsbD09PWRoP2RoPW5ldyBTZXQoW3RoaXNdKTpkaC5hZGQodGhpcyk7dmFyIGM9Yi52YWx1ZSxkPWIuc3RhY2s7VGcoYSxiKTt0aGlzLmNvbXBvbmVudERpZENhdGNoKGMse2NvbXBvbmVudFN0YWNrOm51bGwhPT1kP2Q6XCJcIn0pfSk7cmV0dXJuIGN9XG5mdW5jdGlvbiBlaChhLGIsYyxkLGUsZil7Yy5lZmZlY3RUYWd8PTUxMjtjLmZpcnN0RWZmZWN0PWMubGFzdEVmZmVjdD1udWxsO2Q9VGYoZCxjKTthPWI7ZG97c3dpdGNoKGEudGFnKXtjYXNlIDM6YS5lZmZlY3RUYWd8PTEwMjQ7ZD1haChhLGQsZik7TmYoYSxkLGYpO3JldHVybjtjYXNlIDI6aWYoYj1kLGM9YS5zdGF0ZU5vZGUsMD09PShhLmVmZmVjdFRhZyY2NCkmJm51bGwhPT1jJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1kaHx8IWRoLmhhcyhjKSkpe2EuZWZmZWN0VGFnfD0xMDI0O2Q9Y2goYSxiLGYpO05mKGEsZCxmKTtyZXR1cm59fWE9YS5yZXR1cm59d2hpbGUobnVsbCE9PWEpfVxuZnVuY3Rpb24gZmgoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDI6b2YoYSk7dmFyIGI9YS5lZmZlY3RUYWc7cmV0dXJuIGImMTAyND8oYS5lZmZlY3RUYWc9YiYtMTAyNXw2NCxhKTpudWxsO2Nhc2UgMzpyZXR1cm4gZWcoYSkscGYoYSksYj1hLmVmZmVjdFRhZyxiJjEwMjQ/KGEuZWZmZWN0VGFnPWImLTEwMjV8NjQsYSk6bnVsbDtjYXNlIDU6cmV0dXJuIGZnKGEpLG51bGw7Y2FzZSAxNjpyZXR1cm4gYj1hLmVmZmVjdFRhZyxiJjEwMjQ/KGEuZWZmZWN0VGFnPWImLTEwMjV8NjQsYSk6bnVsbDtjYXNlIDQ6cmV0dXJuIGVnKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gWWYoYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX12YXIgZ2g9YWYoKSxoaD0yLGloPWdoLGpoPTAsa2g9MCxsaD0hMSxTPW51bGwsbWg9bnVsbCxUPTAsbmg9LTEsb2g9ITEsVT1udWxsLHBoPSExLHFoPSExLGRoPW51bGw7XG5mdW5jdGlvbiByaCgpe2lmKG51bGwhPT1TKWZvcih2YXIgYT1TLnJldHVybjtudWxsIT09YTspe3ZhciBiPWE7c3dpdGNoKGIudGFnKXtjYXNlIDI6b2YoYik7YnJlYWs7Y2FzZSAzOmVnKGIpO3BmKGIpO2JyZWFrO2Nhc2UgNTpmZyhiKTticmVhaztjYXNlIDQ6ZWcoYik7YnJlYWs7Y2FzZSAxMzpZZihiKX1hPWEucmV0dXJufW1oPW51bGw7VD0wO25oPS0xO29oPSExO1M9bnVsbDtxaD0hMX1cbmZ1bmN0aW9uIHNoKGEpe2Zvcig7Oyl7dmFyIGI9YS5hbHRlcm5hdGUsYz1hLnJldHVybixkPWEuc2libGluZztpZigwPT09KGEuZWZmZWN0VGFnJjUxMikpe2I9U2coYixhLFQpO3ZhciBlPWE7aWYoMTA3Mzc0MTgyMz09PVR8fDEwNzM3NDE4MjMhPT1lLmV4cGlyYXRpb25UaW1lKXt2YXIgZj0wO3N3aXRjaChlLnRhZyl7Y2FzZSAzOmNhc2UgMjp2YXIgZz1lLnVwZGF0ZVF1ZXVlO251bGwhPT1nJiYoZj1nLmV4cGlyYXRpb25UaW1lKX1mb3IoZz1lLmNoaWxkO251bGwhPT1nOykwIT09Zy5leHBpcmF0aW9uVGltZSYmKDA9PT1mfHxmPmcuZXhwaXJhdGlvblRpbWUpJiYoZj1nLmV4cGlyYXRpb25UaW1lKSxnPWcuc2libGluZztlLmV4cGlyYXRpb25UaW1lPWZ9aWYobnVsbCE9PWIpcmV0dXJuIGI7bnVsbCE9PWMmJjA9PT0oYy5lZmZlY3RUYWcmNTEyKSYmKG51bGw9PT1jLmZpcnN0RWZmZWN0JiYoYy5maXJzdEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxudWxsIT09YS5sYXN0RWZmZWN0JiZcbihudWxsIT09Yy5sYXN0RWZmZWN0JiYoYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YS5maXJzdEVmZmVjdCksYy5sYXN0RWZmZWN0PWEubGFzdEVmZmVjdCksMTxhLmVmZmVjdFRhZyYmKG51bGwhPT1jLmxhc3RFZmZlY3Q/Yy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YTpjLmZpcnN0RWZmZWN0PWEsYy5sYXN0RWZmZWN0PWEpKTtpZihudWxsIT09ZClyZXR1cm4gZDtpZihudWxsIT09YylhPWM7ZWxzZXtxaD0hMDticmVha319ZWxzZXthPWZoKGEsb2gsVCk7aWYobnVsbCE9PWEpcmV0dXJuIGEuZWZmZWN0VGFnJj01MTEsYTtudWxsIT09YyYmKGMuZmlyc3RFZmZlY3Q9Yy5sYXN0RWZmZWN0PW51bGwsYy5lZmZlY3RUYWd8PTUxMik7aWYobnVsbCE9PWQpcmV0dXJuIGQ7aWYobnVsbCE9PWMpYT1jO2Vsc2UgYnJlYWt9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gdGgoYSl7dmFyIGI9S2coYS5hbHRlcm5hdGUsYSxUKTtudWxsPT09YiYmKGI9c2goYSkpO2VjLmN1cnJlbnQ9bnVsbDtyZXR1cm4gYn1cbmZ1bmN0aW9uIHVoKGEsYixjKXtsaD9BKFwiMjQzXCIpOnZvaWQgMDtsaD0hMDtpZihiIT09VHx8YSE9PW1ofHxudWxsPT09UylyaCgpLG1oPWEsVD1iLG5oPS0xLFM9dmYobWguY3VycmVudCxudWxsLFQpLGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPTA7dmFyIGQ9ITE7b2g9IWN8fFQ8PWhoO2Rve3RyeXtpZihjKWZvcig7bnVsbCE9PVMmJiF2aCgpOylTPXRoKFMpO2Vsc2UgZm9yKDtudWxsIT09UzspUz10aChTKX1jYXRjaChmKXtpZihudWxsPT09UylkPSEwLGJoKGYpO2Vsc2V7bnVsbD09PVM/QShcIjI3MVwiKTp2b2lkIDA7Yz1TO3ZhciBlPWMucmV0dXJuO2lmKG51bGw9PT1lKXtkPSEwO2JoKGYpO2JyZWFrfWVoKGEsZSxjLGYsb2gsVCxpaCk7Uz1zaChjKX19YnJlYWt9d2hpbGUoMSk7bGg9ITE7aWYoZClyZXR1cm4gbnVsbDtpZihudWxsPT09Uyl7aWYocWgpcmV0dXJuIGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWIsYS5jdXJyZW50LmFsdGVybmF0ZTtvaD9BKFwiMjYyXCIpOlxudm9pZCAwOzA8PW5oJiZzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dmFyIGI9YS5jdXJyZW50LmV4cGlyYXRpb25UaW1lOzAhPT1iJiYoMD09PWEucmVtYWluaW5nRXhwaXJhdGlvblRpbWV8fGEucmVtYWluaW5nRXhwaXJhdGlvblRpbWU8YikmJndoKGEsYil9LG5oKTt4aChhLmN1cnJlbnQuZXhwaXJhdGlvblRpbWUpfXJldHVybiBudWxsfVxuZnVuY3Rpb24gVmcoYSxiKXt2YXIgYzthOntsaCYmIXBoP0EoXCIyNjNcIik6dm9pZCAwO2ZvcihjPWEucmV0dXJuO251bGwhPT1jOyl7c3dpdGNoKGMudGFnKXtjYXNlIDI6dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tQ2F0Y2h8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PWRofHwhZGguaGFzKGQpKSl7YT1UZihiLGEpO2E9Y2goYyxhLDEpO01mKGMsYSwxKTtrZyhjLDEpO2M9dm9pZCAwO2JyZWFrIGF9YnJlYWs7Y2FzZSAzOmE9VGYoYixhKTthPWFoKGMsYSwxKTtNZihjLGEsMSk7a2coYywxKTtjPXZvaWQgMDticmVhayBhfWM9Yy5yZXR1cm59Mz09PWEudGFnJiYoYz1UZihiLGEpLGM9YWgoYSxjLDEpLE1mKGEsYywxKSxrZyhhLDEpKTtjPXZvaWQgMH1yZXR1cm4gY31cbmZ1bmN0aW9uIHloKCl7dmFyIGE9MisyNSooKChpZygpLTIrNTAwKS8yNXwwKSsxKTthPD1qaCYmKGE9amgrMSk7cmV0dXJuIGpoPWF9ZnVuY3Rpb24gamcoYSxiKXthPTAhPT1raD9raDpsaD9waD8xOlQ6Yi5tb2RlJjE/emg/MisxMCooKChhLTIrMTUpLzEwfDApKzEpOjIrMjUqKCgoYS0yKzUwMCkvMjV8MCkrMSk6MTt6aCYmKDA9PT1BaHx8YT5BaCkmJihBaD1hKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIGtnKGEsYil7Zm9yKDtudWxsIT09YTspe2lmKDA9PT1hLmV4cGlyYXRpb25UaW1lfHxhLmV4cGlyYXRpb25UaW1lPmIpYS5leHBpcmF0aW9uVGltZT1iO251bGwhPT1hLmFsdGVybmF0ZSYmKDA9PT1hLmFsdGVybmF0ZS5leHBpcmF0aW9uVGltZXx8YS5hbHRlcm5hdGUuZXhwaXJhdGlvblRpbWU+YikmJihhLmFsdGVybmF0ZS5leHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09YS5yZXR1cm4paWYoMz09PWEudGFnKXt2YXIgYz1hLnN0YXRlTm9kZTshbGgmJjAhPT1UJiZiPFQmJnJoKCk7dmFyIGQ9Yy5jdXJyZW50LmV4cGlyYXRpb25UaW1lO2xoJiYhcGgmJm1oPT09Y3x8d2goYyxkKTtCaD5DaCYmQShcIjE4NVwiKX1lbHNlIGJyZWFrO2E9YS5yZXR1cm59fWZ1bmN0aW9uIGlnKCl7aWg9YWYoKS1naDtyZXR1cm4gaGg9KGloLzEwfDApKzJ9XG5mdW5jdGlvbiBEaChhKXt2YXIgYj1raDtraD0yKzI1KigoKGlnKCktMis1MDApLzI1fDApKzEpO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7a2g9Yn19ZnVuY3Rpb24gRWgoYSxiLGMsZCxlKXt2YXIgZj1raDtraD0xO3RyeXtyZXR1cm4gYShiLGMsZCxlKX1maW5hbGx5e2toPWZ9fXZhciBGaD1udWxsLFY9bnVsbCxHaD0wLEhoPS0xLFc9ITEsWD1udWxsLFk9MCxBaD0wLEloPSExLEpoPSExLEtoPW51bGwsTGg9bnVsbCxaPSExLE1oPSExLHpoPSExLE5oPW51bGwsQ2g9MUUzLEJoPTAsT2g9MTtmdW5jdGlvbiBQaChhKXtpZigwIT09R2gpe2lmKGE+R2gpcmV0dXJuO2NmKEhoKX12YXIgYj1hZigpLWdoO0doPWE7SGg9YmYoUWgse3RpbWVvdXQ6MTAqKGEtMiktYn0pfVxuZnVuY3Rpb24gd2goYSxiKXtpZihudWxsPT09YS5uZXh0U2NoZWR1bGVkUm9vdClhLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPWIsbnVsbD09PVY/KEZoPVY9YSxhLm5leHRTY2hlZHVsZWRSb290PWEpOihWPVYubmV4dFNjaGVkdWxlZFJvb3Q9YSxWLm5leHRTY2hlZHVsZWRSb290PUZoKTtlbHNle3ZhciBjPWEucmVtYWluaW5nRXhwaXJhdGlvblRpbWU7aWYoMD09PWN8fGI8YylhLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPWJ9V3x8KFo/TWgmJihYPWEsWT0xLFJoKGEsMSwhMSkpOjE9PT1iP1NoKCk6UGgoYikpfVxuZnVuY3Rpb24gVGgoKXt2YXIgYT0wLGI9bnVsbDtpZihudWxsIT09Vilmb3IodmFyIGM9VixkPUZoO251bGwhPT1kOyl7dmFyIGU9ZC5yZW1haW5pbmdFeHBpcmF0aW9uVGltZTtpZigwPT09ZSl7bnVsbD09PWN8fG51bGw9PT1WP0EoXCIyNDRcIik6dm9pZCAwO2lmKGQ9PT1kLm5leHRTY2hlZHVsZWRSb290KXtGaD1WPWQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDticmVha31lbHNlIGlmKGQ9PT1GaClGaD1lPWQubmV4dFNjaGVkdWxlZFJvb3QsVi5uZXh0U2NoZWR1bGVkUm9vdD1lLGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtlbHNlIGlmKGQ9PT1WKXtWPWM7Vi5uZXh0U2NoZWR1bGVkUm9vdD1GaDtkLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBjLm5leHRTY2hlZHVsZWRSb290PWQubmV4dFNjaGVkdWxlZFJvb3QsZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2Q9Yy5uZXh0U2NoZWR1bGVkUm9vdH1lbHNle2lmKDA9PT1hfHxlPGEpYT1lLGI9ZDtpZihkPT09VilicmVhaztcbmM9ZDtkPWQubmV4dFNjaGVkdWxlZFJvb3R9fWM9WDtudWxsIT09YyYmYz09PWImJjE9PT1hP0JoKys6Qmg9MDtYPWI7WT1hfWZ1bmN0aW9uIFFoKGEpe1VoKDAsITAsYSl9ZnVuY3Rpb24gU2goKXtVaCgxLCExLG51bGwpfWZ1bmN0aW9uIFVoKGEsYixjKXtMaD1jO1RoKCk7aWYoYilmb3IoO251bGwhPT1YJiYwIT09WSYmKDA9PT1hfHxhPj1ZKSYmKCFJaHx8aWcoKT49WSk7KWlnKCksUmgoWCxZLCFJaCksVGgoKTtlbHNlIGZvcig7bnVsbCE9PVgmJjAhPT1ZJiYoMD09PWF8fGE+PVkpOylSaChYLFksITEpLFRoKCk7bnVsbCE9PUxoJiYoR2g9MCxIaD0tMSk7MCE9PVkmJlBoKFkpO0xoPW51bGw7SWg9ITE7VmgoKX1mdW5jdGlvbiBXaChhLGIpe1c/QShcIjI1M1wiKTp2b2lkIDA7WD1hO1k9YjtSaChhLGIsITEpO1NoKCk7VmgoKX1cbmZ1bmN0aW9uIFZoKCl7Qmg9MDtpZihudWxsIT09Tmgpe3ZhciBhPU5oO05oPW51bGw7Zm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBjPWFbYl07dHJ5e2MuX29uQ29tcGxldGUoKX1jYXRjaChkKXtKaHx8KEpoPSEwLEtoPWQpfX19aWYoSmgpdGhyb3cgYT1LaCxLaD1udWxsLEpoPSExLGE7fWZ1bmN0aW9uIFJoKGEsYixjKXtXP0EoXCIyNDVcIik6dm9pZCAwO1c9ITA7Yz8oYz1hLmZpbmlzaGVkV29yayxudWxsIT09Yz9YaChhLGMsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsYz11aChhLGIsITApLG51bGwhPT1jJiYodmgoKT9hLmZpbmlzaGVkV29yaz1jOlhoKGEsYyxiKSkpKTooYz1hLmZpbmlzaGVkV29yayxudWxsIT09Yz9YaChhLGMsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsYz11aChhLGIsITEpLG51bGwhPT1jJiZYaChhLGMsYikpKTtXPSExfVxuZnVuY3Rpb24gWGgoYSxiLGMpe3ZhciBkPWEuZmlyc3RCYXRjaDtpZihudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU8PWMmJihudWxsPT09Tmg/Tmg9W2RdOk5oLnB1c2goZCksZC5fZGVmZXIpKXthLmZpbmlzaGVkV29yaz1iO2EucmVtYWluaW5nRXhwaXJhdGlvblRpbWU9MDtyZXR1cm59YS5maW5pc2hlZFdvcms9bnVsbDtwaD1saD0hMDtjPWIuc3RhdGVOb2RlO2MuY3VycmVudD09PWI/QShcIjE3N1wiKTp2b2lkIDA7ZD1jLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZTswPT09ZD9BKFwiMjYxXCIpOnZvaWQgMDtjLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT0wO2lnKCk7ZWMuY3VycmVudD1udWxsO2lmKDE8Yi5lZmZlY3RUYWcpaWYobnVsbCE9PWIubGFzdEVmZmVjdCl7Yi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9Yjt2YXIgZT1iLmZpcnN0RWZmZWN0fWVsc2UgZT1iO2Vsc2UgZT1iLmZpcnN0RWZmZWN0O1hlPUdkO3ZhciBmPWRhKCk7aWYoVGQoZikpe2lmKFwic2VsZWN0aW9uU3RhcnRcImluXG5mKXZhciBnPXtzdGFydDpmLnNlbGVjdGlvblN0YXJ0LGVuZDpmLnNlbGVjdGlvbkVuZH07ZWxzZSBhOnt2YXIgaD13aW5kb3cuZ2V0U2VsZWN0aW9uJiZ3aW5kb3cuZ2V0U2VsZWN0aW9uKCk7aWYoaCYmMCE9PWgucmFuZ2VDb3VudCl7Zz1oLmFuY2hvck5vZGU7dmFyIGs9aC5hbmNob3JPZmZzZXQsbj1oLmZvY3VzTm9kZTtoPWguZm9jdXNPZmZzZXQ7dHJ5e2cubm9kZVR5cGUsbi5ub2RlVHlwZX1jYXRjaChXYSl7Zz1udWxsO2JyZWFrIGF9dmFyIHI9MCx3PS0xLFA9LTEsa2M9MCxIZD0wLEU9Zix0PW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgeDs7KXtFIT09Z3x8MCE9PWsmJjMhPT1FLm5vZGVUeXBlfHwodz1yK2spO0UhPT1ufHwwIT09aCYmMyE9PUUubm9kZVR5cGV8fChQPXIraCk7Mz09PUUubm9kZVR5cGUmJihyKz1FLm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0oeD1FLmZpcnN0Q2hpbGQpKWJyZWFrO3Q9RTtFPXh9Zm9yKDs7KXtpZihFPT09ZilicmVhayBiO3Q9PT1nJiZcbisra2M9PT1rJiYodz1yKTt0PT09biYmKytIZD09PWgmJihQPXIpO2lmKG51bGwhPT0oeD1FLm5leHRTaWJsaW5nKSlicmVhaztFPXQ7dD1FLnBhcmVudE5vZGV9RT14fWc9LTE9PT13fHwtMT09PVA/bnVsbDp7c3RhcnQ6dyxlbmQ6UH19ZWxzZSBnPW51bGx9Zz1nfHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBnPW51bGw7WWU9e2ZvY3VzZWRFbGVtOmYsc2VsZWN0aW9uUmFuZ2U6Z307SWQoITEpO2ZvcihVPWU7bnVsbCE9PVU7KXtmPSExO2c9dm9pZCAwO3RyeXtmb3IoO251bGwhPT1VOyl7aWYoVS5lZmZlY3RUYWcmMjU2KXt2YXIgdT1VLmFsdGVybmF0ZTtrPVU7c3dpdGNoKGsudGFnKXtjYXNlIDI6aWYoay5lZmZlY3RUYWcmMjU2JiZudWxsIT09dSl7dmFyIHk9dS5tZW1vaXplZFByb3BzLEQ9dS5tZW1vaXplZFN0YXRlLGphPWsuc3RhdGVOb2RlO2phLnByb3BzPWsubWVtb2l6ZWRQcm9wcztqYS5zdGF0ZT1rLm1lbW9pemVkU3RhdGU7dmFyIGhpPWphLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKHksXG5EKTtqYS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1oaX1icmVhaztjYXNlIDM6Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6YnJlYWs7ZGVmYXVsdDpBKFwiMTYzXCIpfX1VPVUubmV4dEVmZmVjdH19Y2F0Y2goV2Epe2Y9ITAsZz1XYX1mJiYobnVsbD09PVU/QShcIjE3OFwiKTp2b2lkIDAsVmcoVSxnKSxudWxsIT09VSYmKFU9VS5uZXh0RWZmZWN0KSl9Zm9yKFU9ZTtudWxsIT09VTspe3U9ITE7eT12b2lkIDA7dHJ5e2Zvcig7bnVsbCE9PVU7KXt2YXIgcT1VLmVmZmVjdFRhZztxJjE2JiZHZShVLnN0YXRlTm9kZSxcIlwiKTtpZihxJjEyOCl7dmFyIHo9VS5hbHRlcm5hdGU7aWYobnVsbCE9PXope3ZhciBsPXoucmVmO251bGwhPT1sJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGw/bChudWxsKTpsLmN1cnJlbnQ9bnVsbCl9fXN3aXRjaChxJjE0KXtjYXNlIDI6WmcoVSk7VS5lZmZlY3RUYWcmPS0zO2JyZWFrO2Nhc2UgNjpaZyhVKTtVLmVmZmVjdFRhZyY9LTM7JGcoVS5hbHRlcm5hdGUsXG5VKTticmVhaztjYXNlIDQ6JGcoVS5hbHRlcm5hdGUsVSk7YnJlYWs7Y2FzZSA4OkQ9VSxYZyhEKSxELnJldHVybj1udWxsLEQuY2hpbGQ9bnVsbCxELmFsdGVybmF0ZSYmKEQuYWx0ZXJuYXRlLmNoaWxkPW51bGwsRC5hbHRlcm5hdGUucmV0dXJuPW51bGwpfVU9VS5uZXh0RWZmZWN0fX1jYXRjaChXYSl7dT0hMCx5PVdhfXUmJihudWxsPT09VT9BKFwiMTc4XCIpOnZvaWQgMCxWZyhVLHkpLG51bGwhPT1VJiYoVT1VLm5leHRFZmZlY3QpKX1sPVllO3o9ZGEoKTtxPWwuZm9jdXNlZEVsZW07dT1sLnNlbGVjdGlvblJhbmdlO2lmKHohPT1xJiZmYShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQscSkpe1RkKHEpJiYoej11LnN0YXJ0LGw9dS5lbmQsdm9pZCAwPT09bCYmKGw9eiksXCJzZWxlY3Rpb25TdGFydFwiaW4gcT8ocS5zZWxlY3Rpb25TdGFydD16LHEuc2VsZWN0aW9uRW5kPU1hdGgubWluKGwscS52YWx1ZS5sZW5ndGgpKTp3aW5kb3cuZ2V0U2VsZWN0aW9uJiYoej13aW5kb3cuZ2V0U2VsZWN0aW9uKCksXG55PXFbbGIoKV0ubGVuZ3RoLGw9TWF0aC5taW4odS5zdGFydCx5KSx1PXZvaWQgMD09PXUuZW5kP2w6TWF0aC5taW4odS5lbmQseSksIXouZXh0ZW5kJiZsPnUmJih5PXUsdT1sLGw9eSkseT1TZChxLGwpLEQ9U2QocSx1KSx5JiZEJiYoMSE9PXoucmFuZ2VDb3VudHx8ei5hbmNob3JOb2RlIT09eS5ub2RlfHx6LmFuY2hvck9mZnNldCE9PXkub2Zmc2V0fHx6LmZvY3VzTm9kZSE9PUQubm9kZXx8ei5mb2N1c09mZnNldCE9PUQub2Zmc2V0KSYmKGphPWRvY3VtZW50LmNyZWF0ZVJhbmdlKCksamEuc2V0U3RhcnQoeS5ub2RlLHkub2Zmc2V0KSx6LnJlbW92ZUFsbFJhbmdlcygpLGw+dT8oei5hZGRSYW5nZShqYSksei5leHRlbmQoRC5ub2RlLEQub2Zmc2V0KSk6KGphLnNldEVuZChELm5vZGUsRC5vZmZzZXQpLHouYWRkUmFuZ2UoamEpKSkpKTt6PVtdO2ZvcihsPXE7bD1sLnBhcmVudE5vZGU7KTE9PT1sLm5vZGVUeXBlJiZ6LnB1c2goe2VsZW1lbnQ6bCxsZWZ0Omwuc2Nyb2xsTGVmdCxcbnRvcDpsLnNjcm9sbFRvcH0pO3EuZm9jdXMoKTtmb3IocT0wO3E8ei5sZW5ndGg7cSsrKWw9eltxXSxsLmVsZW1lbnQuc2Nyb2xsTGVmdD1sLmxlZnQsbC5lbGVtZW50LnNjcm9sbFRvcD1sLnRvcH1ZZT1udWxsO0lkKFhlKTtYZT1udWxsO2MuY3VycmVudD1iO2ZvcihVPWU7bnVsbCE9PVU7KXtlPSExO3E9dm9pZCAwO3RyeXtmb3Ioej1kO251bGwhPT1VOyl7dmFyIGdnPVUuZWZmZWN0VGFnO2lmKGdnJjM2KXt2YXIgbGM9VS5hbHRlcm5hdGU7bD1VO3U9ejtzd2l0Y2gobC50YWcpe2Nhc2UgMjp2YXIgYmE9bC5zdGF0ZU5vZGU7aWYobC5lZmZlY3RUYWcmNClpZihudWxsPT09bGMpYmEucHJvcHM9bC5tZW1vaXplZFByb3BzLGJhLnN0YXRlPWwubWVtb2l6ZWRTdGF0ZSxiYS5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIHJpPWxjLm1lbW9pemVkUHJvcHMsc2k9bGMubWVtb2l6ZWRTdGF0ZTtiYS5wcm9wcz1sLm1lbW9pemVkUHJvcHM7YmEuc3RhdGU9bC5tZW1vaXplZFN0YXRlO1xuYmEuY29tcG9uZW50RGlkVXBkYXRlKHJpLHNpLGJhLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKX12YXIgTWc9bC51cGRhdGVRdWV1ZTtudWxsIT09TWcmJihiYS5wcm9wcz1sLm1lbW9pemVkUHJvcHMsYmEuc3RhdGU9bC5tZW1vaXplZFN0YXRlLFNmKGwsTWcsYmEsdSkpO2JyZWFrO2Nhc2UgMzp2YXIgTmc9bC51cGRhdGVRdWV1ZTtpZihudWxsIT09Tmcpe3k9bnVsbDtpZihudWxsIT09bC5jaGlsZClzd2l0Y2gobC5jaGlsZC50YWcpe2Nhc2UgNTp5PWwuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMjp5PWwuY2hpbGQuc3RhdGVOb2RlfVNmKGwsTmcseSx1KX1icmVhaztjYXNlIDU6dmFyIHRpPWwuc3RhdGVOb2RlO251bGw9PT1sYyYmbC5lZmZlY3RUYWcmNCYmWmUobC50eXBlLGwubWVtb2l6ZWRQcm9wcykmJnRpLmZvY3VzKCk7YnJlYWs7Y2FzZSA2OmJyZWFrO2Nhc2UgNDpicmVhaztjYXNlIDE1OmJyZWFrO2Nhc2UgMTY6YnJlYWs7ZGVmYXVsdDpBKFwiMTYzXCIpfX1pZihnZyZcbjEyOCl7bD12b2lkIDA7dmFyIHVjPVUucmVmO2lmKG51bGwhPT11Yyl7dmFyIE9nPVUuc3RhdGVOb2RlO3N3aXRjaChVLnRhZyl7Y2FzZSA1Omw9T2c7YnJlYWs7ZGVmYXVsdDpsPU9nfVwiZnVuY3Rpb25cIj09PXR5cGVvZiB1Yz91YyhsKTp1Yy5jdXJyZW50PWx9fXZhciB1aT1VLm5leHRFZmZlY3Q7VS5uZXh0RWZmZWN0PW51bGw7VT11aX19Y2F0Y2goV2Epe2U9ITAscT1XYX1lJiYobnVsbD09PVU/QShcIjE3OFwiKTp2b2lkIDAsVmcoVSxxKSxudWxsIT09VSYmKFU9VS5uZXh0RWZmZWN0KSl9bGg9cGg9ITE7XCJmdW5jdGlvblwiPT09dHlwZW9mIEZmJiZGZihiLnN0YXRlTm9kZSk7Yj1jLmN1cnJlbnQuZXhwaXJhdGlvblRpbWU7MD09PWImJihkaD1udWxsKTthLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPWJ9ZnVuY3Rpb24gdmgoKXtyZXR1cm4gbnVsbD09PUxofHxMaC50aW1lUmVtYWluaW5nKCk+T2g/ITE6SWg9ITB9XG5mdW5jdGlvbiBiaChhKXtudWxsPT09WD9BKFwiMjQ2XCIpOnZvaWQgMDtYLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPTA7Smh8fChKaD0hMCxLaD1hKX1mdW5jdGlvbiB4aChhKXtudWxsPT09WD9BKFwiMjQ2XCIpOnZvaWQgMDtYLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPWF9ZnVuY3Rpb24gWWgoYSxiKXt2YXIgYz1aO1o9ITA7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7KFo9Yyl8fFd8fFNoKCl9fWZ1bmN0aW9uIFpoKGEsYil7aWYoWiYmIU1oKXtNaD0hMDt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtNaD0hMX19cmV0dXJuIGEoYil9ZnVuY3Rpb24gJGgoYSxiKXtXP0EoXCIxODdcIik6dm9pZCAwO3ZhciBjPVo7Wj0hMDt0cnl7cmV0dXJuIEVoKGEsYil9ZmluYWxseXtaPWMsU2goKX19ZnVuY3Rpb24gYWkoYSl7dmFyIGI9WjtaPSEwO3RyeXtFaChhKX1maW5hbGx5eyhaPWIpfHxXfHxVaCgxLCExLG51bGwpfX1cbmZ1bmN0aW9uIGJpKGEsYixjLGQsZSl7dmFyIGY9Yi5jdXJyZW50O2lmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBnO2I6ezI9PT1pZChjKSYmMj09PWMudGFnP3ZvaWQgMDpBKFwiMTcwXCIpO2ZvcihnPWM7MyE9PWcudGFnOyl7aWYobWYoZykpe2c9Zy5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYn0oZz1nLnJldHVybik/dm9pZCAwOkEoXCIxNzFcIil9Zz1nLnN0YXRlTm9kZS5jb250ZXh0fWM9bWYoYyk/cmYoYyxnKTpnfWVsc2UgYz1oYTtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPWU7ZT1LZihkKTtlLnBheWxvYWQ9e2VsZW1lbnQ6YX07Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmKGUuY2FsbGJhY2s9Yik7TWYoZixlLGQpO2tnKGYsZCk7cmV0dXJuIGR9XG5mdW5jdGlvbiBjaShhKXt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7dm9pZCAwPT09YiYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcj9BKFwiMTg4XCIpOkEoXCIyNjhcIixPYmplY3Qua2V5cyhhKSkpO2E9bGQoYik7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9ZnVuY3Rpb24gZGkoYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9aWcoKTtlPWpnKGYsZSk7cmV0dXJuIGJpKGEsYixjLGUsZCl9ZnVuY3Rpb24gZWkoYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1cbmZ1bmN0aW9uIGZpKGEpe3ZhciBiPWEuZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U7cmV0dXJuIEVmKHAoe30sYSx7ZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1sZChhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGI/YihhKTpudWxsfX0pKX1cbnZhciBnaT17dXBkYXRlQ29udGFpbmVyQXRFeHBpcmF0aW9uVGltZTpiaSxjcmVhdGVDb250YWluZXI6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBBZihhLGIsYyl9LHVwZGF0ZUNvbnRhaW5lcjpkaSxmbHVzaFJvb3Q6V2gscmVxdWVzdFdvcms6d2gsY29tcHV0ZVVuaXF1ZUFzeW5jRXhwaXJhdGlvbjp5aCxiYXRjaGVkVXBkYXRlczpZaCx1bmJhdGNoZWRVcGRhdGVzOlpoLGRlZmVycmVkVXBkYXRlczpEaCxzeW5jVXBkYXRlczpFaCxpbnRlcmFjdGl2ZVVwZGF0ZXM6ZnVuY3Rpb24oYSxiLGMpe2lmKHpoKXJldHVybiBhKGIsYyk7Wnx8V3x8MD09PUFofHwoVWgoQWgsITEsbnVsbCksQWg9MCk7dmFyIGQ9emgsZT1aO1o9emg9ITA7dHJ5e3JldHVybiBhKGIsYyl9ZmluYWxseXt6aD1kLChaPWUpfHxXfHxTaCgpfX0sZmx1c2hJbnRlcmFjdGl2ZVVwZGF0ZXM6ZnVuY3Rpb24oKXtXfHwwPT09QWh8fChVaChBaCwhMSxudWxsKSxBaD0wKX0sZmx1c2hDb250cm9sbGVkOmFpLGZsdXNoU3luYzokaCxcbmdldFB1YmxpY1Jvb3RJbnN0YW5jZTplaSxmaW5kSG9zdEluc3RhbmNlOmNpLGZpbmRIb3N0SW5zdGFuY2VXaXRoTm9Qb3J0YWxzOmZ1bmN0aW9uKGEpe2E9bWQoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGluamVjdEludG9EZXZUb29sczpmaX07ZnVuY3Rpb24gaWkoYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjpnYyxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1LYi5pbmplY3RGaWJlckNvbnRyb2xsZWRIb3N0Q29tcG9uZW50KFdlKTtcbmZ1bmN0aW9uIGppKGEpe3RoaXMuX2V4cGlyYXRpb25UaW1lPXloKCk7dGhpcy5fcm9vdD1hO3RoaXMuX2NhbGxiYWNrcz10aGlzLl9uZXh0PW51bGw7dGhpcy5faGFzQ2hpbGRyZW49dGhpcy5fZGlkQ29tcGxldGU9ITE7dGhpcy5fY2hpbGRyZW49bnVsbDt0aGlzLl9kZWZlcj0hMH1qaS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe3RoaXMuX2RlZmVyP3ZvaWQgMDpBKFwiMjUwXCIpO3RoaXMuX2hhc0NoaWxkcmVuPSEwO3RoaXMuX2NoaWxkcmVuPWE7dmFyIGI9dGhpcy5fcm9vdC5faW50ZXJuYWxSb290LGM9dGhpcy5fZXhwaXJhdGlvblRpbWUsZD1uZXcga2k7YmkoYSxiLG51bGwsYyxkLl9vbkNvbW1pdCk7cmV0dXJuIGR9O2ppLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKGEpe2lmKHRoaXMuX2RpZENvbXBsZXRlKWEoKTtlbHNle3ZhciBiPXRoaXMuX2NhbGxiYWNrcztudWxsPT09YiYmKGI9dGhpcy5fY2FsbGJhY2tzPVtdKTtiLnB1c2goYSl9fTtcbmppLnByb3RvdHlwZS5jb21taXQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLl9yb290Ll9pbnRlcm5hbFJvb3QsYj1hLmZpcnN0QmF0Y2g7dGhpcy5fZGVmZXImJm51bGwhPT1iP3ZvaWQgMDpBKFwiMjUxXCIpO2lmKHRoaXMuX2hhc0NoaWxkcmVuKXt2YXIgYz10aGlzLl9leHBpcmF0aW9uVGltZTtpZihiIT09dGhpcyl7dGhpcy5faGFzQ2hpbGRyZW4mJihjPXRoaXMuX2V4cGlyYXRpb25UaW1lPWIuX2V4cGlyYXRpb25UaW1lLHRoaXMucmVuZGVyKHRoaXMuX2NoaWxkcmVuKSk7Zm9yKHZhciBkPW51bGwsZT1iO2UhPT10aGlzOylkPWUsZT1lLl9uZXh0O251bGw9PT1kP0EoXCIyNTFcIik6dm9pZCAwO2QuX25leHQ9ZS5fbmV4dDt0aGlzLl9uZXh0PWI7YS5maXJzdEJhdGNoPXRoaXN9dGhpcy5fZGVmZXI9ITE7V2goYSxjKTtiPXRoaXMuX25leHQ7dGhpcy5fbmV4dD1udWxsO2I9YS5maXJzdEJhdGNoPWI7bnVsbCE9PWImJmIuX2hhc0NoaWxkcmVuJiZiLnJlbmRlcihiLl9jaGlsZHJlbil9ZWxzZSB0aGlzLl9uZXh0PVxubnVsbCx0aGlzLl9kZWZlcj0hMX07amkucHJvdG90eXBlLl9vbkNvbXBsZXRlPWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2RpZENvbXBsZXRlKXt0aGlzLl9kaWRDb21wbGV0ZT0hMDt2YXIgYT10aGlzLl9jYWxsYmFja3M7aWYobnVsbCE9PWEpZm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspKDAsYVtiXSkoKX19O2Z1bmN0aW9uIGtpKCl7dGhpcy5fY2FsbGJhY2tzPW51bGw7dGhpcy5fZGlkQ29tbWl0PSExO3RoaXMuX29uQ29tbWl0PXRoaXMuX29uQ29tbWl0LmJpbmQodGhpcyl9a2kucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oYSl7aWYodGhpcy5fZGlkQ29tbWl0KWEoKTtlbHNle3ZhciBiPXRoaXMuX2NhbGxiYWNrcztudWxsPT09YiYmKGI9dGhpcy5fY2FsbGJhY2tzPVtdKTtiLnB1c2goYSl9fTtcbmtpLnByb3RvdHlwZS5fb25Db21taXQ9ZnVuY3Rpb24oKXtpZighdGhpcy5fZGlkQ29tbWl0KXt0aGlzLl9kaWRDb21taXQ9ITA7dmFyIGE9dGhpcy5fY2FsbGJhY2tzO2lmKG51bGwhPT1hKWZvcih2YXIgYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgYz1hW2JdO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP0EoXCIxOTFcIixjKTp2b2lkIDA7YygpfX19O2Z1bmN0aW9uIGxpKGEsYixjKXt0aGlzLl9pbnRlcm5hbFJvb3Q9QWYoYSxiLGMpfWxpLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1uZXcga2k7Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmZC50aGVuKGIpO2RpKGEsYyxudWxsLGQuX29uQ29tbWl0KTtyZXR1cm4gZH07XG5saS5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLl9pbnRlcm5hbFJvb3QsYz1uZXcga2k7YT12b2lkIDA9PT1hP251bGw6YTtudWxsIT09YSYmYy50aGVuKGEpO2RpKG51bGwsYixudWxsLGMuX29uQ29tbWl0KTtyZXR1cm4gY307bGkucHJvdG90eXBlLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcy5faW50ZXJuYWxSb290LGU9bmV3IGtpO2M9dm9pZCAwPT09Yz9udWxsOmM7bnVsbCE9PWMmJmUudGhlbihjKTtkaShiLGQsYSxlLl9vbkNvbW1pdCk7cmV0dXJuIGV9O1xubGkucHJvdG90eXBlLmNyZWF0ZUJhdGNoPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IGppKHRoaXMpLGI9YS5fZXhwaXJhdGlvblRpbWUsYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1jLmZpcnN0QmF0Y2g7aWYobnVsbD09PWQpYy5maXJzdEJhdGNoPWEsYS5fbmV4dD1udWxsO2Vsc2V7Zm9yKGM9bnVsbDtudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU8PWI7KWM9ZCxkPWQuX25leHQ7YS5fbmV4dD1kO251bGwhPT1jJiYoYy5fbmV4dD1hKX1yZXR1cm4gYX07ZnVuY3Rpb24gbWkoYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfVNiPWdpLmJhdGNoZWRVcGRhdGVzO1RiPWdpLmludGVyYWN0aXZlVXBkYXRlcztVYj1naS5mbHVzaEludGVyYWN0aXZlVXBkYXRlcztcbmZ1bmN0aW9uIG5pKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgbGkoYSwhMSxiKX1cbmZ1bmN0aW9uIG9pKGEsYixjLGQsZSl7bWkoYyk/dm9pZCAwOkEoXCIyMDBcIik7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgZz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1laShmLl9pbnRlcm5hbFJvb3QpO2cuY2FsbChhKX19bnVsbCE9YT9mLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcihhLGIsZSk6Zi5yZW5kZXIoYixlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPW5pKGMsZCk7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPWVpKGYuX2ludGVybmFsUm9vdCk7aC5jYWxsKGEpfX1aaChmdW5jdGlvbigpe251bGwhPWE/Zi5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIoYSxiLGUpOmYucmVuZGVyKGIsZSl9KX1yZXR1cm4gZWkoZi5faW50ZXJuYWxSb290KX1cbmZ1bmN0aW9uIHBpKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7bWkoYik/dm9pZCAwOkEoXCIyMDBcIik7cmV0dXJuIGlpKGEsYixudWxsLGMpfVxudmFyIHFpPXtjcmVhdGVQb3J0YWw6cGksZmluZERPTU5vZGU6ZnVuY3Rpb24oYSl7cmV0dXJuIG51bGw9PWE/bnVsbDoxPT09YS5ub2RlVHlwZT9hOmNpKGEpfSxoeWRyYXRlOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gb2kobnVsbCxhLGIsITAsYyl9LHJlbmRlcjpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIG9pKG51bGwsYSxiLCExLGMpfSx1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcjpmdW5jdGlvbihhLGIsYyxkKXtudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXI/QShcIjM4XCIpOnZvaWQgMDtyZXR1cm4gb2koYSxiLGMsITEsZCl9LHVubW91bnRDb21wb25lbnRBdE5vZGU6ZnVuY3Rpb24oYSl7bWkoYSk/dm9pZCAwOkEoXCI0MFwiKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhaaChmdW5jdGlvbigpe29pKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGx9KX0pLCEwKTohMX0sdW5zdGFibGVfY3JlYXRlUG9ydGFsOmZ1bmN0aW9uKCl7cmV0dXJuIHBpLmFwcGx5KHZvaWQgMCxcbmFyZ3VtZW50cyl9LHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzOlloLHVuc3RhYmxlX2RlZmVycmVkVXBkYXRlczpEaCxmbHVzaFN5bmM6JGgsdW5zdGFibGVfZmx1c2hDb250cm9sbGVkOmFpLF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntFdmVudFBsdWdpbkh1YjpLYSxFdmVudFBsdWdpblJlZ2lzdHJ5OnZhLEV2ZW50UHJvcGFnYXRvcnM6JGEsUmVhY3RDb250cm9sbGVkQ29tcG9uZW50OlJiLFJlYWN0RE9NQ29tcG9uZW50VHJlZTpRYSxSZWFjdERPTUV2ZW50TGlzdGVuZXI6TWR9LHVuc3RhYmxlX2NyZWF0ZVJvb3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gbmV3IGxpKGEsITAsbnVsbCE9YiYmITA9PT1iLmh5ZHJhdGUpfX07Zmkoe2ZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOk5hLGJ1bmRsZVR5cGU6MCx2ZXJzaW9uOlwiMTYuNC4wXCIscmVuZGVyZXJQYWNrYWdlTmFtZTpcInJlYWN0LWRvbVwifSk7XG52YXIgdmk9e2RlZmF1bHQ6cWl9LHdpPXZpJiZxaXx8dmk7bW9kdWxlLmV4cG9ydHM9d2kuZGVmYXVsdD93aS5kZWZhdWx0OndpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi40LjBcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBrPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49cmVxdWlyZShcImZianMvbGliL2ludmFyaWFudFwiKSxwPXJlcXVpcmUoXCJmYmpzL2xpYi9lbXB0eU9iamVjdFwiKSxxPXJlcXVpcmUoXCJmYmpzL2xpYi9lbXB0eUZ1bmN0aW9uXCIpLHI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcix0PXI/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsdT1yP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsdj1yP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyx3PXI/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LHg9cj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQseT1yP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSx6PXI/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsQT1yP1N5bWJvbC5mb3IoXCJyZWFjdC5hc3luY19tb2RlXCIpOjYwMTExLEI9XG5yP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMjtyJiZTeW1ib2wuZm9yKFwicmVhY3QudGltZW91dFwiKTt2YXIgQz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gRChhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGU9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MDtjPGI7YysrKWUrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2MrMV0pO24oITEsXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgJXMgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLiBcIixlKX1cbnZhciBFPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fTtmdW5jdGlvbiBGKGEsYixlKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPXA7dGhpcy51cGRhdGVyPWV8fEV9Ri5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtGLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe1wib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWE/RChcIjg1XCIpOnZvaWQgMDt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0YucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O2Z1bmN0aW9uIEcoKXt9XG5HLnByb3RvdHlwZT1GLnByb3RvdHlwZTtmdW5jdGlvbiBIKGEsYixlKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPXA7dGhpcy51cGRhdGVyPWV8fEV9dmFyIEk9SC5wcm90b3R5cGU9bmV3IEc7SS5jb25zdHJ1Y3Rvcj1IO2soSSxGLnByb3RvdHlwZSk7SS5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgSj17Y3VycmVudDpudWxsfSxLPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksTD17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gTShhLGIsZSl7dmFyIGM9dm9pZCAwLGQ9e30sZz1udWxsLGg9bnVsbDtpZihudWxsIT1iKWZvcihjIGluIHZvaWQgMCE9PWIucmVmJiYoaD1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihnPVwiXCIrYi5rZXkpLGIpSy5jYWxsKGIsYykmJiFMLmhhc093blByb3BlcnR5KGMpJiYoZFtjXT1iW2NdKTt2YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZC5jaGlsZHJlbj1lO2Vsc2UgaWYoMTxmKXtmb3IodmFyIGw9QXJyYXkoZiksbT0wO208ZjttKyspbFttXT1hcmd1bWVudHNbbSsyXTtkLmNoaWxkcmVuPWx9aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGMgaW4gZj1hLmRlZmF1bHRQcm9wcyxmKXZvaWQgMD09PWRbY10mJihkW2NdPWZbY10pO3JldHVybnskJHR5cGVvZjp0LHR5cGU6YSxrZXk6ZyxyZWY6aCxwcm9wczpkLF9vd25lcjpKLmN1cnJlbnR9fVxuZnVuY3Rpb24gTihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09dH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiKyhcIlwiK2EpLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBPPS9cXC8rL2csUD1bXTtmdW5jdGlvbiBRKGEsYixlLGMpe2lmKFAubGVuZ3RoKXt2YXIgZD1QLnBvcCgpO2QucmVzdWx0PWE7ZC5rZXlQcmVmaXg9YjtkLmZ1bmM9ZTtkLmNvbnRleHQ9YztkLmNvdW50PTA7cmV0dXJuIGR9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6ZSxjb250ZXh0OmMsY291bnQ6MH19ZnVuY3Rpb24gUihhKXthLnJlc3VsdD1udWxsO2Eua2V5UHJlZml4PW51bGw7YS5mdW5jPW51bGw7YS5jb250ZXh0PW51bGw7YS5jb3VudD0wOzEwPlAubGVuZ3RoJiZQLnB1c2goYSl9XG5mdW5jdGlvbiBTKGEsYixlLGMpe3ZhciBkPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1kfHxcImJvb2xlYW5cIj09PWQpYT1udWxsO3ZhciBnPSExO2lmKG51bGw9PT1hKWc9ITA7ZWxzZSBzd2l0Y2goZCl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpnPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSB0OmNhc2UgdTpnPSEwfX1pZihnKXJldHVybiBlKGMsYSxcIlwiPT09Yj9cIi5cIitUKGEsMCk6YiksMTtnPTA7Yj1cIlwiPT09Yj9cIi5cIjpiK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBoPTA7aDxhLmxlbmd0aDtoKyspe2Q9YVtoXTt2YXIgZj1iK1QoZCxoKTtnKz1TKGQsZixlLGMpfWVsc2UgaWYobnVsbD09PWF8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYT9mPW51bGw6KGY9QyYmYVtDXXx8YVtcIkBAaXRlcmF0b3JcIl0sZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgZj9mOm51bGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxcbmg9MDshKGQ9YS5uZXh0KCkpLmRvbmU7KWQ9ZC52YWx1ZSxmPWIrVChkLGgrKyksZys9UyhkLGYsZSxjKTtlbHNlXCJvYmplY3RcIj09PWQmJihlPVwiXCIrYSxEKFwiMzFcIixcIltvYmplY3QgT2JqZWN0XVwiPT09ZT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjplLFwiXCIpKTtyZXR1cm4gZ31mdW5jdGlvbiBUKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBVKGEsYil7YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKX1cbmZ1bmN0aW9uIFYoYSxiLGUpe3ZhciBjPWEucmVzdWx0LGQ9YS5rZXlQcmVmaXg7YT1hLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspO0FycmF5LmlzQXJyYXkoYSk/VyhhLGMsZSxxLnRoYXRSZXR1cm5zQXJndW1lbnQpOm51bGwhPWEmJihOKGEpJiYoYj1kKyghYS5rZXl8fGImJmIua2V5PT09YS5rZXk/XCJcIjooXCJcIithLmtleSkucmVwbGFjZShPLFwiJCYvXCIpK1wiL1wiKStlLGE9eyQkdHlwZW9mOnQsdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfSksYy5wdXNoKGEpKX1mdW5jdGlvbiBXKGEsYixlLGMsZCl7dmFyIGc9XCJcIjtudWxsIT1lJiYoZz0oXCJcIitlKS5yZXBsYWNlKE8sXCIkJi9cIikrXCIvXCIpO2I9UShiLGcsYyxkKTtudWxsPT1hfHxTKGEsXCJcIixWLGIpO1IoYil9XG52YXIgWD17Q2hpbGRyZW46e21hcDpmdW5jdGlvbihhLGIsZSl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgYz1bXTtXKGEsYyxudWxsLGIsZSk7cmV0dXJuIGN9LGZvckVhY2g6ZnVuY3Rpb24oYSxiLGUpe2lmKG51bGw9PWEpcmV0dXJuIGE7Yj1RKG51bGwsbnVsbCxiLGUpO251bGw9PWF8fFMoYSxcIlwiLFUsYik7UihiKX0sY291bnQ6ZnVuY3Rpb24oYSl7cmV0dXJuIG51bGw9PWE/MDpTKGEsXCJcIixxLnRoYXRSZXR1cm5zTnVsbCxudWxsKX0sdG9BcnJheTpmdW5jdGlvbihhKXt2YXIgYj1bXTtXKGEsYixudWxsLHEudGhhdFJldHVybnNBcmd1bWVudCk7cmV0dXJuIGJ9LG9ubHk6ZnVuY3Rpb24oYSl7TihhKT92b2lkIDA6RChcIjE0M1wiKTtyZXR1cm4gYX19LGNyZWF0ZVJlZjpmdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fSxDb21wb25lbnQ6RixQdXJlQ29tcG9uZW50OkgsY3JlYXRlQ29udGV4dDpmdW5jdGlvbihhLGIpe3ZvaWQgMD09PWImJihiPW51bGwpO2E9eyQkdHlwZW9mOnosXG5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM6YixfZGVmYXVsdFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX2NoYW5nZWRCaXRzOjAsX2NoYW5nZWRCaXRzMjowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6eSxfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfSxmb3J3YXJkUmVmOmZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjpCLHJlbmRlcjphfX0sRnJhZ21lbnQ6dixTdHJpY3RNb2RlOncsdW5zdGFibGVfQXN5bmNNb2RlOkEsdW5zdGFibGVfUHJvZmlsZXI6eCxjcmVhdGVFbGVtZW50Ok0sY2xvbmVFbGVtZW50OmZ1bmN0aW9uKGEsYixlKXtudWxsPT09YXx8dm9pZCAwPT09YT9EKFwiMjY3XCIsYSk6dm9pZCAwO3ZhciBjPXZvaWQgMCxkPWsoe30sYS5wcm9wcyksZz1hLmtleSxoPWEucmVmLGY9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihoPWIucmVmLGY9Si5jdXJyZW50KTt2b2lkIDAhPT1cbmIua2V5JiYoZz1cIlwiK2Iua2V5KTt2YXIgbD12b2lkIDA7YS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzJiYobD1hLnR5cGUuZGVmYXVsdFByb3BzKTtmb3IoYyBpbiBiKUsuY2FsbChiLGMpJiYhTC5oYXNPd25Qcm9wZXJ0eShjKSYmKGRbY109dm9pZCAwPT09YltjXSYmdm9pZCAwIT09bD9sW2NdOmJbY10pfWM9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1jKWQuY2hpbGRyZW49ZTtlbHNlIGlmKDE8Yyl7bD1BcnJheShjKTtmb3IodmFyIG09MDttPGM7bSsrKWxbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1sfXJldHVybnskJHR5cGVvZjp0LHR5cGU6YS50eXBlLGtleTpnLHJlZjpoLHByb3BzOmQsX293bmVyOmZ9fSxjcmVhdGVGYWN0b3J5OmZ1bmN0aW9uKGEpe3ZhciBiPU0uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifSxpc1ZhbGlkRWxlbWVudDpOLHZlcnNpb246XCIxNi40LjBcIixfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7UmVhY3RDdXJyZW50T3duZXI6SixcbmFzc2lnbjprfX0sWT17ZGVmYXVsdDpYfSxaPVkmJlh8fFk7bW9kdWxlLmV4cG9ydHM9Wi5kZWZhdWx0P1ouZGVmYXVsdDpaO1xuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCAqIGFzIFJlYWN0RE9NIGZyb20gXCJyZWFjdC1kb21cIjtcclxuXHJcbmltcG9ydCB7IGNvbm5lY3QsIFByb3ZpZGVyIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XHJcbmltcG9ydCB7IGNyZWF0ZVN0b3JlLCBhcHBseU1pZGRsZXdhcmUsIGNvbWJpbmVSZWR1Y2VycywgY29tcG9zZSwgTWlkZGxld2FyZSB9IGZyb20gXCJyZWR1eFwiO1xyXG5pbXBvcnQgdGh1bmsgZnJvbSBcInJlZHV4LXRodW5rXCI7XHJcbmltcG9ydCB7IGNyZWF0ZUxvZ2dlciB9IGZyb20gXCJyZWR1eC1sb2dnZXJcIjtcclxuXHJcbmltcG9ydCBFeHByZXNzaW9uRWRpdG9yIGZyb20gXCIuL2NvbnRhaW5lcnMvRXhwcmVzc2lvbkVkaXRvclwiO1xyXG5cclxuaW1wb3J0ICogYXMgcmVkdWNlcnMgZnJvbSBcIi4vc3RvcmUvcmVkdWNlcnNcIjtcclxuXHJcbmNvbnN0IGxvZ2dlck1pZGRsZXdhcmU6IE1pZGRsZXdhcmUgPSBjcmVhdGVMb2dnZXIoKTtcclxuY29uc3QgY29tcG9zZUVuaGFuY2VyczogYW55ID0gKHdpbmRvdyBhcyBhbnkpLl9fUkVEVVhfREVWVE9PTFNfRVhURU5TSU9OX0NPTVBPU0VfXyB8fCBjb21wb3NlO1xyXG5cclxuY29uc3Qgc3RvcmUgPSBjcmVhdGVTdG9yZShyZWR1Y2Vycy5leHByZXNzaW9ucywgXHJcbmNvbXBvc2VFbmhhbmNlcnMoXHJcbiAgICBhcHBseU1pZGRsZXdhcmUoXHJcbiAgICAgICAgdGh1bmssXHJcbiAgICAgICAgbG9nZ2VyTWlkZGxld2FyZVxyXG4gICAgKVxyXG4pKTtcclxuXHJcblJlYWN0RE9NLnJlbmRlcihcclxuICAgIDxQcm92aWRlciBzdG9yZT17c3RvcmV9PlxyXG4gICAgICAgIDxFeHByZXNzaW9uRWRpdG9yIC8+XHJcbiAgICA8L1Byb3ZpZGVyPixcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3cmFwcGVyJykgYXMgSFRNTEVsZW1lbnRcclxuKTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==